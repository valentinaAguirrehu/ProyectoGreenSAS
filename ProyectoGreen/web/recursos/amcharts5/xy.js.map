{"version":3,"file":"xy.js","mappings":"8QA+OO,MAAMA,UAAgB,IAA7B,c,oBAaC,oC,gDAA6D,IAAI,OAKjE,oC,gDAA6D,IAAI,OASjE,+C,gDAA8CC,KAAKC,eAAeC,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMC,OAAQP,KAAKK,MAAMG,oBAS5I,oD,gDAAmDR,KAAKC,eAAeC,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,KAAMF,OAAQP,KAAKK,MAAMK,sBAS/J,kD,gDAAiDV,KAAKC,eAAeC,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMC,OAAQP,KAAKK,MAAMG,oBAS/I,gD,gDAA+CR,KAAKW,sBAAsBT,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEI,OAAQ,KAAMF,OAAQP,KAAKK,MAAMK,sBAQrJ,6C,gDAA4CV,KAAKW,sBAAsBT,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,KAAMG,aAAa,OAazJ,4C,gDAA2CZ,KAAKa,eAAeX,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,UAS9H,+C,gDAA8CT,KAAKa,eAAeX,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,UAQjI,4C,gDAA2CT,KAAKc,cAAcZ,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,KAAMM,YAAY,OAQ/I,+C,gDAA8C,IAAUX,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,KAAMM,YAAY,MASjH,iD,gDAAgDf,KAAKW,sBAAsBT,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEI,OAAQ,KAAMF,OAAQP,KAAKK,MAAMK,sBAQtJ,mD,gDAAkDV,KAAKc,cAAcZ,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAC,MAQ9G,4C,gDAAwCL,KAAKgB,iBAAiBd,SAASC,KAAK,IAAOC,IAAIJ,KAAKK,MAAO,CAClGY,UAAW,CAAC,QACZC,KAAM,IAASd,IAAIJ,KAAKK,MAAO,CAC9BY,UAAW,CAAC,SAAU,eAIxB,yC,gDAA4B,CAAEE,EAAG,EAAGC,EAAG,KAEvC,uC,yDAEA,2C,yDAEA,0C,gDAAqD,CAAC,IAEtD,0C,yDACA,wC,yDAEA,0C,yDACA,wC,wDA21CD,CAz1CW,SAAAC,GACTrB,KAAKsB,eAAenB,KAAK,IAAoBC,IAAIJ,KAAKK,QAEtDkB,MAAMF,YAENrB,KAAKwB,WAAWrB,KAAKH,KAAKyB,OAC1BzB,KAAKwB,WAAWrB,KAAKH,KAAK0B,OAE1B,MAAMC,EAAO3B,KAAKK,MAElB,IAAIG,EAAiBR,KAAKK,MAAMG,eAEhC,MAAMoB,EAAgB5B,KAAK4B,cAC3BA,EAAcC,OAAOC,GAAG,SAAS,KAChC9B,KAAK+B,SAAS,IAEfH,EAAcI,KAAK,GACnBJ,EAAcK,OAAOC,OAAO,WAAYC,IAAI,UAAW,GAEvDnC,KAAKC,eAAekC,IAAI,SAAU3B,GAElC,MAAMM,EAAgBd,KAAKc,cAC3BA,EAAcZ,SAASC,KAAKH,KAAKoC,iBAEjCpC,KAAKwB,WAAWrB,KAAKH,KAAKqC,aAAarC,KAAKyB,MAAOzB,KAAKsC,sBACxDtC,KAAKwB,WAAWrB,KAAKH,KAAKqC,aAAarC,KAAK0B,MAAO1B,KAAKuC,oBAGxDzB,EAAcZ,SAASC,KAAKH,KAAKwC,kBACjC1B,EAAcZ,SAASC,KAAKH,KAAKyC,kBAIjC3B,EAAcqB,IAAI,eAAe,GACjCrB,EAAcqB,IAAI,uBAAuB,GACzCrB,EAAcqB,IAAI,aAAc,IAAU/B,IAAIuB,EAAM,CACnDV,UAAW,CAAC,iBAAkB,KAAM,iBAGrCjB,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,eAAgBY,IAC5D1C,KAAK2C,gBAAgBD,EAAM,KAG5B1C,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,mBAAoBY,IAChE1C,KAAK4C,cAAcF,EAAM,KAG1B1C,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,qBAAsBY,IAClE1C,KAAK6C,gBAAgBH,EAAM,KAG5B1C,KAAK8C,YACL9C,KAAK+C,aACN,CAEO,cAAAC,GACNzB,MAAMyB,kBAEFhD,KAAKiD,QAAQ,eAAiBjD,KAAKiD,QAAQ,eAAiBjD,KAAKkD,IAAI,SAAWlD,KAAKkD,IAAI,UAC5FlD,KAAK+C,aAGP,CAEU,WAAAA,GACJ/C,KAAKc,cAAcqC,SAASC,cAChCpD,KAAKc,cAAcqC,SAASC,eAAepD,KAAKkD,IAAI,eAAiBlD,KAAKkD,IAAI,eAAiBlD,KAAKkD,IAAI,SAAWlD,KAAKkD,IAAI,SAE9H,CAEU,SAAAJ,GACT9C,KAAKqD,cAAclB,IAAI,eAAe,GACtCnC,KAAKwC,iBAAiBL,IAAI,eAAe,EAC1C,CAEU,aAAAmB,CAAcC,GACvBA,EAAOC,WAEHD,EAAOE,SACVF,EAAOE,QAAQC,UAGZH,EAAOI,SACVJ,EAAOI,QAAQD,UAGhBH,EAAOpB,IAAI,gBAAYyB,GAEvB,MAAMC,EAAQN,EAAOL,IAAI,SACrBW,IACH,SAAcA,EAAMN,OAAQA,GAC5BM,EAAMC,qBAEP,MAAMC,EAAQR,EAAOL,IAAI,SACrBa,IACH,SAAcA,EAAMR,OAAQA,GAC5BQ,EAAMD,qBAGP,MAAME,EAAShE,KAAKkD,IAAI,UACxB,GAAIc,EAAQ,CACX,MAAMC,EAAeD,EAAOd,IAAI,gBAC5Be,GACH,SAAcA,EAAcV,E,CAI9BhC,MAAM+B,cAAcC,EACrB,CASO,WAAAW,CAAYxB,GAClB,MAAMyB,EAASnE,KAAKkD,IAAI,UAClBkB,EAASpE,KAAKkD,IAAI,UAClBpC,EAAgBd,KAAKc,cAErBuD,EAAa3B,EAAM4B,cAIzB,IAAI,eAAoBD,EAAYrE,MAInC,OAHAqE,EAAWE,iBAMZ,MAAMC,EAAY1D,EAAc2D,QAAQ/B,EAAMgC,OACxCC,EAAY3E,KAAKkD,IAAI,YAAa,IAElC0B,EAASP,EAAWQ,OAAS,IAC7BC,EAAST,EAAWU,OAAS,IAE7BC,EAAqBhF,KAAKkD,IAAI,sBAC9B+B,EAAqBjF,KAAKkD,IAAI,sBAEpB,UAAXiB,GAAiC,WAAXA,GAAkC,GAAVW,GAClD9E,KAAKyB,MAAMyD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,SAAU,CACtB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEfoC,EAAWH,EAAKI,YAAYf,EAAUrD,EAAIL,EAAcR,SAElC,MAAtB0E,IACHM,EAAWN,GAGZ,IAAIQ,EAAWJ,EAAQT,GAAaU,EAAMD,GAASN,EAASQ,EACxDG,EAASJ,EAAMV,GAAaU,EAAMD,GAASN,GAAU,EAAIQ,GACzD,GAAKG,EAASD,GAAYL,EAAKO,WAAW,gBAAiBC,KAAYR,EAAKjC,IAAI,eAAgB,IACnGlD,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAMnC,UAAXrB,GAAiC,WAAXA,GAAkC,GAAVQ,GAClD5E,KAAKyB,MAAMyD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,SAAU,CACtB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEfoC,EAAWH,EAAKI,YAAYf,EAAUrD,EAAIL,EAAcR,SAElC,MAAtB0E,IACHM,EAAWN,GAGZ,IAAIQ,EAAWJ,EAAQT,GAAaU,EAAMD,GAASR,EAASU,EACxDG,EAASJ,EAAMV,GAAaU,EAAMD,GAASR,GAAU,EAAIU,GAEzD,GAAKG,EAASD,GAAYL,EAAKO,WAAW,gBAAiBC,KAAYR,EAAKjC,IAAI,eAAgB,IACnGlD,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAOnC,UAAXtB,GAAiC,WAAXA,GAAkC,GAAVW,GAClD9E,KAAK0B,MAAMwD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,SAAU,CACtB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEfoC,EAAWH,EAAKI,YAAYf,EAAUpD,EAAIN,EAAcL,UAElC,MAAtBwE,IACHK,EAAWL,GAGZ,IAAIO,EAAWJ,EAAQT,GAAaU,EAAMD,GAASN,EAASQ,EACxDG,EAASJ,EAAMV,GAAaU,EAAMD,GAASN,GAAU,EAAIQ,GAEzD,GAAKG,EAASD,GAAYL,EAAKO,WAAW,gBAAiBC,KAAYR,EAAKjC,IAAI,eAAgB,IACnGlD,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAMnC,UAAXrB,GAAiC,WAAXA,GAAkC,GAAVQ,GAClD5E,KAAK0B,MAAMwD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,SAAU,CACtB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEfoC,EAAWH,EAAKI,YAAYf,EAAUpD,EAAIN,EAAcL,UAElC,MAAtBwE,IACHK,EAAWL,GAGZ,IAAIO,EAAWJ,EAAQT,GAAaU,EAAMD,GAASR,EAASU,EACxDG,EAASJ,EAAMV,GAAaU,EAAMD,GAASR,GAAU,EAAIU,GAEzD,GAAKG,EAASD,GAAYL,EAAKO,WAAW,gBAAiBC,KAAYR,EAAKjC,IAAI,eAAgB,IACnGlD,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAOnC,SAAXtB,GAAgC,UAAXA,GAAiC,GAAVW,GAChD9E,KAAKyB,MAAMyD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEf4C,EAAQ9F,KAAK+F,cAAcZ,GAAQR,GAAaU,EAAMD,GAASN,EAC/DU,EAAWJ,EAAQU,EACnBL,EAASJ,EAAMS,EAEfE,EAAKhG,KAAKiG,UAAUT,EAAUC,GAClCD,EAAWQ,EAAG,GACdP,EAASO,EAAG,GAEZhG,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAKlC,SAAXrB,GAAgC,UAAXA,GAAiC,GAAVQ,GAChD5E,KAAKyB,MAAMyD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEf4C,EAAQ9F,KAAK+F,cAAcZ,GAAQR,GAAaU,EAAMD,GAASR,EAC/DY,EAAWJ,EAAQU,EACnBL,EAASJ,EAAMS,EAEfE,EAAKhG,KAAKiG,UAAUT,EAAUC,GAClCD,EAAWQ,EAAG,GACdP,EAASO,EAAG,GAEZhG,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAKlC,SAAXtB,GAAgC,UAAXA,GAAiC,GAAVW,GAChD9E,KAAK0B,MAAMwD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEf4C,EAAQ9F,KAAK+F,cAAcZ,GAAQR,GAAaU,EAAMD,GAASN,EAC/DU,EAAWJ,EAAQU,EACnBL,EAASJ,EAAMS,EAEfE,EAAKhG,KAAKiG,UAAUT,EAAUC,GAClCD,EAAWQ,EAAG,GACdP,EAASO,EAAG,GAEZhG,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,KAKlC,SAAXrB,GAAgC,UAAXA,GAAiC,GAAVQ,GAChD5E,KAAK0B,MAAMwD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrB,IAAIkC,EAAQD,EAAKjC,IAAI,SACjBmC,EAAMF,EAAKjC,IAAI,OAEf4C,EAAQ9F,KAAK+F,cAAcZ,GAAQR,GAAaU,EAAMD,GAASR,EAC/DY,EAAWJ,EAAQU,EACnBL,EAASJ,EAAMS,EAEfE,EAAKhG,KAAKiG,UAAUT,EAAUC,GAClCD,EAAWQ,EAAG,GACdP,EAASO,EAAG,GAEZhG,KAAK4F,sBAAsBT,EAAKU,KAAKL,EAAUC,G,IAInD,CAEU,eAAAS,GACT,MAAM/B,EAASnE,KAAKkD,IAAI,UAClBkB,EAASpE,KAAKkD,IAAI,UAClBpC,EAAgBd,KAAKc,cAEZ,SAAXqD,GAAgC,SAAXC,GACxBpE,KAAKmG,SAAWrF,EAAce,OAAOC,GAAG,SAAUY,IACjD,MAAM2B,EAAa3B,EAAM4B,eACT,SAAXH,GAAoD,GAA/BiC,KAAKC,IAAIhC,EAAWU,SAA6B,SAAXX,GAAoD,GAA/BgC,KAAKC,IAAIhC,EAAWQ,UACxG7E,KAAKkE,YAAYxB,E,IAInB1C,KAAKwB,WAAWrB,KAAKH,KAAKmG,WAGtBnG,KAAKmG,UACRnG,KAAKmG,SAASzC,SAGjB,CAEU,aAAAqC,CAAcZ,GACvB,IAAImB,EAAO,EAKX,OAJInB,EAAKjC,IAAI,YAAYA,IAAI,cAC5BoD,GAAQ,GAGFA,CACR,CAEU,SAAAL,CAAUb,EAAeC,GAClC,MAAMkB,EAAOlB,EAAMD,EAUnB,OATIA,EAAQ,IAEXC,GADAD,EAAQ,GACMmB,GAEXlB,EAAM,IAETD,GADAC,EAAM,GACQkB,GAGR,CAACnB,EAAOC,EAChB,CAEU,eAAA1C,CAAgBD,GACzB,MAAM4B,EAAgB5B,EAAM4B,cAE5B,GAA4B,GAAxBA,EAAckC,OACjB,OAED,MAAM1F,EAAgBd,KAAKc,cAC3B,IAAI2F,EAAQ3F,EAAc2D,QAAQ/B,EAAMgC,OAExC,IAAI1E,KAAKkD,IAAI,eAAiBlD,KAAKkD,IAAI,gBACpBoB,EAAcoC,WAI3B,OAAa5F,EAAc6F,aAAaC,OAAS,EAAG,CACvD,MAAM/C,EAAQ7D,KAAKyB,MAAMoF,SAAS,GAC5B9C,EAAQ/D,KAAK0B,MAAMmF,SAAS,GAG9BhD,IACH7D,KAAK8G,YAAcjD,EAAMX,IAAI,QAAS,GACtClD,KAAK+G,UAAYlD,EAAMX,IAAI,MAAO,IAG/Ba,IACH/D,KAAKgH,YAAcjD,EAAMb,IAAI,QAAS,GACtClD,KAAKiH,UAAYlD,EAAMb,IAAI,MAAO,G,CAMtC,IAAIlD,KAAKkD,IAAI,SAAWlD,KAAKkD,IAAI,UAE5BuD,EAAMtF,GAAK,GAAKsF,EAAMrF,GAAK,GAAKqF,EAAMtF,GAAKL,EAAcR,SAAWmG,EAAMrF,GAAKpB,KAAKS,SAAU,CAEjGT,KAAKkH,WAAa,CAAE/F,EAAGmD,EAAc6C,QAAS/F,EAAGkD,EAAc8C,SAE/D,MAAMC,EAAOrH,KAAKkD,IAAI,QAChBoE,EAAOtH,KAAKkD,IAAI,QAElBmE,GACHrH,KAAKyB,MAAMyD,MAAMC,IAChBA,EAAKoC,UAAYpC,EAAKjC,IAAI,SAC1BiC,EAAKqC,QAAUrC,EAAKjC,IAAI,MAAO,IAG7BoE,GACHtH,KAAK0B,MAAMwD,MAAMC,IAChBA,EAAKoC,UAAYpC,EAAKjC,IAAI,SAC1BiC,EAAKqC,QAAUrC,EAAKjC,IAAI,MAAO,IAIjC,MAAMuE,EAAY,aACdzH,KAAK6B,OAAO6F,UAAUD,IACzBzH,KAAK6B,OAAO8F,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,CAI1F,CAEU,qBAAAsB,CAAsBkC,GAC3BA,EACHA,EAAUjG,OAAOC,GAAG,WAAW,KAC9B9B,KAAK+H,yBAAyB,IAI/B/H,KAAK+H,yBAEP,CAEU,uBAAAA,GACT,MAAMN,EAAY,aACdzH,KAAK6B,OAAO6F,UAAUD,IACzBzH,KAAK6B,OAAO8F,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQ7H,MAE7D,CAEU,aAAA4C,CAAcF,GACvB,MAAMsF,EAAYhI,KAAKkH,WACvB,GAAIc,IACChI,KAAKkD,IAAI,SAAWlD,KAAKkD,IAAI,SAAS,CACzC,GAAIR,EAAM4B,cAAc6C,SAAWa,EAAU7G,GAAKuB,EAAM4B,cAAc8C,SAAWY,EAAU5G,EAAG,CAC7F,MAAMqG,EAAY,eACdzH,KAAK6B,OAAO6F,UAAUD,IACzBzH,KAAK6B,OAAO8F,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,CAIxF,MAAMmD,EAAY,WACdzH,KAAK6B,OAAO6F,UAAUD,IACzBzH,KAAK6B,OAAO8F,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,CAMzFtE,KAAKkH,gBAAatD,EAClB5D,KAAKyB,MAAMyD,MAAMrB,IAChBA,EAAMoE,YAAa,CAAK,IAEzBjI,KAAK0B,MAAMwD,MAAMnB,IAChBA,EAAMkE,YAAa,CAAK,GAE1B,CAEU,eAAApF,CAAgBH,GACzB,MAAM5B,EAAgBd,KAAKc,cAE3B,GAAId,KAAKkD,IAAI,eAAiBlD,KAAKkD,IAAI,cAAe,CACrD,MACMwD,EADahE,EAAM4B,cACIoC,UAE7B,GAAIA,IACH1G,KAAKkI,YAAYxB,GAAahE,EAAMgC,MAEhC,OAAa5D,EAAc6F,aAAaC,OAAS,GAEpD,YADA5G,KAAKmI,c,CAMR,IAAIH,EAAYhI,KAAKkH,WAErB,GAAIc,EAAW,CAEdA,EAAYlH,EAAc2D,QAAQzE,KAAKK,MAAM+H,oBAAoBJ,IACjE,IAAIvB,EAAQ3F,EAAc2D,QAAQ/B,EAAMgC,OAExC,MAAM2C,EAAOrH,KAAKkD,IAAI,QAChBoE,EAAOtH,KAAKkD,IAAI,QAEtB,GAAImE,EAAM,CAET,IAAIgB,EAAarI,KAAKkD,IAAI,cACtBmF,GACHA,EAAWxG,OAAOyG,YAAY,gBAG/BtI,KAAKyB,MAAMyD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrBiC,EAAK8C,YAAa,EAElB,IAAIM,EAAWpD,EAAKoC,UAChBiB,EAASrD,EAAKqC,QAEdzC,GADcyD,EAASD,IACAP,EAAU7G,EAAIsF,EAAMtF,GAAKL,EAAcR,QAE9D6E,EAAKjC,IAAI,YAAYA,IAAI,cAC5B6B,IAAW,GAEZ,IAAIK,EAAQmD,EAAWxD,EACnBM,EAAMmD,EAASzD,EAEfM,EAAMD,EAAQ,EAAkC,EAA9BD,EAAKjC,IAAI,eAAgB,KAC9CiC,EAAKhD,IAAI,QAASiD,GAClBD,EAAKhD,IAAI,MAAOkD,G,KAIfgD,GACHA,EAAWxG,OAAO4G,WAAW,e,CAG/B,GAAInB,EAAM,CAET,IAAIoB,EAAa1I,KAAKkD,IAAI,cACtBwF,GACHA,EAAW7G,OAAOyG,YAAY,gBAG/BtI,KAAK0B,MAAMwD,MAAMC,IAChB,GAAIA,EAAKjC,IAAI,QAAS,CACrBiC,EAAK8C,YAAa,EAGlB,IAAIM,EAAWpD,EAAKoC,UAChBiB,EAASrD,EAAKqC,QAEd3C,GADc2D,EAASD,IACAP,EAAU5G,EAAIqF,EAAMrF,GAAKN,EAAcL,SAC9D0E,EAAKjC,IAAI,YAAYA,IAAI,cAC5B2B,IAAW,GAEZ,IAAIO,EAAQmD,EAAW1D,EACnBQ,EAAMmD,EAAS3D,EAEfQ,EAAMD,EAAQ,EAAkC,EAA9BD,EAAKjC,IAAI,eAAgB,KAC9CiC,EAAKhD,IAAI,QAASiD,GAClBD,EAAKhD,IAAI,MAAOkD,G,KAKfqD,GACHA,EAAW7G,OAAO4G,WAAW,e,EAMjC,CAEU,YAAAN,GACT,MAAMrH,EAAgBd,KAAKc,cAC3B,IAAI6H,EAAI,EACJC,EAA4B,GAC5BC,EAA4B,GAWhC,GATA,OAAa/H,EAAc6F,aAAa,CAACmC,EAAGpE,KAC3CkE,EAAWD,GAAKjE,EAChB,IAAIqE,EAAY/I,KAAKkI,YAAYY,GAC7BC,IACHF,EAAWF,GAAKI,GAEjBJ,GAAG,IAGAC,EAAWhC,OAAS,GAAKiC,EAAWjC,OAAS,EAAG,CACnD,MAAMoC,EAAIlI,EAAcR,QAClB2I,EAAInI,EAAcL,SAExB,IAAIyI,EAAaN,EAAW,GACxBO,EAAaP,EAAW,GAExBQ,EAAaP,EAAW,GACxBQ,EAAaR,EAAW,GAE5B,GAAIK,GAAcC,GAAcC,GAAcC,EAAY,CAQzD,GANAD,EAAatI,EAAc2D,QAAQ2E,GACnCC,EAAavI,EAAc2D,QAAQ4E,GAEnCH,EAAapI,EAAc2D,QAAQyE,GACnCC,EAAarI,EAAc2D,QAAQ0E,GAE/BnJ,KAAKkD,IAAI,cAAe,CAC3B,MAAMoG,EAAatJ,KAAK8G,YAClByC,EAAWvJ,KAAK+G,UAEtB,GAAkB,MAAduC,GAAkC,MAAZC,EAAkB,CAEvCL,EAAW/H,EAAIgI,EAAWhI,KAC5B+H,EAAYC,GAAc,CAACA,EAAYD,IACvCE,EAAYC,GAAc,CAACA,EAAYD,IAGzC,IAAII,EAAWF,EAAcJ,EAAW/H,EAAI6H,GAAMO,EAAWD,GACzDG,EAAWH,EAAcH,EAAWhI,EAAI6H,GAAMO,EAAWD,GAEzDI,EAAWJ,EAAcF,EAAWjI,EAAI6H,GAAMO,EAAWD,GACzDK,EAAWL,EAAcD,EAAWlI,EAAI6H,GAAMO,EAAWD,GAMzDM,EAJkBxD,KAAKyD,IAAI,KAAOJ,EAAWD,GAC3BpD,KAAKyD,IAAI,KAAOF,EAAWD,GAK7CI,EAAIR,EAAaM,EAAIJ,EAAWE,EAAWE,EAC3CG,EAAIR,EAAWK,EAAIH,EAAWE,EAAWC,EAE7C5J,KAAKyB,MAAMyD,MAAMrB,IAChB,IAAImG,EAAKnG,EAAM0B,YAAYuE,GACvBG,EAAKpG,EAAM0B,YAAYwE,GAE3BlG,EAAMgC,KAAKmE,EAAIC,EAAI,EAAE,G,EAIxB,GAAIjK,KAAKkD,IAAI,cAAe,CAC3B,MAAMgH,EAAalK,KAAKgH,YAClBmD,EAAWnK,KAAKiH,UAEtB,GAAkB,MAAdiD,GAAkC,MAAZC,EAAkB,CAEvCjB,EAAW9H,EAAI+H,EAAW/H,KAC5B8H,EAAYC,GAAc,CAACA,EAAYD,IACvCE,EAAYC,GAAc,CAACA,EAAYD,IAGzC,IAAII,EAAWU,GAAc,EAAIhB,EAAW9H,EAAI6H,IAAMkB,EAAWD,GAC7DT,EAAWS,GAAc,EAAIf,EAAW/H,EAAI6H,IAAMkB,EAAWD,GAE7DR,EAAWQ,GAAc,EAAId,EAAWhI,EAAI6H,IAAMkB,EAAWD,GAC7DP,EAAWO,GAAc,EAAIb,EAAWjI,EAAI6H,IAAMkB,EAAWD,GAK7DN,EAHkBxD,KAAKyD,IAAI,KAAOJ,EAAWD,GAC3BpD,KAAKyD,IAAI,KAAOF,EAAWD,GAI7CI,EAAII,EAAaN,EAAIJ,EAAWE,EAAWE,EAC3CG,EAAII,EAAWP,EAAIH,EAAWE,EAAWC,EAE7C5J,KAAK0B,MAAMwD,MAAMnB,IAEhB,IAAIiG,EAAKjG,EAAMwB,YAAYuE,GACvBG,EAAKlG,EAAMwB,YAAYwE,GAE3BhG,EAAM8B,KAAKmE,EAAIC,EAAI,EAAE,G,IAM3B,CAEO,qBAAAG,GACN,MAAMpG,EAAShE,KAAKkD,IAAI,UACxB,GAAIc,EAAQ,CACX,MAAMqG,EAAcrG,EAAO0B,WAAW,SAEtC,IAAIzB,EAAeD,EAAOd,IAAI,gBAM9B,GAJIc,EAAOkD,aACVjD,OAAeL,GAGZK,GAAgBoG,EAAa,CAChC,MAAMC,EAAiBtG,EAAOd,IAAI,kBAC5BqH,EAAgD,GACtD,OAAYtG,GAAeV,IAC1B,IAAKA,EAAOiH,aAAejH,EAAOkH,WACjC,GAAsB,MAAlBH,GAA4C,MAAlBA,EAAwB,CACrD,MAAMI,EAAanH,EAAOmH,aACpBC,EAAWpH,EAAOoH,WACxB,IAAK,IAAIhC,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IAAK,CAC3C,MAAMiC,EAAWrH,EAAOgH,UAAU5B,GAC9BiC,IAAaA,EAASJ,YACzBD,EAAUpK,KAAKyK,E,MAIb,CACJ,MAAMC,EAAkBtH,EAAOL,IAAI,mBAC/B2H,GACHN,EAAUpK,KAAK0K,E,KAMnB,IACIC,EADAC,EAAcpF,IA+BlB,GA5BA,OAAY4E,GAAYK,IACvB,MAAMlG,EAAQkG,EAAS1H,IAAI,SAE3B,GAAIwB,EAAO,CACV,IAAIsG,EAAW,EAEdA,EADqB,KAAlBV,GAA2C,MAAlBA,EACjBlE,KAAKC,IAAIgE,EAAYlJ,EAAIuD,EAAMvD,GAEhB,KAAlBmJ,GAA2C,MAAlBA,EACtBlE,KAAKC,IAAIgE,EAAYjJ,EAAIsD,EAAMtD,GAG/BgF,KAAK6E,MAAMZ,EAAYlJ,EAAIuD,EAAMvD,EAAGkJ,EAAYjJ,EAAIsD,EAAMtD,GAElE4J,EAAWD,IACdA,EAAcC,EACdF,EAAcF,E,KAKjB,OAAY3G,GAAeV,IAC1B,MAAM2H,EAAU3H,EAAOL,IAAI,WACvBgI,GACHA,EAAQC,kBAAavH,E,IAInBkH,EAAa,CAChB,IAAIvH,EAASuH,EAAYM,UACzB7H,EAAO8H,oBAAoBP,GAC3BvH,EAAO+H,OAAO,kBAAmBR,GAEjC,MAAMpG,EAAQoG,EAAY5H,IAAI,SAC1BwB,GAGHV,EAAOuH,WAAWhI,EAAOiI,SAAS,CAAErK,EAAGuD,EAAMvD,EAAIoC,EAAOpC,IAAKC,EAAGsD,EAAMtD,EAAImC,EAAOnC,OAAQ,E,GAK9F,CAEO,aAAAqK,GACN,IAAIzH,EAAShE,KAAKkD,IAAI,UAClBc,GACHA,EAAO0H,cAET,CAEU,UAAAC,CAAW3H,GACpBhE,KAAKc,cAAcZ,SAASC,KAAK6D,EAClC,CAEO,gBAAA4H,GAWN,GAVArK,MAAMqK,mBAEN5L,KAAKuD,OAAO2B,MAAM3B,IACjBvD,KAAK6L,UAAUtI,EAAO,KAGnBvD,KAAKiD,QAAQ,WAAajD,KAAKiD,QAAQ,YAC1CjD,KAAKkG,kBAGFlG,KAAKiD,QAAQ,UAAW,CAC3B,MAAM6I,EAAW9L,KAAK+L,cAAc/H,OAC9BA,EAAShE,KAAKkD,IAAI,UACpBc,IAAW8H,IACd9L,KAAKgM,iBAAiB,UAClBF,GACHA,EAASpI,UAENM,IACHA,EAAOiI,UAAUjM,MACjBA,KAAK2L,WAAW3H,GAEhBhE,KAAKkM,sBAAsB,SAAUlI,EAAOnC,OAAOC,GAAG,eAAe,KACpE9B,KAAKmM,wBAAwB,MAK/BnM,KAAK+L,cAAc/H,OAASA,E,CAI9B,GAAIhE,KAAKiD,QAAQ,cAAe,CAC/B,MAAM6I,EAAW9L,KAAK+L,cAAc1D,WAC9BA,EAAarI,KAAKkD,IAAI,cACxBmF,IAAeyD,IAClB9L,KAAKgM,iBAAiB,cAClBF,GACHA,EAASpI,UAEN2E,IACEA,EAAW+D,QACfpM,KAAKqM,iBAAiBnM,SAASC,KAAKkI,GAGrCrI,KAAKkM,sBAAsB,aAAc7D,EAAWxG,OAAOC,GAAG,gBAAiBiI,IAC9E/J,KAAKsM,iBAAiBtM,KAAKyB,MAAOsI,EAAE3E,MAAO2E,EAAE1E,IAAK0E,EAAEwC,KAAK,KAG1DvM,KAAKkM,sBAAsB,aAAc7D,EAAWxG,OAAOC,GAAG,YAAY,KACzE9B,KAAKyB,MAAMyD,MAAMC,IACZA,EAAKjC,IAAI,aACZlD,KAAKwM,qBAAqBrH,E,GAE1B,KAIHkD,EAAWoE,WAAW,wBAAyBnH,IAC9C,MAAMH,EAAOnF,KAAKyB,MAAMoF,SAAS,GACjC,OAAO1B,GAAOA,EAAKuH,eAAepH,GAAU,IAAe,EAAE,KAK/DtF,KAAK+L,cAAc1D,WAAaA,E,CAIlC,GAAIrI,KAAKiD,QAAQ,cAAe,CAC/B,MAAM6I,EAAW9L,KAAK+L,cAAcrD,WAC9BA,EAAa1I,KAAKkD,IAAI,cACxBwF,IAAeoD,IAClB9L,KAAKgM,iBAAiB,cAClBF,GACHA,EAASpI,UAENgF,IACEA,EAAW0D,QACfpM,KAAK2M,mBAAmBzM,SAASC,KAAKuI,GAGvC1I,KAAKkM,sBAAsB,aAAcxD,EAAW7G,OAAOC,GAAG,gBAAiBiI,IAC9E/J,KAAKsM,iBAAiBtM,KAAK0B,MAAOqI,EAAE3E,MAAO2E,EAAE1E,IAAK0E,EAAEwC,KAAK,KAG1DvM,KAAKkM,sBAAsB,aAAcxD,EAAW7G,OAAOC,GAAG,YAAY,KACzE9B,KAAK0B,MAAMwD,MAAMC,IACZA,EAAKjC,IAAI,aACZlD,KAAKwM,qBAAqBrH,E,GAE1B,KAIHuD,EAAW+D,WAAW,wBAAyBnH,IAC9C,MAAMH,EAAOnF,KAAK0B,MAAMmF,SAAS,GACjC,OAAO1B,GAAOA,EAAKuH,eAAepH,GAAU,IAAe,EAAE,KAI/DtF,KAAK+L,cAAcrD,WAAaA,E,CAIlC1I,KAAK4M,gBACN,CAEU,cAAAC,CAAetJ,GACxBhC,MAAMsL,eAAetJ,GAErB,MAAMM,EAAQN,EAAOL,IAAI,SACnBa,EAAQR,EAAOL,IAAI,SAEzB,OAAYW,EAAMN,OAAQA,GAC1B,OAAYQ,EAAMR,OAAQA,GAE1BA,EAAOE,QAAUF,EAAOuJ,YAAYjJ,EAAMhC,OAAOC,GAAG,mBAAmB,KACtEyB,EAAOwJ,cAAc,KAGtBxJ,EAAOE,QAAUF,EAAOuJ,YAAY/I,EAAMlC,OAAOC,GAAG,mBAAmB,KACtEyB,EAAOwJ,cAAc,KAGjBxJ,EAAOL,IAAI,cACXa,EAAMiJ,OAA0B,iBAAmBjJ,EAAMiJ,OAAsB,YAClFzJ,EAAOpB,IAAI,WAAY4B,GAGvBR,EAAOpB,IAAI,WAAY0B,IAIrBN,EAAOL,IAAI,aACdK,EAAO0J,cAAc,WACrB,OAAY1J,EAAOgH,WAAYK,IAC9BA,EAASzI,IAAI,oBAAgByB,GAC7BgH,EAASzI,IAAI,oBAAgByB,EAAU,KAGzCL,EAAO2J,iBACPnJ,EAAMD,oBACND,EAAMC,oBACND,EAAMsJ,cAAe,EACrBpJ,EAAMoJ,cAAe,EAErBnN,KAAK6L,UAAUtI,EAChB,CAEU,SAAAsI,CAAUtI,GACnB,MAAM6J,EAAWpN,KAAKkD,IAAI,UAC1B,GAAIkK,GACuB,MAAtB7J,EAAOL,IAAI,QAAiB,CAC/B,MAAMmK,EAAQD,EAASE,OAEvB/J,EAAOgK,SAAS,SAAUF,GAC1B9J,EAAOgK,SAAS,OAAQF,E,CAG3B,CAEU,sBAAAlB,GACT,MAAMnI,EAAShE,KAAKkD,IAAI,UAClBsK,EAAWxJ,EAAOd,IAAI,YAEtBuK,EAAgBzJ,EAAO0B,WAAW,gBAAiB,GACnDgI,EAAgB1J,EAAO0B,WAAW,gBAAiB,GAEnDiI,EAAYvH,KAAKwH,IAAI,EAAGxH,KAAKyD,IAAI,EAAG7F,EAAO0B,WAAW,YAAa,MACnEmI,EAAYzH,KAAKwH,IAAI,EAAGxH,KAAKyD,IAAI,EAAG7F,EAAO0B,WAAW,YAAa,MAEzE1F,KAAKyB,MAAMyD,MAAMC,IAChB,GAAiB,UAAbqI,GAAqC,WAAbA,EAAuB,CAClD,IAAIM,EAAY3I,EAAK4I,eAAeN,GAChCO,EAAY7I,EAAK4I,eAAeJ,GACpCxI,EAAKU,KAAKiI,EAAWE,E,CAEtB7I,EAAKsH,WAAW,mBAAmB,EAAK,IAGzCzM,KAAK0B,MAAMwD,MAAMC,IAChB,GAAiB,UAAbqI,GAAqC,WAAbA,EAAuB,CAClD,IAAIM,EAAY3I,EAAK4I,eAAeL,GAChCM,EAAY7I,EAAK4I,eAAeF,GACpC1I,EAAKU,KAAKiI,EAAWE,E,CAEtB7I,EAAKsH,WAAW,mBAAmB,EAAK,GAE1C,CAEU,gBAAAH,CAAiB2B,EAAkC7I,EAAeC,EAAa6I,GAExFD,EAAK/I,MAAMC,IAEV,IAAIgJ,EAAYhJ,EAAKI,YAAYH,GAC7BgJ,EAAUjJ,EAAKI,YAAYF,GAE3BgJ,EAAgBlJ,EAAKU,KAAKsI,EAAWC,OAASxK,EAAWsK,GAE7D,MAAMI,EAAkB,kBACxBnJ,EAAKoJ,cAAcD,GAAiB,GAEhCD,EACHA,EAAcxM,OAAOC,GAAG,WAAW,KAClCqD,EAAKoJ,cAAcD,GAAiB,EAAK,IAI1CnJ,EAAKoJ,cAAcD,GAAiB,E,GAGvC,CAGU,YAAAjM,CAAqC4L,EAAgCO,GAC9E,OAAOP,EAAKpM,OAAO4M,OAAOC,IACzB,GAAoB,UAAhBA,EAAO9G,KACV,OAAY8G,EAAOC,WAAYxJ,IAC9BnF,KAAK4O,YAAYzJ,EAAK,SAEjB,GAAoB,SAAhBuJ,EAAO9G,KACjB4G,EAAUtO,SAASC,KAAKuO,EAAOG,UAC/BH,EAAOG,SAASC,aAAa9O,WACvB,GAAoB,aAAhB0O,EAAO9G,KACjB4G,EAAUtO,SAAS6O,SAASL,EAAOM,MAAON,EAAOG,UACjDH,EAAOG,SAASC,aAAa9O,WACvB,GAAoB,gBAAhB0O,EAAO9G,KACjB4G,EAAUtO,SAAS+O,YAAYP,EAAOM,MAAON,EAAOG,UACpDH,EAAOG,SAASC,aAAa9O,WACvB,GAAoB,gBAAhB0O,EAAO9G,KACjB5H,KAAK4O,YAAYF,EAAOQ,cAClB,IAAoB,cAAhBR,EAAO9G,KAIjB,MAAM,IAAIuH,MAAM,2BAHhBX,EAAUtO,SAASkP,UAAUV,EAAOW,MAAOX,EAAOY,UAClDZ,EAAOW,MAAMP,aAAa9O,K,IAK7B,CAEU,WAAA4O,CAAYzJ,GACrB,IAAKA,EAAKoK,aAAc,CACvB,MAAMC,EAAarK,EAAKiH,OACpBoD,GACHA,EAAWtP,SAASuP,YAAYtK,GAGjC,MAAM9B,EAAgB8B,EAAK9B,cACrBqM,EAAarM,EAAc+I,OAC7BsD,GACHA,EAAWxP,SAASuP,YAAYpM,GAGjC,MAAMb,EAAmB2C,EAAK3C,iBACxBmN,EAAgBnN,EAAiB4J,OACnCuD,GACHA,EAAczP,SAASuP,YAAYjN,E,CAGtC,CAEO,kBAAAoN,GACN,MAAMC,EAAO7P,KAAKuC,kBAAkBjC,QAC9BwP,EAAQ9P,KAAK2M,mBAAmBrM,QAEhCgC,EAAsBtC,KAAKsC,oBACjCA,EAAoBH,IAAI,cAAe0N,GACvCvN,EAAoBH,IAAI,eAAgB2N,GAExC,MAAMzD,EAAmBrM,KAAKqM,iBAC9BA,EAAiBlK,IAAI,cAAe0N,GACpCxD,EAAiBlK,IAAI,eAAgB2N,EACtC,CAKO,WAAAC,CAAY5K,GACLnF,KAAKkD,IAAI,YAErBlD,KAAK8M,YAAY3H,EAAKrD,GAAG,SAAS,KACjC9B,KAAKyL,eAAe,KAGrBzL,KAAK8M,YAAY3H,EAAKrD,GAAG,OAAO,KAC/B9B,KAAKyL,eAAe,KAGvB,CAGO,oBAAAe,CAAqBrH,EAAiB6K,GAE5C,IAAI5K,EAAQD,EAAKI,YAAYJ,EAAKjC,IAAI,QAAS,IAC3CmC,EAAMF,EAAKI,YAAYJ,EAAKjC,IAAI,MAAO,IAM3C,GAJIkC,EAAQC,KACVD,EAAOC,GAAO,CAACA,EAAKD,KAGW,GAA7BpF,KAAKyB,MAAMwO,QAAQ9K,IACtB,GAAI6K,GAAS7K,EAAKO,WAAW,mBAAoB,CAChD,IAAI2C,EAAarI,KAAKkD,IAAI,eAEtBmF,GAAgBA,EAAW3C,WAAW,YAAasK,IACtD3H,EAAWiD,OAAO,QAASlG,GAC3BiD,EAAWiD,OAAO,MAAOjG,GACzBgD,EAAW6H,c,OAIT,IAAiC,GAA7BlQ,KAAK0B,MAAMuO,QAAQ9K,KACvB6K,GAAS7K,EAAKO,WAAW,oBAAoB,CAChD,IAAIgD,EAAa1I,KAAKkD,IAAI,eAEtBwF,GAAgBA,EAAWhD,WAAW,YAAasK,IACtDtH,EAAW4C,OAAO,QAASlG,GAC3BsD,EAAW4C,OAAO,MAAOjG,GACzBqD,EAAWwH,c,CAKdlQ,KAAK4M,gBACN,CAEU,cAAAA,GACT,IAAIhL,EAAgB5B,KAAK4B,cACzB,GAAIA,GAAiBA,EAAcwK,OAAQ,CAC1C,IAAI+D,GAAU,EACdnQ,KAAKyB,MAAMyD,MAAMC,IAC4B,GAAxC,QAAYA,EAAKjC,IAAI,QAAS,GAAI,IAAiD,GAAtC,QAAYiC,EAAKjC,IAAI,MAAO,GAAI,KAChFiN,GAAU,E,IAGZnQ,KAAK0B,MAAMwD,MAAMC,IAC4B,GAAxC,QAAYA,EAAKjC,IAAI,QAAS,GAAI,IAAiD,GAAtC,QAAYiC,EAAKjC,IAAI,MAAO,GAAI,KAChFiN,GAAU,E,IAIRA,EACCvO,EAAc4I,YACjB5I,EAAcwO,OAIfxO,EAAcI,M,CAGjB,CAQO,MAAAqO,CAAO3L,GACb,MAAM5D,EAAgBd,KAAKc,cACrBwP,EAActQ,KAAK0F,WAAW,cAAe1F,KAAKuQ,cAClDC,EAAS1P,EAAc0K,SAAS9G,GAEtC,GAAIA,EAAMvD,IAAM,IAAOuD,EAAMtD,IAAM,IAAOsD,EAAMvD,GAAKL,EAAcR,QAAU,IAAOoE,EAAMtD,GAAKN,EAAcL,SAAW,GACvH,OAAO,EAER,GAAI6P,EAEH,IAAK,IAAI3H,EAAI2H,EAAY1J,OAAS,EAAG+B,GAAK,EAAGA,IAAK,CACjD,MAAM8H,EAAQH,EAAY3H,GAE1B,GAAI8H,GAASzQ,KAAM,CAClB,MAAM0Q,EAAqBD,EAAM3P,cAC3B6P,EAAgB3Q,KAAKK,MAAMuQ,oBAAoBJ,GAC/CK,EAAYJ,EAAMpQ,MAAM+H,oBAAoBuI,GAC5ClK,EAAQiK,EAAmBjM,QAAQoM,GACzC,GAAIpK,EAAMtF,IAAM,IAAOsF,EAAMrF,IAAM,IAAOqF,EAAMtF,GAAKuP,EAAmBpQ,QAAU,IAAOmG,EAAMrF,GAAKsP,EAAmBjQ,SAAW,GACjI,OAAO,C,EAMX,OAAO,CACR,CAKO,eAAAqQ,GACN,MAAMhQ,EAAgBd,KAAKc,cAErBkI,EAAIlI,EAAcR,QAClB2I,EAAInI,EAAcL,SAElBsQ,EAAK/Q,KAAKS,SAEhB,IAAIuQ,EAAQlQ,EAAcqC,SAASqI,SAAS,CAAErK,EAAG,EAAGC,EAAG,IACnD6P,EAAQnQ,EAAcqC,SAASqI,SAAS,CAAErK,EAAG6H,EAAG5H,EAAG6H,IAEvD,MAAMiI,EAA2B,GACjC,IAMIC,EACAC,EAPAC,EAAM,EAENtG,EAAcpF,IACdoD,EAAY/I,KAAKsR,WACjBC,EAAqBvR,KAAKkD,IAAI,sBAC9BsO,EAAuBxR,KAAKkD,IAAI,uBAAwB,MAIxD,WAAeqO,IAClBvR,KAAKuD,OAAO2B,MAAM3B,IACjB,IAAKA,EAAOiH,WAAY,CACvB,MAAMU,EAAU3H,EAAOL,IAAI,WAC3B,GAAIgI,EAAS,CACZ,IAAIxG,EAAQwG,EAAQhI,IAAI,WACxB,GAAIwB,EAAO,CACV,IAAIsG,EAAW5E,KAAK6E,MAAMlC,EAAU5H,EAAIuD,EAAMvD,EAAG4H,EAAU3H,EAAIsD,EAAMtD,GACzC,KAAxBoQ,EACHxG,EAAW5E,KAAKC,IAAI0C,EAAU5H,EAAIuD,EAAMvD,GAER,KAAxBqQ,IACRxG,EAAW5E,KAAKC,IAAI0C,EAAU3H,EAAIsD,EAAMtD,IAGrC4J,EAAWD,IACdA,EAAcC,EACdmG,EAAU5N,EACV6N,EAAe1M,E,OAOrB,MAAM+M,EAAiC,GAyDvC,GAvDAzR,KAAKuD,OAAO2B,MAAM3B,IACjB,MAAM2H,EAAU3H,EAAOL,IAAI,WAE3B,GAAIgI,IAAYA,EAAQhI,IAAI,eAAgB,CAC3C,IAAIwO,GAAS,EACThN,EAAQwG,EAAQhI,IAAI,WACxB,GAAIwB,EAAO,CACV,GAAI6M,GAAsB,EAAG,CAC5B,IAAI7M,EAAQwG,EAAQhI,IAAI,WACxB,GAAIwB,GAAS0M,GACR7N,GAAU4N,EAAS,CACtB,IAAInG,EAAW5E,KAAK6E,MAAMmG,EAAajQ,EAAIuD,EAAMvD,EAAGiQ,EAAahQ,EAAIsD,EAAMtD,GAC/C,KAAxBoQ,EACHxG,EAAW5E,KAAKC,IAAI+K,EAAajQ,EAAIuD,EAAMvD,GAEX,KAAxBqQ,IACRxG,EAAW5E,KAAKC,IAAI+K,EAAahQ,EAAIsD,EAAMtD,IAGxC4J,EAAWuG,IACdG,GAAS,E,OAKmB,GAAvBH,GACJhO,GAAU4N,IACbO,GAAS,GAIN1R,KAAKqQ,OAAOrQ,KAAK2R,gBAAgBjN,KAAYwG,EAAQN,SAIpD8G,IACJL,GAAO3M,EAAMtD,GAJdsQ,GAAS,EAQNA,GAAUnO,EAAOiH,YAAcjH,EAAOkH,WACzCS,EAAQlJ,KAAK,IAGbkJ,EAAQkF,OACRc,EAAS/Q,KAAK+K,GAEduG,EAActR,KAAKoD,G,MAMvBvD,KAAKyM,WAAW,gBAAiBgF,GAE7BzR,KAAKkD,IAAI,mBAAoB,CAEhC,MAAM0O,EAAmB5R,KAAKK,MAAMuR,iBAE9BC,EAAQX,EAAStK,OAGvB,GAFgByK,EAAMQ,EAER5I,EAAI,EAAI+H,EAAM5P,EAAG,CAC9B8P,EAASY,MAAK,CAACC,EAAGC,IAAM,KAAqBA,EAAE9O,IAAI,WAAY9B,EAAG2Q,EAAE7O,IAAI,WAAY9B,KAEpF,IAAI6Q,EAAQhB,EAAM7P,EAiBlB,GAfA,OAAY8P,GAAWhG,IACtB,IAAIzK,EAASyK,EAAQzK,SACjByR,EAAUhH,EAAQhI,IAAI,WACtBgP,aAAmB,OACtBzR,GAAUyR,EAAQ7C,OAEnB5O,GAAUyK,EAAQhI,IAAI,eAAgB,GAEtCgI,EAAQ/I,IAAI,SAAU,CAAE0N,KAAMmB,EAAM7P,EAAGgR,IAAKnB,EAAM5P,EAAG0O,MAAOmB,EAAM9P,EAAGiR,OAAQH,IAC7E/G,EAAQuB,WAAW,aAAc,CAAEoD,KAAMmB,EAAM7P,EAAGgR,IAAKnB,EAAM5P,EAAG0O,MAAOmB,EAAM9P,EAAGiR,OAAQH,IACxFA,EAAQ7L,KAAKwH,IAAIqE,EAAQxR,EAAQyK,EAAQmH,IAAM5R,GAC3CyK,EAAQkB,QAAUwF,GACrBA,EAAiB1R,SAASkP,UAAUlE,EAAS,E,IAG3C+G,EAAQ,EAAG,CAEdf,EAASoB,UACT,IAAIC,EAAaN,EAEjB,OAAYf,GAAWhG,IACtB,IAAIsH,EAAStH,EAAQhI,IAAI,UACzB,GAAIsP,EAAQ,CACX,IAAIL,EAAMK,EAAOL,IAAMF,EACnBG,EAASI,EAAOJ,OAASH,EACzBE,EAAMI,IACTJ,EAAMI,EACNH,EAASD,EAAMjH,EAAQzK,UAExByK,EAAQ/I,IAAI,SAAU,CAAE0N,KAAM2C,EAAO3C,KAAMsC,IAAKA,EAAKrC,MAAO0C,EAAO1C,MAAOsC,OAAQA,IAClFG,EAAaC,EAAOJ,OAASH,EAAQ/G,EAAQhI,IAAI,eAAgB,E,UAKhE,CACJgO,EAASoB,UACTpB,EAASY,MAAK,CAACC,EAAGC,IAAM,KAAqBD,EAAE7O,IAAI,WAAY9B,EAAG4Q,EAAE9O,IAAI,WAAY9B,KAEpF,IAAI6Q,EAAQ,EAgBZ,GAfA,OAAYf,GAAWhG,IACtB,IAAIzK,EAASyK,EAAQzK,SACjByR,EAAUhH,EAAQhI,IAAI,WACtBgP,aAAmB,OACtBzR,GAAUyR,EAAQ7C,OAEnB5O,GAAUyK,EAAQhI,IAAI,eAAgB,GAEtCgI,EAAQ/I,IAAI,SAAU,CAAE0N,KAAMmB,EAAM7P,EAAGgR,IAAKF,EAAOnC,MAAOmB,EAAM9P,EAAGiR,OAAQhM,KAAKyD,IAAImH,EAAM5P,EAAI2P,EAAIkB,EAAQxR,KACtGyK,EAAQkB,QAAUwF,GACrBA,EAAiB1R,SAASkP,UAAUlE,EAAS,GAE9C+G,EAAQ7L,KAAKyD,IAAIoI,EAAQxR,EAAQyK,EAAQmH,IAAM5R,EAAO,IAGnDwR,EAAQlB,EAAI,CACfG,EAASoB,UACT,IAAIC,EAAaxB,EAEjB,OAAYG,GAAWhG,IACtB,IAAIsH,EAAStH,EAAQhI,IAAI,UACzB,GAAIsP,EAAQ,CACX,IAAIL,EAAMK,EAAOL,KAAOpB,EAAKkB,GACzBG,EAASI,EAAOJ,QAAUrB,EAAKkB,GAC/BG,EAASG,IACZH,EAASG,EACTJ,EAAMC,EAASlH,EAAQzK,UAExByK,EAAQ/I,IAAI,SAAU,CAAE0N,KAAM2C,EAAO3C,KAAMsC,IAAKA,EAAKrC,MAAO0C,EAAO1C,MAAOsC,OAAQA,IAClFG,EAAaH,EAASlH,EAAQzK,SAAWyK,EAAQhI,IAAI,eAAgB,E,OAM3E,CAEU,eAAAyO,CAAgBjN,GACzB,OAAO1E,KAAKc,cAAc2D,QAAQC,EACnC,CAKO,OAAA3C,GACN/B,KAAKyB,MAAMyD,MAAMC,IAChBA,EAAKsH,WAAW,mBAAmB,GACnCtH,EAAKU,KAAK,EAAG,EAAE,IAGhB7F,KAAK0B,MAAMwD,MAAMC,IAChBA,EAAKsH,WAAW,mBAAmB,GACnCtH,EAAKU,KAAK,EAAG,EAAE,GAEjB,CAEU,QAAA4M,GACTlR,MAAMkR,WAIN,MAAMzO,EAAShE,KAAKkD,IAAI,UACpBc,GACHA,EAAON,SAET,EAv+CA,qC,gDAAkC,YAClC,sC,gDAA0C,IAAYgP,WAAWC,OAAO,CAAC5S,EAAQ6S,a,2JC3N3E,MAAMC,UAA4B,IAC9B,iBAAAC,GACTvR,MAAMuR,oBAEN,MAAMC,EAAK/S,KAAKK,MAAM2S,gBAChBC,EAAWjT,KAAKK,MAAM4S,SACtBC,EAAIlT,KAAKmT,KAAKC,KAAKpT,MAQzBkT,EAAE,WAAWG,OAAO,CACnBC,OAAQ,IAASlT,IAAIJ,KAAKK,MAAO,CAAC,GAClCkT,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfrM,MAAM,EACNC,MAAM,EACN3C,UAAW,IACXmM,iBAAiB,EACjB6C,YAAY,EACZC,YAAY,IAIbV,EAAE,YAAYG,OAAO,CACpBQ,gBAAiB,WAGlBX,EAAE,YAAa,CAAC,iBAAkB,KAAM,eAAeG,OAAO,CAC7DS,KAAM,KAAMC,QAAQ,GACpBC,YAAa,IASdd,EAAE,UAAW,CAAC,YAAa,UAAUG,OAAO,CAC3CK,cAAe,EACfH,YAAa,EACbE,WAAY,EACZD,aAAc,EACdF,OAAQ,IAASlT,IAAIJ,KAAKK,MAAO,CAChC4T,WAAY,MAId,CACC,MAAMd,EAAOD,EAAE,WAAY,CAAC,YAAa,YAEzCC,EAAKE,OAAO,CACXW,YAAa,MAGd,OAASb,EAAM,OAAQJ,EAAI,a,CAI5BG,EAAE,mBAAoB,CAAC,KAAM,YAAa,UAAUG,OAAO,CAC1Da,eAAgB,EAChBC,eAAgB,EAChBC,eAAgB,EAChBC,eAAgB,EAChBL,YAAa,EACbM,WAAW,IAGZpB,EAAE,mBAAoB,CAAC,KAAM,YAAa,UAAUjR,OAAOsS,OAAO,QAAS,CAAEP,YAAa,KAE1Fd,EAAE,mBAAoB,CAAC,KAAM,YAAa,QAAS,eAAeG,OAAO,CACxEc,eAAgB,EAChBE,eAAgB,EAChBH,eAAgB,EAChBE,eAAgB,IAGjBlB,EAAE,mBAAoB,CAAC,KAAM,YAAa,QAAS,aAAc,SAAU,WAAWG,OAAO,CAC5FgB,eAAgB,GAChBD,eAAgB,GAChBD,eAAgB,GAChBD,eAAgB,KAGjBhB,EAAE,gBAAiB,CAAC,KAAM,QAAS,cAAcG,OAAO,CACvDmB,cAAe,EACfC,QAAQ,IAGTvB,EAAE,gBAAiB,CAAC,KAAM,QAAS,cAAcG,OAAO,CACvDmB,cAAe,EACfC,QAAQ,EACRC,gBAAiB,IAGlBxB,EAAE,YAAa,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC/CsB,QAAS,GACTzC,QAAS,KACT0C,YAAa,IACbC,YAAa,IACbC,SAAU,UAGX5B,EAAE,YAAa,CAAC,aAAaG,OAAO,CACnC0B,KAAM,aACNC,cAAc,IAGf9B,EAAE,YAAa,CAAC,MAAMG,OAAO,CAC5BnB,QAAS,IAGVgB,EAAE,YAAa,CAAC,IAAK,WAAWG,OAAO,CACtCnB,QAAS,OAGVgB,EAAE,YAAa,CAAC,IAAK,SAAU,aAAaG,OAAO,CAClDnB,QAAS,IAGVgB,EAAE,YAAa,CAAC,IAAK,aAAaG,OAAO,CACxCnB,QAAS,OAIVgB,EAAE,YAAa,CAAC,MAAMG,OAAO,CAC5B4B,QAAS,OAGV/B,EAAE,YAAa,CAAC,IAAK,WAAWG,OAAO,CACtC4B,QAAS,IAGV/B,EAAE,YAAa,CAAC,IAAK,SAAU,aAAaG,OAAO,CAClD4B,QAAS,OAGV/B,EAAE,YAAa,CAAC,IAAK,aAAaG,OAAO,CACxC4B,QAAS,IAGV/B,EAAE,YAAa,CAAC,UAAUG,OAAO,CAChCyB,SAAU,UAGX5B,EAAE,YAAa,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC/ClD,SAAS,IAIV+C,EAAE,OAAQ,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC1ClD,SAAS,IAIV+C,EAAE,OAAQ,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC1CsB,QAAS,KAYVzB,EAAE,YAAYG,OAAO,CACpB7F,SAAU,OACV0H,MAAO,GACPC,YAAY,EACZ7K,eAAgB,KAChB8K,cAAe,IAGhB,CACC,MAAMjC,EAAOD,EAAE,OAAQ,CAAC,SAAU,MAElCC,EAAKE,OAAO,CACXgC,eAAe,EACfb,cAAe,GACfc,gBAAiB,CAAC,EAAG,GACrBC,KAAM,SACNC,UAAWvC,EAASwC,UAAU,kDAG/B,OAAStC,EAAM,SAAUJ,EAAI,wB,CAG9B,CACC,MAAMI,EAAOD,EAAE,OAAQ,CAAC,SAAU,MAElCC,EAAKE,OAAO,CACXgC,eAAe,EACfb,cAAe,GACfc,gBAAiB,CAAC,EAAG,GACrBC,KAAM,SACNC,UAAWvC,EAASwC,UAAU,+CAG/B,OAAStC,EAAM,SAAUJ,EAAI,wB,CAG9B,CACC,MAAMI,EAAOD,EAAE,WAAY,CAAC,SAAU,cAEtCC,EAAKE,OAAO,CACXW,YAAa,OAGd,OAASb,EAAM,OAAQJ,EAAI,wB,CAU5BG,EAAE,QAAQG,OAAO,CAChBjO,MAAO,EACPC,IAAK,EACLqQ,aAAc,EACdC,aAAchQ,IACdiQ,cAAe,IACfC,aAAc,GACdC,aAAa,EACbC,gBAAiB,GACjB1O,MAAM,EACNC,MAAM,EACN0O,OAAO,EACPC,OAAO,EACPC,aAAa,IAGdhD,EAAE,aAAaG,OAAO,CACrB8C,SAAU,GACVC,cAAe,EACfnB,QAAS,KACT/C,QAAS,KACTuB,WAAY,EACZC,cAAe,EACfH,YAAa,EACbC,aAAc,IAYfN,EAAE,YAAa,CAAC,OAAQ,WAAWG,OAAO,CACzC6B,MAAO,KAGRhC,EAAE,YAAa,CAAC,OAAQ,SAAU,eAAeG,OAAO,CACvDgD,OAAO,IAGR,CACC,MAAMlD,EAAOD,EAAE,gBAEfC,EAAKE,OAAO,CACXgD,OAAO,EACP7B,cAAe,KAGhB,OAASrB,EAAM,SAAUJ,EAAI,O,CAG9BG,EAAE,iBAAiBG,OAAO,CACzBqB,gBAAiB,IACjB4B,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,gBAAiB,EACjBnW,MAAO,OAGR4S,EAAE,iBAAiBG,OAAO,CACzBqB,gBAAiB,GACjB4B,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,gBAAiB,EACjBhW,OAAQ,OAGT,CACC,MAAM0S,EAAOD,EAAE,YAAa,CAAC,OAAQ,UAErCC,EAAKE,OAAO,CACXW,YAAa,KAGd,OAASb,EAAM,OAAQJ,EAAI,yBAE3BI,EAAKlR,OAAOsS,OAAO,QAAS,CAAEP,YAAa,I,CAG5Cd,EAAE,YAAa,CAAC,OAAQ,QAAS,MAAMG,OAAO,CAC7CqD,gBAAiB,cAGlBxD,EAAE,YAAa,CAAC,OAAQ,QAAS,MAAMG,OAAO,CAC7CqD,gBAAiB,cAIlB,CACC,MAAMvD,EAAOD,EAAE,QAEfC,EAAKE,OAAO,CACX8C,SAAU,EACV3B,cAAe,IACf6B,OAAO,KAGR,OAASlD,EAAM,SAAUJ,EAAI,O,CAG9B,CACC,MAAMI,EAAOD,EAAE,OAAQ,CAAC,UAExBC,EAAKE,OAAO,CACX8C,SAAU,EACV3B,cAAe,IACf6B,OAAO,KAGR,OAASlD,EAAM,SAAUJ,EAAI,O,CAI9BG,EAAE,OAAQ,CAAC,SAASG,OAAO,CAC1BmB,cAAe,KAGhB,CACC,MAAMrB,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAEpCC,EAAKE,OAAO,CACXlD,SAAS,EACTpP,YAAY,EACZuE,SAAU,WACV0O,YAAa,OAGd,OAASb,EAAM,OAAQJ,EAAI,wB,CAG5BG,EAAE,WAAY,CAAC,OAAQ,OAAQ,UAAUG,OAAO,CAC/CtS,YAAY,IAIbmS,EAAE,WAAY,CAAC,SAAU,OAAQ,UAAUG,OAAO,CACjDlD,SAAS,EACTpP,YAAY,IAGbmS,EAAE,OAAQ,CAAC,SAAU,UAAUG,OAAO,CACrClD,SAAS,IAGV+C,EAAE,WAAY,CAAC,SAAU,UAAUG,OAAO,CACzClD,SAAS,IAGV+C,EAAE,YAAa,CAAC,SAAU,UAAUG,OAAO,CAC1ClD,SAAS,IAGV,CACC,MAAMgD,EAAOD,EAAE,YAEfC,EAAKE,OAAO,CACX8C,SAAU,GACVC,cAAe,EACf5B,cAAe,EACfzT,YAAY,EACZuE,SAAU,WACV6K,SAAS,KAGV,OAASgD,EAAM,SAAUJ,EAAI,O,CAG9BG,EAAE,gBAAgBG,OAAO,CACxBsD,cAAe,EACfC,YAAa,EACbC,SAAU,CAACjM,EAA2CoE,KACrD,MAAM8H,EAAWlM,EAAS1H,IAAI,YAC1B4T,IACE,WAAe9H,IAAUA,EAAQ,GAAK,EAI1C8H,EAASrK,WAAW,WAAW,GAH/BqK,EAASrK,WAAW,WAAW,G,IASnC,MAAMsK,EAAsC,CAC3C,CAAEC,SAAU,cAAenF,MAAO,GAClC,CAAEmF,SAAU,cAAenF,MAAO,GAClC,CAAEmF,SAAU,cAAenF,MAAO,IAClC,CAAEmF,SAAU,cAAenF,MAAO,IAClC,CAAEmF,SAAU,cAAenF,MAAO,KAClC,CAAEmF,SAAU,cAAenF,MAAO,KAClC,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,IAC3B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,QAASnF,MAAO,GAC5B,CAAEmF,SAAU,QAASnF,MAAO,GAC5B,CAAEmF,SAAU,QAASnF,MAAO,GAC5B,CAAEmF,SAAU,QAASnF,MAAO,GAC5B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,OAAQnF,MAAO,IAC3B,CAAEmF,SAAU,OAAQnF,MAAO,IAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,KAC3B,CAAEmF,SAAU,OAAQnF,MAAO,MAGtBoF,EAAc,CACnB,YAAehE,EAASwC,UAAU,qBAClC,OAAUxC,EAASwC,UAAU,gBAC7B,OAAUxC,EAASwC,UAAU,gBAC7B,KAAQxC,EAASwC,UAAU,cAC3B,IAAOxC,EAASwC,UAAU,aAC1B,KAAQxC,EAASwC,UAAU,aAC3B,MAASxC,EAASwC,UAAU,eAC5B,KAAQxC,EAASwC,UAAU,eAGtByB,EAA0B,CAC/B,YAAejE,EAASwC,UAAU,qBAClC,OAAUxC,EAASwC,UAAU,gBAC7B,OAAUxC,EAASwC,UAAU,gBAC7B,KAAQxC,EAASwC,UAAU,aAC3B,IAAOxC,EAASwC,UAAU,aAC1B,KAAQxC,EAASwC,UAAU,aAC3B,MAASxC,EAASwC,UAAU,eAAiB,IAAMxC,EAASwC,UAAU,cACtE,KAAQxC,EAASwC,UAAU,eAGtB0B,EAAqB,CAC1B,YAAelE,EAASwC,UAAU,0BAClC,OAAUxC,EAASwC,UAAU,qBAC7B,OAAUxC,EAASwC,UAAU,qBAC7B,KAAQxC,EAASwC,UAAU,mBAC3B,IAAOxC,EAASwC,UAAU,kBAC1B,KAAQxC,EAASwC,UAAU,mBAC3B,MAASxC,EAASwC,UAAU,oBAC5B,KAAQxC,EAASwC,UAAU,eAG5BvC,EAAE,oBAAoBG,OAAO,CAC5B+D,gBAAgB,EAChBL,cAAe,OAAYA,GAC3BE,YAAa,OAAaA,GAC1BC,wBAAyB,OAAaA,KAGvChE,EAAE,YAAYG,OAAO,CACpBuC,cAAe,KACfyB,cAAc,EACdV,cAAe,EACfC,YAAa,EACbQ,gBAAgB,EAChBE,WAAW,EACXC,WAAY,IACZR,cAAe,OAAYA,GAC3BE,YAAa,OAAaA,GAC1BC,wBAAyB,OAAaA,GACtCC,mBAAoBA,EAEpBK,eAAgB,CACf,CAAER,SAAU,cAAenF,MAAO,GAClC,CAAEmF,SAAU,cAAenF,MAAO,IAClC,CAAEmF,SAAU,cAAenF,MAAO,KAClC,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,SAAUnF,MAAO,GAC7B,CAAEmF,SAAU,SAAUnF,MAAO,IAC7B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,MAAOnF,MAAO,GAC1B,CAAEmF,SAAU,OAAQnF,MAAO,GAC3B,CAAEmF,SAAU,QAASnF,MAAO,GAC5B,CAAEmF,SAAU,OAAQnF,MAAO,IAG5BgF,SAAWjM,IACV,MAAMkM,EAAWlM,EAAS1H,IAAI,YAC9B,GAAI4T,EAAU,CACb,MAAM3R,EAA+ByF,EAASQ,UACxCiE,EAAQzE,EAAS1H,IAAI,SACrBuU,EAAW7M,EAAS1H,IAAI,YACxBwU,EAAmBvS,EAAKuS,mBACxBC,EAAexS,EAAKO,WAAW,gBAC/BkS,EAAezS,EAAKO,WAAW,eAAgBiS,GAGrD,IAAI/J,EAAMzI,EAAKO,WAAW,MAAO,GAGjC,GAFAkI,EAAM,QAAY,IAAIiK,KAAKjK,GAAMgK,EAAaZ,SAAUY,EAAa/F,MAAO7R,KAAKK,MAAMyX,OAAOC,eAAgB/X,KAAKK,MAAM2X,SAAKpU,EAAW5D,KAAKK,MAAM4X,UAAUC,UAEjJ,MAAT7I,GAA6B,MAAZoI,EAAkB,CACtC,MAAMU,EAAM/R,KAAKgS,MAAMhS,KAAKgS,OAAO/I,EAAQzB,GAAO8J,IAAqB,EAEnES,GAAO/R,KAAKgS,MAAMD,GACrBrB,EAASrK,WAAW,WAAW,GAG/BqK,EAASrK,WAAW,WAAW,E,MAOpCyG,EAAE,mBAAmBG,OAAO,CAC3BwD,SAAWjM,IACV,MAAMkM,EAAWlM,EAAS1H,IAAI,YAC9B,GAAI4T,EAAU,CAEb,MAAM9H,EAAQpE,EAAS1H,IAAI,SAC3B,IAAIiN,GAAU,EACT,WAAenB,IAAUA,EAAQ,GAAK,IAC1CmB,GAAU,GAEX2G,EAASrK,WAAW,UAAW0D,E,KAMlC+C,EAAE,aAAaG,OAAO,CAErBgF,UAAW,EACXC,aAAa,EACbjB,cAAc,EACdkB,UAAU,EAEV1B,SAAWjM,IACV,MAAMkM,EAAWlM,EAAS1H,IAAI,YAC9B,GAAI4T,EAAU,CACb,MAAM3R,EAAgCyF,EAASQ,UACzCiE,EAAQzE,EAAS1H,IAAI,SACrBsV,EAAOrT,EAAKO,WAAW,QAEzB,WAAe2J,IAAU,WAAemJ,KACvC,QAAYnJ,EAAQmJ,EAAO,EAAG,IAAMpS,KAAKgS,MAAM/I,EAAQmJ,EAAO,GACjE1B,EAASrK,WAAW,WAAW,GAG/BqK,EAASrK,WAAW,WAAW,G,KAOpCyG,EAAE,gBAAgBG,OAAO,CACxBoF,SAAU,WAUXvF,EAAE,YAAYG,OAAO,CACpBqF,aAAa,EACbC,iBAAiB,EAEjBC,UAAW,GACXC,UAAW,GAEX/C,aAAa,EAEbgD,kBAAmB,OACnBC,kBAAmB,OACnBC,cAAe,QACfC,cAAe,QAEfC,oBAAqB,WAGtBhG,EAAE,oBAAoBG,OAAO,CAC5B8F,sBAAsB,IAGvBjG,EAAE,gBAAgBG,OAAO,CACxB+F,WAAW,IAGZlG,EAAE,mBAAoB,CAAC,SAAU,WAAWG,OAAO,CAClD/N,SAAU,WACVvE,YAAY,EACZT,OAAO,QAAQ,IACfG,QAAQ,QAAQ,IAChB4Y,YAAa,EACb7E,cAAe,EACfH,eAAgB,EAChBF,eAAgB,EAChBC,eAAgB,EAChBF,eAAgB,EAChBF,YAAa,EACbuB,KAAM,WAGPrC,EAAE,cAAcG,OAAO,CACtBiG,SAAS,EACTC,aAAc,IACdZ,iBAAiB,IAGlBzF,EAAE,WAAY,CAAC,SAAU,WAAWG,OAAO,CAC1C/N,SAAU,WACV+T,YAAa,EACb7E,cAAe,EACfzT,YAAY,IAGbmS,EAAE,WAAY,CAAC,SAAU,SAASG,OAAO,CACxClD,SAAS,EACT6D,YAAa,EACb1O,SAAU,WACV+T,YAAa,EACb7E,cAAe,EACfzT,YAAY,IAGbmS,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,WAAWG,OAAO,CACtEmG,KAAM,CAACC,EAAcC,KACpB,MAAMtN,EAASsN,EAAOtN,OACtB,GAAIA,EAAQ,CACX,MAAMnD,EAAImD,EAAO3L,SACXuI,EAAIoD,EAAO9L,QACjBmZ,EAAQE,OAAO,EAAG1Q,EAAI,GACtBwQ,EAAQG,OAAO5Q,EAAGC,EAAI,E,KAKzB,CACC,MAAMkK,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,WAAWjR,OAAOsS,OAAO,WAAY,CAAC,IACxG,OAASpB,EAAM,SAAUJ,EAAI,W,CAG9BG,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,SAASG,OAAO,CACpEmG,KAAM,CAACC,EAAcC,KACpB,MAAMtN,EAASsN,EAAOtN,OACtB,GAAIA,EAAQ,CACX,MAAMnD,EAAImD,EAAO3L,SACXuI,EAAIoD,EAAO9L,QACjBmZ,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO5Q,EAAG,GAClByQ,EAAQG,OAAO5Q,EAAGC,GAClBwQ,EAAQG,OAAO,EAAG3Q,GAClBwQ,EAAQG,OAAO,EAAG,E,KAKrB,CACC,MAAMzG,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,SAASjR,OAAOsS,OAAO,WAAY,CAAC,IACtG,OAASpB,EAAM,SAAUJ,EAAI,W,CAG9BG,EAAE,wBAAwBG,OAAO,CAChCwG,QAAS,KAGV3G,EAAE,uBAAuBG,OAAO,CAC/BwG,QAAS,KAGV3G,EAAE,uBAAuBG,OAAO,CAC/BwG,QAAS,KAGV3G,EAAE,eAAeG,OAAO,CACvB/N,SAAU,WACVvE,YAAY,EACZT,OAAO,QAAQ,IACfG,QAAQ,QAAQ,IAChB4Y,YAAa,EACb7E,cAAe,EACfH,eAAgB,EAChBF,eAAgB,EAChBC,eAAgB,EAChBF,eAAgB,EAChBF,YAAa,EACbuB,KAAM,WAGPrC,EAAE,QAAQG,OAAO,CAChB/S,OAAO,QAAQ,IACfG,QAAQ,QAAQ,MAGjByS,EAAE,qBAAqBG,OAAO,CAC7ByG,iBAAkB,MAClBC,iBAAkB,MAClBC,kBAAmB,OACnBC,kBAAmB,OACnBnB,kBAAmB,OACnBC,kBAAmB,OACnBC,cAAe,QACfC,cAAe,UAIhB,CACC,MAAM9F,EAAOD,EAAE,YAAa,CAAC,SAAU,cAAcjR,OAAOsS,OAAO,eAAgB,CAAC,IACpF,OAASpB,EAAM,OAAQJ,EAAI,aAC3B,OAASI,EAAM,SAAUJ,EAAI,W,CAG9B,CACC,MAAMI,EAAOD,EAAE,YAAa,CAAC,SAAU,cAAcjR,OAAOsS,OAAO,eAAgB,CAAC,IACpF,OAASpB,EAAM,OAAQJ,EAAI,aAC3B,OAASI,EAAM,SAAUJ,EAAI,W,CAI9BG,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQjR,OAAOsS,OAAO,eAAgB,CAAEP,YAAa,IAC5Fd,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQjR,OAAOsS,OAAO,eAAgB,CAAEP,YAAa,IAE5F,CACC,MAAMb,EAAOD,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQjR,OAAOsS,OAAO,mBAAoB,CAAC,IAC/F,OAASpB,EAAM,OAAQJ,EAAI,aAC3B,OAASI,EAAM,SAAUJ,EAAI,W,CAG9B,CACC,MAAMI,EAAOD,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQjR,OAAOsS,OAAO,mBAAoB,CAAC,IAC/F,OAASpB,EAAM,OAAQJ,EAAI,aAC3B,OAASI,EAAM,SAAUJ,EAAI,W,CAMhBG,EAAE,mBAAoB,CAAC,cAE/BG,OAAO,CACXmB,cAAe,EACfR,YAAa,EACbqF,YAAa,EACb/Y,MAAO,GACPG,OAAQ,KAIV,CACC,MAAM0S,EAAOD,EAAE,WAAY,CAAC,YAAa,SAAU,SAEnDC,EAAKE,OAAO,CACX6G,aAAa,EACb7D,OAAO,EACP7B,cAAe,GACfgF,KAAOC,IACNA,EAAQE,OAAO,EAAG,IAClBF,EAAQG,OAAO,EAAG,MAElBH,EAAQE,OAAO,EAAG,IAClBF,EAAQG,OAAO,EAAG,MAElBH,EAAQE,OAAO,EAAG,IAClBF,EAAQG,OAAO,EAAG,KAAK,KAIzB,OAASzG,EAAM,SAAUJ,EAAI,sB,CAG9BG,EAAE,SAAU,CAAC,cAAcG,OAAO,CACjC8G,WAAW,EACX1G,WAAY,EACZC,cAAe,IAGhBR,EAAE,SAAU,CAAC,YAAa,aAAaG,OAAO,CAC7C+G,SAAU,GACV1D,gBAAiB,YACjBzB,QAAS,OAGV/B,EAAE,SAAU,CAAC,YAAa,eAAeG,OAAO,CAC/CqD,gBAAiB,YACjBzB,QAAS,OAGV/B,EAAE,SAAU,CAAC,YAAa,WAAY,SAASG,OAAO,CACrDnB,QAAS,OAGVgB,EAAE,SAAU,CAAC,YAAa,WAAY,UAAUG,OAAO,CACtDnB,QAAS,IAGVgB,EAAE,SAAU,CAAC,YAAa,aAAc,QAAQG,OAAO,CACtDnB,QAAS,IAGVgB,EAAE,SAAU,CAAC,YAAa,aAAc,WAAWG,OAAO,CACzDnB,QAAS,MAGX,E,mJCnpBM,MAAMmI,UAAiB,IAA9B,c,oBAQC,0C,iDAAiC,IAOjC,oC,gDAA8Bra,KAAKE,SAASC,KAAK,IAAKC,IAAIJ,KAAKK,MAAO,CACrEY,UAAW,CAAC,UAQb,oC,gDAA8BjB,KAAKE,SAASC,KAAK,IAAKC,IAAIJ,KAAKK,MAAO,CACrEY,UAAW,CAAC,UAQb,wC,gDAAsCjB,KAAKE,SAASC,KAAK,IAASC,IAAIJ,KAAKK,MAAO,CACjFY,UAAW,CAAC,YAAa,UAAWiU,MAAO,QAG5C,yC,yDACA,yC,gDAA+B,CAAE/T,EAAG,EAAGC,EAAG,KAC1C,0C,gDAAgC,CAAED,EAAG,EAAGC,EAAG,KAE3C,wC,iDAA+B,IAC/B,wC,iDAA+B,IAK/B,oC,yDAEA,mC,yDACA,mC,wDA6mBD,CA3mBW,SAAAC,GACTrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,KAAM,WAC7EM,MAAMF,YACNrB,KAAKqT,OAAO,CAAE,MAAS,KAAM5S,OAAQ,KAAMM,YAAY,EAAMuE,SAAU,aACvEtF,KAAKiC,OAAOsS,OAAO,SAAU,CAAEpE,SAAS,EAAMwE,QAAS,IACvD3U,KAAKua,aACLva,KAAKuO,cAAc,WAAW,GAE9BvO,KAAKwB,WAAWrB,KAAKH,KAAKwa,YAAW,KACpCxa,KAAKyM,WAAW,WAAW,EAAK,GAC9B,MAEHzM,KAAKwB,WAAWrB,KAAKH,KAAKya,MAAM5Y,OAAOC,GAAG,mBAAmB,KAC5D9B,KAAK0a,cAAc,KAGpB1a,KAAKwB,WAAWrB,KAAKH,KAAK2a,MAAM9Y,OAAOC,GAAG,mBAAmB,KAC5D9B,KAAK4a,cAAc,KAGpB5a,KAAKwB,WAAWrB,KAAKH,KAAKya,MAAM5Y,OAAOC,GAAG,SAAS,IAAM9B,KAAK6a,sBAC9D7a,KAAKwB,WAAWrB,KAAKH,KAAKya,MAAM5Y,OAAOC,GAAG,QAAQ,IAAM9B,KAAK8a,qBAE7D9a,KAAKwB,WAAWrB,KAAKH,KAAK2a,MAAM9Y,OAAOC,GAAG,SAAS,IAAM9B,KAAK6a,sBAC9D7a,KAAKwB,WAAWrB,KAAKH,KAAK2a,MAAM9Y,OAAOC,GAAG,QAAQ,IAAM9B,KAAK8a,qBAEzD,WAAgB,mBACnB9a,KAAKwB,WAAWrB,KAAK,mBAAwB4a,SAAU,WAAYC,IAClEhb,KAAKib,gBAAgB,cAAmBD,GAAKA,EAAGE,QAAQ,IAG3D,CAEU,WAAAnY,GACT,MAAM0N,EAAQzQ,KAAKyQ,MACfA,IACHA,EAAM3P,cAAcqC,SAASC,YAAsC,QAAxBpD,KAAKkD,IAAI,YAEtD,CAEU,YAAAwX,GACT,IAAIvZ,EAAInB,KAAKya,MAAMtZ,IACfgP,GAAU,GACVhP,EAAI,GAAKA,EAAInB,KAAKM,WACrB6P,GAAU,GAEXnQ,KAAKya,MAAMhO,WAAW,UAAW0D,EAClC,CAEU,YAAAyK,GACT,IAAIxZ,EAAIpB,KAAK2a,MAAMvZ,IACf+O,GAAU,GACV/O,EAAI,GAAKA,EAAIpB,KAAKS,YACrB0P,GAAU,GAEXnQ,KAAK2a,MAAMlO,WAAW,UAAW0D,EAClC,CAEU,eAAA8K,CAAgBE,EAAaD,GACtC,IAAIE,EAAW,GAEf,MAAM3K,EAAQzQ,KAAKyQ,MAEnB,IAAItL,EACJ,GAAIsL,GAASA,EAAMhP,MAAMmF,OAAQ,CAC5B5G,KAAKK,MAAMgb,QAAQrb,KAAKya,QAC3BW,EAAM,YACNjW,EAAOsL,EAAMhP,MAAMoF,SAAS,IAEpB7G,KAAKK,MAAMgb,QAAQrb,KAAK2a,SAChCxV,EAAOsL,EAAM/O,MAAMmF,SAAS,GAC5BuU,EAAM,aAGP,IAAIE,EAAI,EAKR,GAJIJ,IACHI,EAAI,GAGDnW,EAAM,CACT,IACIqT,EADAjC,EAAWpR,EAAKjC,IAAI,YAAYA,IAAI,YAAY,GAEzC,cAAPiY,GAA8B,aAAPA,EAC1B3C,EAAO,EAEQ,aAAP2C,GAA6B,WAAPA,EAC9B3C,GAAQ,EAEO,OAAP2C,IACR3C,EAAO,GAGI,MAARA,IACCjC,IACHiC,IAAS,GAGVxY,KAAKmC,IAAIiZ,EAAKjW,EAAKoW,aAAa/C,EAAO8C,I,EAI3C,CAEU,gBAAAT,GACT7a,KAAKwb,YAAcxb,KAAKkD,IAAI,cAAc,GAC1ClD,KAAKqT,OAAO,CACX1F,UAAW3N,KAAK0F,WAAW,YAAa,GACxCmI,UAAW7N,KAAK0F,WAAW,YAAa,GACxC+V,YAAY,IAGbzb,KAAKib,gBAAgB,MACtB,CAEU,eAAAH,IACL9a,KAAKya,MAAMiB,WAAa1b,KAAK2a,MAAMe,YACtC1b,KAAKqT,OAAO,CACX1F,eAAW/J,EACXiK,eAAWjK,EACX6X,WAAYzb,KAAKwb,aAGpB,CAEO,gBAAA5P,GAGN,GAFArK,MAAMqK,mBAEF5L,KAAKiD,QAAQ,SAAU,CAC1BjD,KAAK2b,WAAY,EACjB,MAAM9X,EAAQ7D,KAAKkD,IAAI,SAEvB,GAAIW,EAAO,CACV,MAAMqH,EAAUrH,EAAMX,IAAI,WACtBgI,IACHlL,KAAK2b,WAAY,EACjB3b,KAAKwB,WAAWrB,KACf+K,EAAQpJ,GAAG,WAAW,KACrB9B,KAAK4b,aAAa1Q,EAAQ,K,EAO/B,GAAIlL,KAAKiD,QAAQ,SAAU,CAC1BjD,KAAK6b,WAAY,EACjB,MAAM9X,EAAQ/D,KAAKkD,IAAI,SAEvB,GAAIa,EAAO,CACV,MAAMmH,EAAUnH,EAAMb,IAAI,WACtBgI,IACHlL,KAAK6b,WAAY,EACjB7b,KAAKwB,WAAWrB,KACf+K,EAAQpJ,GAAG,WAAW,KACrB9B,KAAK8b,aAAa5Q,EAAQ,K,EAMhC,CAEU,eAAA6Q,GACT,MAAMtL,EAAQzQ,KAAKyQ,MACnB,GAAIA,EAAO,CACV,MAAMuL,EAAWhc,KAAKkD,IAAI,YACpBoN,EAA8B,GAChC0L,GACH,OAAYA,GAAWhY,IACtB,MAAMyM,EAAQzM,EAAOyM,MACjBA,GACHH,EAAYnQ,KAAKsQ,E,IAIpBA,EAAMF,aAAeD,C,CAEvB,CAEO,eAAA2L,GAIN,GAHA1a,MAAM0a,kBACNjc,KAAK+b,kBAED/b,KAAKiD,QAAQ,cAAgBjD,KAAKiD,QAAQ,aAAc,CAC3D,MAAM0K,EAAY3N,KAAKkD,IAAI,aACrB2K,EAAY7N,KAAKkD,IAAI,aAEV,MAAbyK,GAAkC,MAAbE,EACxB7N,KAAKgC,KAAK,IAGVhC,KAAKsR,WAAatR,KAAKwL,SAASxL,KAAKkc,UAAUlc,KAAKkD,IAAI,YAAa,GAAIlD,KAAKkD,IAAI,YAAa,KAC/FlD,KAAKuL,a,CAGR,CAEU,YAAAqQ,CAAa1Q,GACtB,IAAI/J,EAAI,QAAYnB,KAAKmD,SAASsB,QAAQyG,EAAQhI,IAAI,UAAW,CAAE/B,EAAG,EAAGC,EAAG,KAAMD,EAAG,GACjFnB,KAAKmc,MAAQhb,IAChBnB,KAAKya,MAAM2B,QAAQ,CAAEjB,IAAK,IAAKkB,GAAIlb,EAAGmb,SAAUpR,EAAQhI,IAAI,oBAAqB,GAAIqZ,OAAQrR,EAAQhI,IAAI,qBACzGlD,KAAKmc,KAAOhb,EAEd,CAEU,YAAA2a,CAAa5Q,GACtB,IAAI9J,EAAI,QAAYpB,KAAKmD,SAASsB,QAAQyG,EAAQhI,IAAI,UAAW,CAAE/B,EAAG,EAAGC,EAAG,KAAMA,EAAG,GACjFpB,KAAKwc,MAAQpb,IAChBpB,KAAK2a,MAAMyB,QAAQ,CAAEjB,IAAK,IAAKkB,GAAIjb,EAAGkb,SAAUpR,EAAQhI,IAAI,oBAAqB,GAAIqZ,OAAQrR,EAAQhI,IAAI,qBACzGlD,KAAKwc,KAAOpb,EAEd,CAEU,UAAAmZ,GACTva,KAAKya,MAAMtY,IAAI,QAASsX,IACvBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAG5Z,KAAKS,SAAS,IAEjCT,KAAK2a,MAAMxY,IAAI,QAASsX,IACvBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO5Z,KAAKM,QAAS,EAAE,GAEjC,CAEO,YAAAoL,GACF1L,KAAKkD,IAAI,gBACZlD,KAAKsR,WAAatR,KAAKwL,SAASxL,KAAKkc,UAAUlc,KAAKkD,IAAI,YAAa,GAAIlD,KAAKkD,IAAI,YAAa,MAEhGlD,KAAKuL,YACN,CAEO,SAAAU,CAAUwE,GAChBzQ,KAAKyQ,MAAQA,EAEbzQ,KAAK+b,kBAEL,MAAMjb,EAAgB2P,EAAM3P,cAE5Bd,KAAK6B,OAAOC,GAAG,iBAAiB,KAC/B9B,KAAKwB,WAAWrB,KAAKH,KAAKwa,YAAW,KACpCxa,KAAK0L,cAAc,GACjB,IAAI,IAIJ,WAAgB,iBACnB1L,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,SAAUY,IAClD,eAAoBA,EAAM4B,gBAC7BtE,KAAKyc,YAAY/Z,E,KAGnB1C,KAAK+C,eAGN/C,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,eAAgBY,IAC5D1C,KAAK0c,kBAAkBha,EAAM,KAG9B1C,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,mBAAoBY,IAChE1C,KAAK2c,gBAAgBja,GAChBA,EAAMka,QAAW5c,KAAKwK,YAC1BxK,KAAKyc,YAAY/Z,E,KAInB1C,KAAKwB,WAAWrB,KAAKW,EAAce,OAAOC,GAAG,qBAAsBY,KAC7D1C,KAAKkD,IAAI,aACyC,GAAlD,OAAapC,EAAc6F,aAAaC,QAAgBlE,EAAMka,SAAU5c,KAAKwK,cAMlFxK,KAAKyc,YAAY/Z,GAEb0D,KAAK6E,MAAMjL,KAAK6c,YAAY1b,EAAIuB,EAAMgC,MAAMvD,EAAGnB,KAAK6c,YAAYzb,EAAIsB,EAAMgC,MAAMtD,GAAK,IACxFpB,KAAK8a,kBACL9a,KAAK6c,YAAcna,EAAMgC,O,KAI3B,MAAM0H,EAASpM,KAAKoM,OAChBA,GACHA,EAAOlM,SAASkP,UAAUpP,KAAK8c,UAEjC,CAEU,OAAAC,CAAQrY,GACjB,MAAM+L,EAAQzQ,KAAKyQ,MACnB,QAAIA,GACIA,EAAMJ,OAAO3L,EAGtB,CAEU,iBAAAgY,CAAkBha,GAC3B,GAA2C,GAAtCA,EAAM4B,cAAsBkC,OAChC,OAGD,MAAMwW,EAAYta,EAAMgC,MACxB,IAAI+B,EAAQzG,KAAKmD,SAASsB,QAAQuY,GAClC,MAAMvM,EAAQzQ,KAAKyQ,MAInB,GAFAzQ,KAAK8c,UAAU3a,IAAI,QAAQ,SAEvBsO,GAASzQ,KAAK+c,QAAQtW,GAAQ,CAGjC,GAFAzG,KAAKkH,WAAaT,EAEU,QAAxBzG,KAAKkD,IAAI,YAAuB,CACnClD,KAAK8c,UAAU1M,OAEf,MAAMxI,EAAO,gBACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,CAI9E,IAAIqJ,EAAY3N,KAAKid,aAAaxW,GAAOtF,EACrC0M,EAAY7N,KAAKid,aAAaxW,GAAOrF,EAEzCpB,KAAKyM,WAAW,gBAAiBkB,GACjC3N,KAAKyM,WAAW,gBAAiBoB,E,CAEnC,CAEU,eAAA8O,CAAgBja,GAEzB,GAAI1C,KAAKkH,WAAY,CACpB,MAAMsG,EAAWxN,KAAKkD,IAAI,WAAY,QACtC,GAAgB,QAAZsK,EAAoB,CACI,MAAvBA,EAAS0P,OAAO,IACnBld,KAAK8c,UAAU9a,OAGhB,MAAMgb,EAAYta,EAAMgC,MACxB,IAAI+B,EAAQzG,KAAKmD,SAASsB,QAAQuY,GAElC,MAAMhV,EAAYhI,KAAKkH,WACjBkO,EAAgBpV,KAAKkD,IAAI,gBAAiB,GAChD,GAAIuD,GAASuB,EAAW,CACvB,IAAIL,GAAW,EAaf,GAZiB,UAAb6F,GAAqC,WAAbA,GAAsC,YAAbA,GAAuC,aAAbA,GAC1EpH,KAAKC,IAAII,EAAMtF,EAAI6G,EAAU7G,GAAKiU,IACrCzN,GAAW,GAII,UAAb6F,GAAqC,WAAbA,GAAsC,YAAbA,GAAuC,aAAbA,GAC1EpH,KAAKC,IAAII,EAAMrF,EAAI4G,EAAU5G,GAAKgU,IACrCzN,GAAW,GAITA,EAAU,CACb,MAAMC,EAAO,cACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,KAGzE,CACJ,MAAMsD,EAAO,kBACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,KAAMsE,cAAe5B,EAAM4B,e,IAMjFtE,KAAKkH,gBAAatD,CACnB,CAEU,WAAA6Y,CAAY/Z,GACrB,GAAI1C,KAAK0F,WAAW,WAAY,CAC/B,MAAM+K,EAAQzQ,KAAKyQ,MACnB,GAAIA,GAAS,OAAaA,EAAM3P,cAAc6F,aAAaC,OAAS,EAEnE,YADA5G,KAAKmC,IAAI,eAAe,GAIxBnC,KAAKmC,IAAI,eAAe,GAIzB,MAAM6a,EAAYta,EAAMgC,MAClByY,EAAYnd,KAAKod,WAEvB,GAAIhX,KAAKgS,MAAM+E,EAAUhc,KAAOiF,KAAKgS,MAAM4E,EAAU7b,IAAMiF,KAAKgS,MAAM+E,EAAU/b,KAAOgF,KAAKgS,MAAM4E,EAAU5b,GAC3G,OAGDpB,KAAKod,WAAaJ,EAClBhd,KAAKyM,WAAW,YAAauQ,GAE7Bhd,KAAKuL,WAAW,CAAEpK,EAAG6b,EAAU7b,EAAGC,EAAG4b,EAAU5b,IAAK,EAAOsB,EAAM4B,c,CAEnE,CAEU,YAAA2Y,CAAavY,GACtB,MAAO,CAAEvD,EAAGuD,EAAMvD,EAAInB,KAAKM,QAASc,EAAGsD,EAAMtD,EAAIpB,KAAKS,SACvD,CAWO,UAAA8K,CAAW7G,EAAgB2Y,EAAqB/Y,GACjDI,IACJA,EAAQ1E,KAAKsR,YAGd,MAAMmK,EAAazb,KAAKkD,IAAI,cAE5B,IAAKwB,EAEJ,YADA1E,KAAKgC,KAAK,GAIXhC,KAAKsR,WAAa5M,EAClB,IAAI+B,EAAQzG,KAAKmD,SAASsB,QAAQC,GAC9B+L,EAAQzQ,KAAKyQ,MAEjB,GAAIA,IAAUzQ,KAAK+c,QAAQtW,IAAUzG,KAAKkH,YAAa,CACtDuJ,EAAMa,WAAa5M,EAEf1E,KAAKwK,aACRxK,KAAKoQ,OAGqB,KADTpQ,KAAKkD,IAAI,WAAY,IACzBga,OAAO,IACnBld,KAAK8c,UAAU3a,IAAI,QAAQ,UAI7B,IAAIhB,EAAIsF,EAAMtF,EACVC,EAAIqF,EAAMrF,EAEVkc,EAAQtd,KAAKid,aAAaxW,GAE9BzG,KAAKyM,WAAW,QAAShG,GAEzB,IAAIxC,EAAejE,KAAKkD,IAAI,gBAExBlD,KAAKkH,aACRjD,OAAeL,GAGhB,IAAI2Z,EAAgBvd,KAAKkD,IAAI,aACzByK,EAAY2P,EAAMnc,EAElB,WAAeoc,KAClB5P,EAAY4P,GAGb,IAAIC,EAAgBxd,KAAKkD,IAAI,aACzB2K,EAAYyP,EAAMlc,EAElB,WAAeoc,KAClB3P,EAAY2P,GAGbxd,KAAKyM,WAAW,YAAakB,GAC7B3N,KAAKyM,WAAW,YAAaoB,GAE7B,MAAM4P,EAAKzd,KAAKkc,UAAUvO,EAAWE,GAiBrC,GAhBA1M,EAAIsc,EAAGtc,EACPC,EAAIqc,EAAGrc,EAEPqP,EAAMhP,MAAMyD,MAAMC,IACjBA,EAAKiF,sBAAsBuD,EAAW1J,GAClCwX,GACHtW,EAAKuY,kB,IAGPjN,EAAM/O,MAAMwD,MAAMC,IACjBA,EAAKiF,sBAAsByD,EAAW5J,GAClCwX,GACHtW,EAAKuY,kB,KAIFL,EAAW,CACf5M,EAAMrG,wBAEN,MAAMxC,EAAO,cACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,KAAM0E,MAAOA,EAAOJ,cAAeA,G,CAItFtE,KAAK2d,aAAaxc,EAAGC,GAErBqP,EAAMK,iB,MAEF,IAAK9Q,KAAKkH,aACTuU,EAAY,CAChBzb,KAAKgC,KAAK,GAEV,MAAM4F,EAAO,eACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,M,CAKhDA,KAAKkH,YAAsC,QAAxBlH,KAAKkD,IAAI,aAC/BlD,KAAK4d,iBAAiBnX,EAExB,CAEU,SAAAyV,CAAUvO,EAAmBE,GACtC,MAAO,CAAE1M,EAAGnB,KAAKM,QAAUqN,EAAWvM,EAAGpB,KAAKS,SAAWoN,EAC1D,CAGU,YAAA8P,CAAaxc,EAAWC,GAC5BpB,KAAK2b,WACT3b,KAAKya,MAAMtY,IAAI,IAAKhB,GAEhBnB,KAAK6b,WACT7b,KAAK2a,MAAMxY,IAAI,IAAKf,GAGrBpB,KAAKua,YACN,CAEU,gBAAAqD,CAAiBlZ,GAC1B,MAAMoY,EAAY9c,KAAK8c,UACjBtP,EAAWxN,KAAKkD,IAAI,YACpB8F,EAAIhJ,KAAKM,QACT2I,EAAIjJ,KAAKS,SAEXiE,EAAMvD,EAAI,IACbuD,EAAMvD,EAAI,GAGPuD,EAAMvD,EAAI6H,IACbtE,EAAMvD,EAAI6H,GAGPtE,EAAMtD,EAAI,IACbsD,EAAMtD,EAAI,GAGPsD,EAAMtD,EAAI6H,IACbvE,EAAMtD,EAAI6H,GAGX6T,EAAU3a,IAAI,QAASsX,IACtB,MAAMzR,EAAYhI,KAAKkH,WACnBc,IACc,WAAbwF,GAAsC,aAAbA,GAC5BiM,EAAQE,OAAO3R,EAAU7G,EAAG6G,EAAU5G,GACtCqY,EAAQG,OAAO5R,EAAU7G,EAAGuD,EAAMtD,GAClCqY,EAAQG,OAAOlV,EAAMvD,EAAGuD,EAAMtD,GAC9BqY,EAAQG,OAAOlV,EAAMvD,EAAG6G,EAAU5G,GAClCqY,EAAQG,OAAO5R,EAAU7G,EAAG6G,EAAU5G,IAEjB,UAAboM,GAAqC,YAAbA,GAChCiM,EAAQE,OAAO3R,EAAU7G,EAAG,GAC5BsY,EAAQG,OAAO5R,EAAU7G,EAAG8H,GAC5BwQ,EAAQG,OAAOlV,EAAMvD,EAAG8H,GACxBwQ,EAAQG,OAAOlV,EAAMvD,EAAG,GACxBsY,EAAQG,OAAO5R,EAAU7G,EAAG,IAEP,UAAbqM,GAAqC,YAAbA,IAChCiM,EAAQE,OAAO,EAAG3R,EAAU5G,GAC5BqY,EAAQG,OAAO5Q,EAAGhB,EAAU5G,GAC5BqY,EAAQG,OAAO5Q,EAAGtE,EAAMtD,GACxBqY,EAAQG,OAAO,EAAGlV,EAAMtD,GACxBqY,EAAQG,OAAO,EAAG5R,EAAU5G,I,GAIhC,CAEU,OAAAyc,GACT,GAAI7d,KAAKwK,WAAY,CACpB,IAAIiG,EAAQzQ,KAAKyQ,MACbA,IAEHA,EAAMhP,MAAMyD,MAAMC,IACjBA,EAAK2Y,kBAAkB,IAExBrN,EAAM/O,MAAMwD,MAAMC,IACjBA,EAAK2Y,kBAAkB,IAExBrN,EAAMlN,OAAO2B,MAAM3B,IAClBA,EAAOua,kBAAkB,I,CAI5Bvc,MAAMsc,SACP,CAEU,OAAAE,GACT,IAAK/d,KAAKwK,WAAY,CACrB,IAAIiG,EAAQzQ,KAAKyQ,MACbA,IACHA,EAAMhP,MAAMyD,MAAMC,IACjBA,EAAKuY,kBAAkB,IAExBjN,EAAM/O,MAAMwD,MAAMC,IACjBA,EAAKuY,kBAAkB,I,CAI1Bnc,MAAMwc,SACP,CAEU,QAAAtL,GACTlR,MAAMkR,WACNzS,KAAK8c,UAAUpZ,SAChB,EA7pBA,qC,gDAAkC,aAClC,sC,gDAA0C,IAAUgP,WAAWC,OAAO,CAAC0H,EAASzH,a,2IC+C1E,MAAeoL,UAAqC,IAA3D,c,oBAWC,sC,gDAAgD,KAEhD,yC,iDAA6B,IAK7B,6C,gDAAqE,KAOrE,8C,gDAA6Che,KAAKE,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAC,MAO3F,4C,gDAA2C,IAAUD,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,SAO5F,+C,gDAA8C,IAAUL,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMG,OAAQ,SAO/F,+C,gDAA8CT,KAAKE,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAEU,YAAY,EAAOT,MAAO,KAAMG,OAAQ,KAAM6E,SAAU,gBAKrJ,oC,yDAEA,2C,iDAAkC,IAElC,wC,gDAA2B,IAC3B,sC,gDAAyB,IAEzB,0C,yDACA,0C,yDAEA,wC,iDAA4B,IAQ5B,yC,gDAAwE,IAAI,OAE5E,gD,gDAAuE,KAQvE,yC,yDAEA,8C,iDAAqC,IAErC,4C,yDAEA,iD,iDAA4B,IAE5B,2C,iDAAsB,IAStB,yC,gDAA+BtF,KAAKE,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAC3EY,UAAW,CAAC,OAAQ,UACpBqE,SAAU,WACV2Y,WAAY,IAAU7d,IAAIJ,KAAKK,MAAO,CACrCY,UAAW,CAAC,SAAU,cACtB6S,KAAM9T,KAAKK,MAAM2S,gBAAgB9P,IAAI,qBAIvC,uC,gDAAmD,CAAC,GAu3BrD,CAr3BW,QAAAuP,GAETzS,KAAKqD,cAAcK,UACnB1D,KAAKwC,iBAAiBkB,UACtB1D,KAAKyC,iBAAiBiB,UACtB1D,KAAKke,gBAAgBxa,UACrB1D,KAAKme,WAAWza,UAChBnC,MAAMkR,UACP,CAEU,SAAApR,GACTE,MAAMF,YAENrB,KAAKyM,WAAW,mBAAmB,GAEnCzM,KAAKwB,WAAWrB,KAAKH,KAAKoe,WAAWvc,OAAO4M,OAAOC,IAClD,GAAoB,UAAhBA,EAAO9G,KACV,OAAY8G,EAAOC,WAAY/D,IAC9B5K,KAAKqe,gBAAgBzT,EAAS,SAEzB,GAAoB,SAAhB8D,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,SAAU,CAAC,eACnC,GAAoB,aAAhBH,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,SAAU,CAAC,eACnC,GAAoB,gBAAhBH,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,SAAU,CAAC,eACnC,GAAoB,gBAAhBH,EAAO9G,KACjB5H,KAAKqe,gBAAgB3P,EAAOQ,cACtB,IAAoB,cAAhBR,EAAO9G,KAGjB,MAAM,IAAIuH,MAAM,6BAFhBnP,KAAKse,kBAAkB5P,EAAOW,MAAO,CAAC,S,MAMxC,MAAMkP,EAAWve,KAAKkD,IAAI,YACtBqb,IACHA,EAASpZ,KAAOnF,KAChBue,EAASxO,eAEV/P,KAAKE,SAASC,KAAKoe,GACnBve,KAAKwe,WAAaD,EAASE,UAAU,IAAI,IAASze,UAAM4D,EAAW,CAAC,GAAI,IACxE5D,KAAKwe,WAAWE,SAASC,QAAQ,QACjC3e,KAAKwe,WAAWnL,OAAO,CAAEsB,QAAS,EAAGiK,iBAAahb,EAAWib,iBAAajb,EAAWsW,aAAa,IAClGla,KAAKwe,WAAW3c,OAAO8c,SACxB,CAEU,aAAAG,CAAcC,EAAgBC,GAExC,CAYO,IAAAnZ,CAAKT,EAAeC,EAAaiX,EAAmBpO,GAC1D,GAAGlO,KAAKkD,IAAI,YAAY,GAGvB,GAFAlD,KAAK8e,cAAc1Z,EAAOC,GAEtBrF,KAAKkD,IAAI,WAAakC,GAASpF,KAAKkD,IAAI,QAAUmC,EAAK,CAC1D,IAAI4Z,EAAajf,KAAKkf,YAClBC,EAAanf,KAAKof,YAElBvJ,EAAe7V,KAAKkD,IAAI,eAAgB,IAAOkD,KAAKwH,IAAI,EAAIvI,EAAMD,GAElEA,GAAUyQ,IACbzQ,GAASyQ,GAGNxQ,EAAM,EAAIwQ,IACbxQ,EAAM,EAAIwQ,GAGPzQ,EAAQC,KACVD,EAAOC,GAAO,CAACA,EAAKD,IAGjB,WAAekX,KACnBA,EAAWtc,KAAKkD,IAAI,wBAAyB,IAGzCgL,IACJA,EAAW,OAGZ,IAAI0H,EAAgB5V,KAAK0F,WAAW,gBAAiB1F,KAAKkD,IAAI,gBAAiB,MAC3Emc,EAAoBzJ,EAEZ,IAARvQ,GAAuB,IAAVD,IAEf8I,EADG9I,EAAQpF,KAAKkD,IAAI,QAAS,GAClB,QAGA,OAIC,IAAVkC,GAAuB,IAARC,IAEjB6I,EADG7I,EAAMrF,KAAKkD,IAAI,MAAO,GACd,MAGA,SAIb,IAAIwS,EAAe1V,KAAKkD,IAAI,eAAgB,GACxCyS,EAAe3V,KAAKkD,IAAI,eAAgByC,KAExC,WAAe+P,KAClBE,EAAgByJ,EAAoB3J,GAGrC,IAAI4J,EAAwB,EAoD5B,GAlDI,WAAe3J,KAClB2J,EAAgBD,EAAoB1J,GAIpB,UAAbzH,GACCyH,EAAe,GAEd,GAAKtQ,EAAMD,GAASka,IACvBja,EAAMD,EAAQ,EAAIka,GAKhB,GAAKja,EAAMD,GAASwQ,IACvBvQ,EAAMD,EAAQ,EAAIwQ,GAGfvQ,EAAM,GAAKA,EAAMD,EAAQ,EAAIwQ,IAEhCxQ,EAAQC,EAAM,EAAIuQ,KAKfD,EAAe,GAEd,GAAKtQ,EAAMD,GAASka,IACvBla,EAAQC,EAAM,EAAIia,GAKhB,GAAKja,EAAMD,GAASwQ,IACvBxQ,EAAQC,EAAM,EAAIuQ,GAEfxQ,EAAQ,GAAKC,EAAMD,EAAQ,EAAIwQ,IAElCvQ,EAAMD,EAAQ,EAAIwQ,IAIhB,GAAKvQ,EAAMD,GAASwQ,IACvBvQ,EAAMD,EAAQ,EAAIwQ,GAGf,GAAKvQ,EAAMD,GAASwQ,IACvBxQ,EAAQC,EAAM,EAAIuQ,GAGC,MAAhBD,GAAwC,MAAhBD,GAAyBtQ,GAASpF,KAAKkD,IAAI,UAAYmC,GAAOrF,KAAKkD,IAAI,OAAS,CAC3G,MAAMuN,EAAQzQ,KAAKyQ,MACfA,GACHA,EAAMjE,qBAAqBxM,MAAM,E,CAInC,IAAMif,GAAcA,EAAWM,SAAWN,EAAW5C,IAAMjX,GAAUpF,KAAKkD,IAAI,UAAYkC,KAAY+Z,GAAcA,EAAWI,SAAWJ,EAAW9C,IAAMhX,GAAQrF,KAAKkD,IAAI,QAAUmC,GACrL,OAID,GAAIiX,EAAW,EAAG,CACjB,IACI2C,EAAYE,EADZ5C,EAASvc,KAAKkD,IAAI,uBAYtB,GAVIlD,KAAKkD,IAAI,UAAYkC,IACxB6Z,EAAajf,KAAKoc,QAAQ,CAAEjB,IAAK,QAASkB,GAAIjX,EAAOkX,SAAUA,EAAUC,OAAQA,KAE9Evc,KAAKkD,IAAI,QAAUmC,IACtB8Z,EAAanf,KAAKoc,QAAQ,CAAEjB,IAAK,MAAOkB,GAAIhX,EAAKiX,SAAUA,EAAUC,OAAQA,KAG9Evc,KAAKkf,YAAcD,EACnBjf,KAAKof,YAAcD,EAEfF,EACH,OAAOA,EAEH,GAAIE,EACR,OAAOA,C,MAIRnf,KAAKmC,IAAI,QAASiD,GAClBpF,KAAKmC,IAAI,MAAOkD,E,MAIbrF,KAAKkf,aACRlf,KAAKkf,YAAYM,OAEdxf,KAAKof,aACRpf,KAAKof,YAAYI,MAIrB,CAOA,UAAWjc,GACV,OAAOvD,KAAKyf,OACb,CAGO,iBAAAnB,CAAkB1T,EAA+C3J,GACvE2J,EAASU,OAAO,WAAW,GAC3BtL,KAAK0f,cAAc9U,EAAU3J,GAC7BjB,KAAK2f,cAAe,EACpB3f,KAAK4f,iBAAiBhV,GAEtB,MAAMiV,EAAQjV,EAAS1H,IAAI,SACrBsL,EAAYxO,KAAKwC,iBAEjBsd,EAAOlV,EAAS1H,IAAI,QACtB2c,GAASC,GACZtR,EAAUtO,SAASkP,UAAU0Q,GAG9B,MAAMhM,EAAOlJ,EAAS1H,IAAI,YACtB2c,GAAS/L,GACZtF,EAAUtO,SAASkP,UAAU0E,EAE/B,CAEO,gBAAA8L,CAAiBG,EAAgDC,GAAmB,CAmCpF,iBAAAlc,GACP,CAKO,0BAAAmc,GACP,CAEO,gBAAAC,GACP,CAEU,iBAAAC,GACTngB,KAAKogB,SAAW,CAAC,EACjBpgB,KAAKoe,WAAWlZ,MAAMmb,IACrBrgB,KAAK4f,iBAAiBS,EAAU,IAGjC,OAAYrgB,KAAKsgB,mBAAoBD,IACpCrgB,KAAK4f,iBAAiBS,EAAU,GAElC,CAOO,gBAAAzU,GAUN,GATArK,MAAMqK,mBAEF5L,KAAKkD,IAAI,eACZlD,KAAKwe,WAAWrc,IAAI,WAAW,GAG/BnC,KAAKwe,WAAWrc,IAAI,WAAW,GAG5BnC,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,OAAQ,CACjD,MAAMwN,EAAQzQ,KAAKyQ,MACfA,GACHA,EAAMhF,gBAGP,IAAIrG,EAAQpF,KAAKkD,IAAI,QAAS,GAC1BmC,EAAMrF,KAAKkD,IAAI,MAAO,GAEtB2S,EAAe7V,KAAKkD,IAAI,eAAgB,IAAOkD,KAAKwH,IAAI,EAAIvI,EAAMD,GAEtE,GAAIA,GAASyQ,EAAc,CAC1B,IAAI/P,EAAQV,EAAQyQ,EACpBzQ,GAASyQ,EACT7V,KAAKsL,OAAO,QAASlG,GACjBpF,KAAKiD,QAAQ,QAChBjD,KAAKsL,OAAO,MAAOjG,EAAMS,E,CAG3B,GAAIT,EAAM,EAAIwQ,EAAc,CAC3B,IAAI/P,EAAQT,EAAM,EAAIwQ,EACtBxQ,EAAM,EAAIwQ,EACV7V,KAAKsL,OAAO,MAAOjG,GAEfrF,KAAKiD,QAAQ,UAChBjD,KAAKsL,OAAO,QAASlG,EAAQU,E,EAMhC,MAAMyY,EAAWve,KAAKkD,IAAI,YAO1B,GANAqb,EAASQ,OAAS/e,KAAKkD,IAAI,SAC3Bqb,EAASS,KAAOhf,KAAKkD,IAAI,OACzBqb,EAASgC,UAAYhC,EAASrb,IAAI,YAAY,GAC9Cqb,EAASiC,YAAcjC,EAASkC,cAAgBlC,EAASS,KAAOT,EAASQ,QACzER,EAASmC,YAEL1gB,KAAKiD,QAAQ,WAAY,CAC5B,MAAMiI,EAAUlL,KAAKkD,IAAI,WACzB,GAAIgI,EAAS,CACZ,MAAMyV,EAAepC,EAASrb,IAAI,aAClCgI,EAAQ0V,OAAO,QACf1V,EAAQ0V,OAAO5gB,KAAK4S,UAAUiO,eAC9B3V,EAAQ4V,eAEJH,IACHzV,EAAQ/I,IAAI,YAAa,YAAiB+I,EAAQhI,IAAI,aAAcyd,IACpEzV,EAAQ6V,MAAMD,e,EAIlB,CAEO,oBAAAE,GACN,MAAM9V,EAAUlL,KAAKkD,IAAI,WACrBgI,GACHlL,KAAKkD,IAAI,YAAY+d,oBAAoB/V,EAE3C,CAEO,aAAAgW,GACN3f,MAAM2f,gBACNlhB,KAAKghB,sBACN,CAKO,YAAAlS,CAAa2B,GACnBzQ,KAAKyQ,MAAQA,EACIzQ,KAAKkD,IAAI,YAEjBuN,MAAQA,EACjBA,EAAMpN,cAAcnD,SAASC,KAAKH,KAAKqD,eACvCoN,EAAMjO,iBAAiBtC,SAASC,KAAKH,KAAKwC,kBAE1CiO,EAAM0Q,qBAAqBjhB,SAASC,KAAKH,KAAKme,YAE9Cne,KAAK8B,GAAG,SAAS,KAChB2O,EAAMjE,qBAAqBxM,KAAK,IAEjCA,KAAK8B,GAAG,OAAO,KACd2O,EAAMjE,qBAAqBxM,KAAK,IAGjCyQ,EAAM3P,cAAcsgB,UAAU,SAAS,KACtCphB,KAAKqhB,eAAe,IAErB5Q,EAAM3P,cAAcsgB,UAAU,UAAU,KACvCphB,KAAKqhB,eAAe,IAGrB5Q,EAAMV,YAAY/P,KACnB,CAKO,YAAAshB,CAAa1W,GAEnB,OADA5K,KAAKuhB,kBAAkB3W,GAAU,GAC1BrJ,MAAM+f,aAAa1W,EAC3B,CAKO,YAAA4W,CAAa5W,GAEnB,OADA5K,KAAKuhB,kBAAkB3W,GAAU,GAC1BrJ,MAAMigB,aAAa5W,EAC3B,CAEO,iBAAA2W,CAAkB3W,EAAmC6W,GAC3D,MAAMC,EAAK,cACLX,EAAQnW,EAAS1H,IAAI,SACvB6d,GACHA,EAAM5e,IAAIuf,EAAID,GAEf,MAAM3B,EAAOlV,EAAS1H,IAAI,QACtB4c,GACHA,EAAK3d,IAAIuf,EAAID,GAEd,MAAME,EAAO/W,EAAS1H,IAAI,QACtBye,GACHA,EAAKxf,IAAIuf,EAAID,GAEd,MAAM3K,EAAWlM,EAAS1H,IAAI,YAC1B4T,GACHA,EAAS3U,IAAIuf,EAAID,GAGlB,MAAMG,EAAShX,EAAS1H,IAAI,UAC5B,GAAI0e,EAAQ,CACX,MAAMlI,EAASkI,EAAO1e,IAAI,UACtBwW,GACHA,EAAOvX,IAAIuf,EAAID,E,CAGlB,CAGO,eAAAI,CAAgBjX,EAAmCuF,GACzD,MAAM4Q,EAAQnW,EAAS1H,IAAI,SACrB4e,EAAI,UACNf,GACHA,EAAMtU,WAAWqV,EAAG3R,GAErB,MAAM2P,EAAOlV,EAAS1H,IAAI,QACtB4c,GACHA,EAAKrT,WAAWqV,EAAG3R,GAEpB,MAAMwR,EAAO/W,EAAS1H,IAAI,QACtBye,GACHA,EAAKlV,WAAWqV,EAAG3R,GAEpB,MAAM2G,EAAWlM,EAAS1H,IAAI,YAC1B4T,GACHA,EAASrK,WAAWqV,EAAG3R,GAGxB,MAAMyR,EAAShX,EAAS1H,IAAI,UAC5B,GAAI0e,EAAQ,CACX,MAAMlI,EAASkI,EAAO1e,IAAI,UACtBwW,GACHA,EAAOjN,WAAWqV,EAAG3R,E,CAGxB,CAOO,aAAAuP,CAAc9U,EAA+CmX,EAAqBC,G,UACxF,MAAMzD,EAAWve,KAAKkD,IAAI,YAC1B,IAAIoY,EAAI,QAER,MAAMyF,EAAQnW,EAAS1H,IAAI,SAC3B,GAAK6d,EAGA,CACJ,IAAI9f,EAAY8f,EAAM7d,IAAI,aACtB+e,GAAS,EACTD,GAC2B,IAA1B/gB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,IAIoB,IAA1BhhB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,GAIPA,IACS,QAAZ,EAAAlB,EAAM3U,cAAM,SAAElM,SAASuP,YAAYsR,GACnCxC,EAASE,UAAU7T,EAAUmX,GAC7BhB,EAAMrd,UACN6a,EAAS2D,OAAOzS,YAAYsR,G,MApB7BxC,EAASE,UAAU7T,EAAUmX,GAwB9B,MAAMjC,EAAOlV,EAAS1H,IAAI,QAE1B,GAAK4c,EAGA,CACJ,IAAI7e,EAAY6e,EAAK5c,IAAI,aACrB+e,GAAS,EACTD,GAC2B,IAA1B/gB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,IAIoB,IAA1BhhB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,GAIPA,IACQ,QAAX,EAAAnC,EAAK1T,cAAM,SAAElM,SAASuP,YAAYqQ,GAClCvB,EAAS4D,SAASvX,EAAUmX,GAC5BjC,EAAKpc,UACL6a,EAASuB,KAAKrQ,YAAYqQ,G,MApB3BvB,EAAS4D,SAASvX,EAAUmX,GAwB7B,MAAMJ,EAAO/W,EAAS1H,IAAI,QAC1B,GAAKye,EAGA,CACJ,IAAIM,GAAS,EACThhB,EAAY0gB,EAAKze,IAAI,aACrB8e,GAC2B,IAA1B/gB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,IAIoB,IAA1BhhB,aAAS,EAATA,EAAWgP,QAAQqL,MACtB2G,GAAS,GAGPA,IACQ,QAAX,EAAAN,EAAKvV,cAAM,SAAElM,SAASuP,YAAYkS,GAClCpD,EAAS6D,SAASxX,EAAUmX,GAC5BJ,EAAKje,UACL6a,EAAS8D,MAAM5S,YAAYkS,G,MAnB5BpD,EAAS6D,SAASxX,EAAUmX,GAuBxBC,GAAUpX,EAAS1H,IAAI,aAC3Bqb,EAAS+D,aAAa1X,EAAUmX,GAGjC/hB,KAAKuiB,eAAe3X,EACrB,CAEU,cAAA2X,CAAe3X,GACxB,IAAIgX,EAAShX,EAAS1H,IAAI,UACtBsf,EAAaxiB,KAAKkD,IAAI,UAM1B,GAJK0e,IAAUY,GAAe5X,EAAS1H,IAAI,aAC1C0e,EAASY,EAAWxiB,KAAKK,MAAOL,KAAM4K,IAGnCgX,EAAQ,CACXA,EAAOzc,KAAOnF,KACd,MAAM0Z,EAASkI,EAAO1e,IAAI,UAEtBwW,IACHA,EAAOvO,aAAaP,GACpBA,EAASU,OAAO,SAAUsW,GACrBlI,EAAOtN,QACXpM,KAAKyC,iBAAiBvC,SAASC,KAAKuZ,G,CAIxC,CAEO,aAAA+I,GACNlhB,MAAMkhB,gBAEN,MAAMhS,EAAQzQ,KAAKyQ,MACfA,IACHA,EAAMb,qBACNa,EAAM0Q,qBAAqBE,iBAG5BrhB,KAAKkD,IAAI,YAAYwf,mBAErB1iB,KAAKmN,cAAe,CACrB,CAKO,eAAAkR,CAAgBzT,GACtBrJ,MAAM8c,gBAAgBzT,GACtB,MAAM2T,EAAWve,KAAKkD,IAAI,YACpB6d,EAAQnW,EAAS1H,IAAI,SACvB6d,IACHxC,EAAS2D,OAAOzS,YAAYsR,GAC5BA,EAAMrd,WAEP,MAAMie,EAAO/W,EAAS1H,IAAI,QACtBye,IACHpD,EAAS8D,MAAM5S,YAAYkS,GAC3BA,EAAKje,WAEN,MAAMoc,EAAOlV,EAAS1H,IAAI,QACtB4c,IACHvB,EAASuB,KAAKrQ,YAAYqQ,GAC1BA,EAAKpc,WAEN,MAAMoT,EAAWlM,EAAS1H,IAAI,YAC1B4T,IACHyH,EAASoE,UAAUlT,YAAYqH,GAC/BA,EAASpT,WAEV,MAAMke,EAAShX,EAAS1H,IAAI,UAExB0e,GACHA,EAAOle,SAET,CAEU,YAAAkf,GACT5iB,KAAKyM,WAAW,YAAazM,KAAK6iB,uBAAyB7iB,KAAKkD,IAAI,YAAYud,cAChF,MAAMjC,EAAaxe,KAAKwe,WACxB,IAAKA,EAAWhU,WAAY,CAC3B,MAAMgI,EAASgM,EAAWsE,cACpBC,EAAS3c,KAAK4c,KAAKxQ,EAAO1C,MAAQ0C,EAAO3C,MAC/C,IAAIkF,EAAOyJ,EAAWtb,IAAI,QAC1B,OAAYlD,KAAKuK,WAAYK,IAC5B,MAAMmW,EAAQnW,EAAS1H,IAAI,SAC3B,GAAI6d,IAAUA,EAAMvW,WAAY,CAC/B,MAAMgI,EAASuO,EAAM+B,cACX1c,KAAK4c,KAAKxQ,EAAO1C,MAAQ0C,EAAO3C,MAElCkT,IACPhO,EAAOgM,EAAMhM,KAAKkO,W,KAIrBzE,EAAWrc,IAAI,OAAQ4S,E,CAExB,IAAI3P,EAAQpF,KAAKkD,IAAI,QAAS,GAC1BmC,EAAMrF,KAAKkD,IAAI,MAAO,GAC1BlD,KAAKkD,IAAI,YAAYggB,YAAY1E,EAAYpZ,EAAwB,IAAfC,EAAMD,GAC7D,CAEO,qBAAAgF,CAAsB9E,EAAkBrB,GAE9CqB,EADiBtF,KAAKkD,IAAI,YACN6K,eAAezI,GAEnCtF,KAAKmjB,gBAAkB7d,EACvBtF,KAAKojB,cAAgBnf,EAErBjE,KAAKqjB,eACN,CAMO,aAAAA,GACN,MAAMpf,EAAejE,KAAKojB,cAC1B,IAAI9d,EAAWtF,KAAKmjB,gBACpB,MAAMjY,EAAUlL,KAAKkD,IAAI,WACnBqb,EAAWve,KAAKkD,IAAI,YAEtB,WAAeoC,KAElB,OAAYtF,KAAKuD,QAASA,IACzB,GAAIA,EAAOL,IAAI,cAAgBlD,KAAM,CACpC,MAAM4K,EAAW5K,KAAKsjB,cAAc/f,EAAQ+B,EAAWtF,KAAKkD,IAAI,oBAE5De,IAAiD,GAAjCA,EAAagM,QAAQ1M,IACxCA,EAAOggB,mBAAmB3Y,GAC1BrH,EAAOigB,kBAAkB5Y,GACzBrH,EAAO+W,UAAUzP,gBAAkBD,IAGnCrH,EAAO8H,oBAAoBT,GAC3BrH,EAAO+H,OAAO,kBAAmBV,G,KAKhC5K,KAAKkD,IAAI,iBACZoC,EAAWtF,KAAKyjB,kBAAkBne,EAAUtF,KAAKkD,IAAI,kBAAmB,MAGzElD,KAAKuO,cAAc,kBAAmBjJ,GAElC4F,IACHqT,EAAS0C,oBAAoB/V,GAExB,QAAY5F,GAYhB4F,EAAQlJ,KAAK,IAXbhC,KAAK0jB,mBAAmBxY,EAAS5F,GACjCiZ,EAASoF,gBAAgBzY,EAAS5F,GAE9BA,EAAWtF,KAAKkD,IAAI,QAAS,IAAMoC,EAAWtF,KAAKkD,IAAI,MAAO,GACjEgI,EAAQlJ,KAAK,GAGbkJ,EAAQkF,KAAK,KAQlB,CAEU,kBAAAsT,CAAmBxY,EAAkB5F,GAC9C4F,EAAQ6V,MAAM5e,IAAI,OAAQnC,KAAK0M,eAAepH,GAC/C,CAcO,iBAAAme,CAAkBne,EAAkBse,GAC1C,OAAOte,CACR,CAKO,gBAAAoY,GACN,IAAIxS,EAAUlL,KAAKkD,IAAI,WACnBgI,GACHA,EAAQkF,MAEV,CAKO,gBAAA0N,GACN,IAAI5S,EAAUlL,KAAKkD,IAAI,WACnBgI,GACHA,EAAQlJ,MAEV,CAKO,qBAAA6hB,CAAsB9D,EAAwC+D,GAErE,CAEO,WAAAC,GACNxiB,MAAMwiB,cACN/jB,KAAKgkB,YAAa,EAClBhkB,KAAK2f,cAAe,CACrB,CAQO,oBAAAsE,CAAqBC,GAC3B,MAAM3F,EAAWve,KAAKkD,IAAI,YAC1B,OAAOqb,EAASxQ,eAAemW,EAAa3F,EAASkC,aACtD,CASO,cAAA1S,CAAezI,GACrB,OAAOtF,KAAKkD,IAAI,YAAY6K,eAAezI,EAC5C,CAUO,gBAAA6e,CAAiB7e,GACvB,OAAOtF,KAAKkD,IAAI,YAAYihB,iBAAiB7e,EAC9C,CAOO,WAAAC,CAAYD,GAClB,OAAOtF,KAAKkD,IAAI,YAAYqC,YAAYD,EACzC,CAcO,SAAA8e,CAAUrE,EAAwCsE,EAAwCC,EAAuBC,GACvH,OAAO,CACR,CASO,eAAAC,CAAgBC,GACtB,OAAOzkB,KAAKoe,WAAWje,KAAKskB,EAC7B,CAKO,gBAAAC,CAAiBjF,GAAqB,CAOtC,oBAAAoD,GACN,MAAO,GACR,EAz9BA,qC,gDAAkC,SAClC,sC,gDAA0C,IAAUnQ,WAAWC,OAAO,CAACqL,EAAKpL,a,8EChOtE,MAAM+R,UAAmB,KAAhC,c,oBAKC,mC,wDAwCD,CAhCQ,cAAA3hB,GACNzB,MAAMyB,iBAEN,MAAM0W,EAAS1Z,KAAKkD,IAAI,UASxB,GAPIlD,KAAKiD,QAAQ,WACZyW,IACHA,EAAOrG,OAAO,CAAE/N,SAAU,WAAYiQ,KAAM,WAC5CvV,KAAKwB,WAAWrB,KAAKuZ,IAInB1Z,KAAKiD,QAAQ,YAAa,CAC7B,MAAM2H,EAAW8O,EAAO9O,SACpB5K,KAAKmF,MAAQuU,GAAU9O,GAC1B5K,KAAKmF,KAAKya,iBAAiBhV,E,CAG9B,CAEO,OAAAlH,GACN,MAAMyB,EAAOnF,KAAKmF,KACdA,GACH,OAAaA,EAAKib,UAAU,CAACjF,EAAKyG,KAC7BA,EAAOgD,KAAO5kB,KAAK4kB,YACfzf,EAAKib,SAASjF,E,IAKxB5Z,MAAMmC,SACP,EAlCA,qC,gDAAkC,eAClC,sC,gDAA0C,KAAOgP,WAAWC,OAAO,CAACgS,EAAW/R,a,oECqEzE,MAAMiS,UAAkB,IAA/B,c,oBAKC,0C,gDAAoC,IAIrC,EAFC,qC,gDAAkC,cAClC,sC,gDAA0C,IAAMnS,WAAWC,OAAO,CAACkS,EAAUjS,a,oEC7EvE,MAAMkS,UAAwB,IAArC,c,oBAQC,0C,gDAAoC,IAErC,EALC,qC,gDAAkC,oBAClC,sC,gDAA0C,IAAYpS,WAAWC,OAAO,CAACmS,EAAgBlS,a,iIC4CnF,MAAemS,UAAqB,IAA3C,c,oBAKC,0C,gDAA6B,MAC7B,qC,gDAAwB,IACxB,mC,gDAAsB,IACtB,wC,iDAA4B,IAE5B,uC,gDAA6B,IAK7B,oC,yDAEA,kC,gDAAgB,IAEhB,kC,gDAAgB,IAEhB,8C,yDAEA,yC,yDACA,uC,yDAsBA,oC,gDAAgD,IAAI,IACnD,KAAS3kB,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBjB,KAAKqiB,MAAM4C,SAAS/hB,IAAI,YAAa,IAAKlD,KAAKkD,IAAI,YAAa,MAC1F,CAAClD,KAAKqiB,MAAM4C,eAwBhB,mC,gDAA2C,IAAI,IAC9C,KAAS7kB,IAAI,CAAC,IACd,IAAM,IAAK4kB,KAAKhlB,KAAKK,MAAO,CAC3BY,UAAW,YAAiBjB,KAAK8f,KAAKmF,SAAS/hB,IAAI,YAAa,IAAKlD,KAAKkD,IAAI,YAAa,MACzF,CAAClD,KAAK8f,KAAKmF,eAwBf,wC,gDAAoD,IAAI,IACvD,KAAS7kB,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBjB,KAAK2iB,UAAUsC,SAAS/hB,IAAI,YAAa,CAAC,OAAQ,SAAUlD,KAAKkD,IAAI,YAAa,MAC5G,CAAClD,KAAK2iB,UAAUsC,eA0BpB,qC,gDAAkD,IAAI,IACrD,KAAS7kB,IAAI,CAAC,IACd,IAAM,IAAU4kB,KAAKhlB,KAAKK,MAAO,CAChCY,UAAW,YAAiBjB,KAAKkiB,OAAO+C,SAAS/hB,IAAI,YAAa,IAAKlD,KAAKkD,IAAI,YAAa,MAC3F,CAAClD,KAAKkiB,OAAO+C,eAUjB,mC,yDAmDA,oC,wDA6LD,CArWQ,QAAA7C,CAASxX,EAAmC3J,GAClD,MAAM0gB,EAAO3hB,KAAKqiB,MAAM6C,OAMxB,OALAvD,EAAKxW,aAAaP,GAClBA,EAASU,OAAO,OAAQqW,GACxBA,EAAKxf,IAAI,YAAa,YAAiBwf,EAAKze,IAAI,aAAcjC,IAC9DjB,KAAKmF,KAAK+Y,gBAAgBhe,SAASC,KAAKwhB,GACxC3hB,KAAKqiB,MAAMliB,KAAKwhB,GACTA,CACR,CAmBO,QAAAQ,CAASvX,EAAmC3J,GAClD,MAAM6e,EAAO9f,KAAK8f,KAAKoF,OAOvB,OANApF,EAAK3U,aAAaP,GAClBA,EAASU,OAAO,OAAQwU,GACxBA,EAAK3d,IAAI,YAAa,YAAiB2d,EAAK5c,IAAI,aAAcjC,IAE9DjB,KAAKmF,KAAK9B,cAAcnD,SAASC,KAAK2f,GACtC9f,KAAK8f,KAAK3f,KAAK2f,GACRA,CACR,CAmBO,YAAAwC,CAAa1X,EAAmC3J,GACtD,MAAM6V,EAAW9W,KAAK2iB,UAAUuC,OAOhC,OANApO,EAAS3L,aAAaP,GACtBkM,EAAS3U,IAAI,YAAa,YAAiB2U,EAAS5T,IAAI,aAAcjC,IAEtEjB,KAAKmF,KAAK9B,cAAcnD,SAASC,KAAK2W,GACtClM,EAASU,OAAO,WAAYwL,GAC5B9W,KAAK2iB,UAAUxiB,KAAK2W,GACbA,CACR,CAmBO,SAAA2H,CAAU7T,EAAmC3J,GAEnD,MAAM8f,EAAQ/gB,KAAKkiB,OAAOgD,OAQ1B,OANAnE,EAAM5e,IAAI,YAAa,YAAiB4e,EAAM7d,IAAI,aAAcjC,IAChEjB,KAAKmF,KAAK+Y,gBAAgBhe,SAASkP,UAAU2R,EAAO,GAEpDA,EAAM5V,aAAaP,GACnBA,EAASU,OAAO,QAASyV,GACzB/gB,KAAKkiB,OAAO/hB,KAAK4gB,GACVA,CACR,CAyBO,UAAAN,GACN,OAAO,CACR,CAKO,SAAA0E,GACN,OAAOnlB,KAAKygB,aAAezgB,KAAKkD,IAAI,kBAAmB,GACxD,CAEO,gBAAAwf,GAEP,CAsCU,SAAArhB,GACTE,MAAMF,YACNrB,KAAKmC,IAAI,cAAc,GAEvB,MAAMijB,EAAQplB,KAAKolB,MACfA,IACHplB,KAAKwB,WAAWrB,KAAKilB,EAAMvjB,OAAOC,GAAG,eAAgBY,IACpD1C,KAAKqlB,iBAAiB3iB,EAAM,KAG7B1C,KAAKwB,WAAWrB,KAAKilB,EAAMvjB,OAAOC,GAAG,mBAAoBY,IACxD1C,KAAKslB,eAAe5iB,EAAM,KAG3B1C,KAAKwB,WAAWrB,KAAKilB,EAAMvjB,OAAOC,GAAG,qBAAsBY,IAC1D1C,KAAKulB,iBAAiB7iB,EAAM,KAG/B,CAEO,cAAAM,GACNzB,MAAMyB,iBACFhD,KAAKiD,QAAQ,oBAChBjD,KAAK2B,KAAKE,OAAO2jB,KAAK,cAAc,KACnCxlB,KAAKmF,KAAKkc,eAAe,GAG5B,CAGO,QAAAoE,GAGN,GAFAlkB,MAAMkkB,WAEFzlB,KAAKiD,QAAQ,OAAQ,CACxB,MAAMmiB,EAAQplB,KAAKolB,MACnB,GAAIA,EAAO,CACV,MAAMlH,EAAkBle,KAAKmF,KAAK+Y,gBAC5BwH,EAAM1lB,KAAKkD,IAAI,OACV,QAAPwiB,EACHxH,EAAgBhe,SAASC,KAAKilB,GAEf,QAAPM,GACRxH,EAAgBhe,SAASuP,YAAY2V,E,EAIzC,CAEU,gBAAAC,CAAiB3iB,GAC1B1C,KAAK2lB,gBAAkB3lB,KAAKyE,QAAQ/B,EAAMgC,OAC1C,MAAMS,EAAOnF,KAAKmF,KAClBnF,KAAK4lB,WAAazgB,EAAKjC,IAAI,SAC3BlD,KAAK6lB,SAAW1gB,EAAKjC,IAAI,MAC1B,CAEU,cAAAoiB,CAAeQ,GACxB9lB,KAAK2lB,qBAAkB/hB,CACxB,CAEU,gBAAA2hB,CAAiB7iB,GAC1B,MAAMsF,EAAYhI,KAAK2lB,gBACvB,GAAI3d,EAAW,CACd,MAAMtD,EAAQ1E,KAAKyE,QAAQ/B,EAAMgC,OAE3BqhB,EAAY/lB,KAAK4lB,WACjBI,EAAUhmB,KAAK6lB,SACfI,EAAQjmB,KAAKkmB,QAAQxhB,EAAOsD,GAAa5B,KAAKwH,IAAI,EAAIoY,EAAUD,GAAc,EACpF/lB,KAAKmF,KAAKU,KAAKkgB,EAAYE,EAAOD,EAAUC,EAAO,E,CAErD,CAEU,OAAAC,CAAQC,EAAiBC,GAClC,OAAO,CACR,CAQO,oBAAAC,CAAqB/gB,GAC3B,OAAItF,KAAKugB,WACAvgB,KAAKgf,KAAO1Z,GAAYtF,KAAKwgB,aAG7Blb,EAAWtF,KAAK+e,QAAU/e,KAAKwgB,WAEzC,CAUO,mBAAAS,CAAoBqF,GAAqB,CAEzC,WAAAC,GACNvmB,KAAKwmB,YACLxmB,KAAKymB,QAAS,CACf,CAKO,cAAA1Y,CAAezI,GACrB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAUzB,OARA1Z,GAAuBD,EAAMD,EACxBpF,KAAKkD,IAAI,YAIFmC,EAAMC,EAHNF,EAAQE,CAOrB,CAKO,gBAAA6e,CAAiB7e,GACvB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAWzB,OATKhf,KAAKkD,IAAI,YAIboC,EAAWD,EAAMC,EAHjBA,GAAsBF,EAMvBE,GAAuBD,EAAMD,EAG9B,CAKO,WAAAG,CAAYD,GAClB,OAAItF,KAAKkD,IAAI,YACL,EAAIoC,EAELA,CACR,CAKO,SAAAob,GAEP,CAEU,gBAAAgG,CAAiBhN,EAAgBpU,EAAkBsP,EAAqBC,GACjF,IAAI1P,EAAOnF,KAAKmF,KAEhB,MAAMC,EAAQD,EAAKjC,IAAI,QAAS,GAC1BmC,EAAMF,EAAKjC,IAAI,MAAO,GAKxBoC,EAHeF,GAASC,EAAMD,IAAUwP,EAAc,OAG3BtP,EAFdF,GAASC,EAAMD,IAAUyP,EAAc,MAGvD6E,EAAOjN,WAAW,WAAW,GAG7BiN,EAAOjN,WAAW,WAAW,EAE/B,CAEU,gBAAAka,CAAiBzb,EAAkBxG,GAC5C,MAAM+L,EAAQzQ,KAAKyQ,MACfA,IACHvF,EAAQ/I,IAAI,UAAWnC,KAAKmD,SAASqI,SAAS9G,IACzC+L,EAAMJ,OAAO3L,IACjBwG,EAAQlJ,OAGX,CAEO,WAAA+N,GAAgB,EAhYvB,qC,gDAAkC,iBAClC,sC,gDAA0C,IAAS2C,WAAWC,OAAO,CAACoS,EAAanS,a,6GC3D7E,MAAMgU,UAAsB,IAAnC,c,oBAUC,oC,gDAA0B,IAAUxmB,IAAIJ,KAAKK,MAAO,CAAEC,MAAO,KAAMS,YAAY,EAAOE,UAAW,CAAC,OAAQ,IAAK,YAidhH,CA/cQ,SAAAI,GACNrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,WAAY,MAEnFM,MAAMF,YACNrB,KAAKuO,cAAc,SAAU,KAE7B,MAAMsY,EAAe7mB,KAAK8f,KAAKmF,SAC/B4B,EAAa1kB,IAAI,SAAU,MAC3B0kB,EAAa1kB,IAAI,QAAS,GAC1B0kB,EAAa1kB,IAAI,QAAQ,CAACsX,EAASqN,KAClCrN,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGkN,EAASrmB,SAAS,IAGrCT,KAAKmC,IAAI,QAAQ,CAACsX,EAASqN,KAC1BrN,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOkN,EAASxmB,QAAS,EAAE,GAErC,CAEO,QAAAmlB,GACNlkB,MAAMkkB,WAEN,MAAMtgB,EAAOnF,KAAKmF,KAClBA,EAAKqZ,WAAW/R,WAAW,WAAYzM,KAAKkD,IAAI,WAChDiC,EAAKqZ,WAAWrc,IAAI,KAAM,KAE1B,MAAMmU,EAAW,WACX7B,EAAS,SAEf,GAAIzU,KAAKiD,QAAQqT,IAAatW,KAAKiD,QAAQwR,GAAS,CACnD,MAAMhE,EAAQzQ,KAAKyQ,MACbsW,EAAe5hB,EAAKjF,SAS1B,GAPIF,KAAKkD,IAAIuR,GACZtP,EAAKyb,OAAOnM,GAGZtP,EAAK6hB,UAAUvS,GAGZhE,EAAO,CACV,GAAIzQ,KAAKkD,IAAIoT,GAAW,CACvB,MAAMpW,EAAWuQ,EAAMpE,iBAAiBnM,UACT,GAA3BA,EAAS+P,QAAQ9K,IACpBjF,EAAS+O,YAAY,EAAG9J,GAEzBA,EAAKyb,OAAOtK,GACZyQ,EAAa3X,UAAUpP,K,KAGnB,CACJ,MAAME,EAAWuQ,EAAMnO,oBAAoBpC,UACZ,GAA3BA,EAAS+P,QAAQ9K,IACpBjF,EAASkP,UAAUjK,GAEpBA,EAAK6hB,UAAU1Q,GAEfyQ,EAAa3X,UAAUpP,KAAM,E,CAI9BmF,EAAKqZ,WAAWsC,eAChB9gB,KAAKkiB,OAAOhd,MAAM6b,IACjBA,EAAMD,cAAc,IAErB9gB,KAAK2B,KAAKslB,kB,CAEX9hB,EAAKkc,e,CAGNrhB,KAAKolB,MAAM3Y,WAAW,SAAUtH,EAAK+Y,gBAAgBzd,SACtD,CAGU,OAAAylB,CAAQgB,EAAgBC,GACjC,OAAQA,EAAOhmB,EAAI+lB,EAAO/lB,GAAKnB,KAAKM,OACrC,CAKO,cAAAyN,CAAezI,GACrB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAYzB,OARA1Z,GAFAA,GAAYtF,KAAKonB,MAEM/hB,EAAMD,GAASpF,KAAKqnB,IACtCrnB,KAAKkD,IAAI,YAIFmC,EAAMC,EAHNF,EAAQE,CAOrB,CAKO,gBAAA6e,CAAiB7e,GACvB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAazB,OAXKhf,KAAKkD,IAAI,YAIboC,EAAWD,EAAMC,EAHjBA,GAAsBF,GAMvBE,EAAWA,GAAYD,EAAMD,GAASpF,KAAKqnB,KAE/BrnB,KAAKonB,GAGlB,CAKO,SAAA1G,GACN,MAAMvb,EAAOnF,KAAKmF,KACZiH,EAASjH,EAAKiH,OACpB,GAAIA,EAAQ,CACX,MAAMpD,EAAIoD,EAAOkb,aACjBtnB,KAAKqnB,IAAMrnB,KAAKygB,aAAezX,EAC/BhJ,KAAKonB,KAAOjiB,EAAKhE,IAAMiL,EAAOlJ,IAAI,cAAe,IAAM8F,C,CAEzD,CAKO,gBAAA0Z,GACN,MAAMvd,EAAOnF,KAAKmF,KACZhE,EAAIgE,EAAKhE,IAAM,kBAAuBgE,EAAKjC,IAAI,UAAW,GAAIiC,EAAK7E,SAAW6E,EAAKiH,OAAQlJ,IAAI,cAAe,GACpHiC,EAAK9B,cAAclB,IAAI,IAAKhB,GAC5BgE,EAAK3C,iBAAiBL,IAAI,IAAKhB,GAC/BgE,EAAK1C,iBAAiBN,IAAI,IAAKnC,KAAKoB,KAEpC,MAAMqP,EAAQtL,EAAKsL,MACnB,GAAIA,EAAO,CACV,MAAM3P,EAAgB2P,EAAM3P,cACtBqd,EAAahZ,EAAKgZ,WACxB,IAAI7d,EAAQ6E,EAAKjC,IAAI,aAAc,GAE/B/B,EAAIgE,EAAKhE,IAAMb,EAEnB,MAAM8L,EAASjH,EAAKiH,OAChBA,IACHjL,GAAKiL,EAAOlJ,IAAI,cAAe,IAG5Bib,EAAWje,SAAS0G,OAAS,GAChCtG,EAAQ6E,EAAKgZ,WAAW7d,QACxB6E,EAAKhD,IAAI,aAAc7B,EAAQ,IAG/B6d,EAAWhc,IAAI,QAAS7B,GAEzB6d,EAAW9K,OAAO,CAAElS,EAAGA,EAAGC,GAAI,EAAGX,OAAQK,EAAcL,SAAW,G,CAEpE,CAKO,WAAAsP,GACNxO,MAAMwO,cACN,MAAM5K,EAAOnF,KAAKmF,KACO,MAArBA,EAAKjC,IAAI,UACZiC,EAAKhD,IAAI,QAAS,MAEnB,MAAM3B,EAAiBR,KAAKK,MAAMG,eAClC2E,EAAKhD,IAAI,SAAU3B,GACnB2E,EAAK+Y,gBAAgB/b,IAAI,QAAS,MAClCgD,EAAKgZ,WAAW9K,OAAO,CAAE9S,OAAQC,GAClC,CAKO,UAAAigB,GACN,OAAOzgB,KAAKmF,KAAK7E,OAClB,CAQO,eAAAinB,CAAgBjiB,GACtB,MAAO,CAAEnE,EAAGnB,KAAKqmB,qBAAqB/gB,GAAWlE,EAAG,EACrD,CAKO,UAAAomB,CAAW7F,EAAiBrc,EAAmBmiB,EAAsB5V,GAC3E,GAAI8P,EAAM,CACJ,WAAerc,KACnBA,EAAW,GAGZ,IAAI6Q,EAAW,GAEdA,EADG,WAAetE,IAAUA,EAAQ,EACzB8P,EAAKze,IAAI,gBAAiBiT,GAG1BwL,EAAKze,IAAI,WAAYiT,GAG7B,WAAesR,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlDwL,EAAKxf,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IAExC,IAAIsB,EAAS+a,EAAKze,IAAI,SAAU,GAChC,MAAMuR,EAASkN,EAAKze,IAAI,SAAUlD,KAAKkD,IAAI,UAAU,IAEjDlD,KAAKkD,IAAI,aACZye,EAAKxf,IAAI,IAAK,MACTsS,IACJ7N,IAAW,KAIZ+a,EAAKxf,IAAI,IAAK,GACVsS,IACH7N,IAAW,IAGb+a,EAAKxf,IAAI,QAASsX,IACjBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGhT,EAAO,IAG1B5G,KAAK0mB,iBAAiB/E,EAAMrc,EAAUqc,EAAKze,IAAI,cAAe,GAAIye,EAAKze,IAAI,cAAe,G,CAE5F,CAKO,WAAAggB,CAAYnC,EAAmBzb,EAAmBmiB,EAAsB5V,GAC9E,GAAIkP,EAAO,CACV,IAAI5K,EAAW,GAEdA,EADG,WAAetE,IAAUA,EAAQ,EACzBkP,EAAM7d,IAAI,gBAAiBiT,GAG3B4K,EAAM7d,IAAI,WAAYiT,GAG7B,WAAe7Q,KACnBA,EAAW,GAGZ,MAAMmP,EAASsM,EAAM7d,IAAI,SAAUlD,KAAKkD,IAAI,UAAU,IAErClD,KAAKkD,IAAI,YAEpBuR,GAKJsM,EAAM5e,IAAI,WAAY,YACtB4e,EAAM5e,IAAI,IAAK,KALf4e,EAAM5e,IAAI,WAAY,YACtB4e,EAAM5e,IAAI,IAAK,OAQXsS,GAKJsM,EAAM5e,IAAI,IAAK,GACf4e,EAAM5e,IAAI,WAAY,cALtB4e,EAAM5e,IAAI,SAAKyB,GACfmd,EAAM5e,IAAI,WAAY,aAQpB,WAAeslB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlD4K,EAAM5e,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IACzCtF,KAAK0mB,iBAAiB3F,EAAOzb,EAAUyb,EAAM7d,IAAI,cAAe,GAAI6d,EAAM7d,IAAI,cAAe,G,CAE/F,CAKO,UAAAwkB,CAAW5H,EAAaxa,EAAmBmiB,GACjD,GAAI3H,EAAM,CACJ,WAAexa,KACnBA,EAAW,GAGZ,IAAI6Q,EAAW2J,EAAK5c,IAAI,WAAY,IAChC,WAAeukB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlD2J,EAAK3d,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IAExCtF,KAAK0mB,iBAAiB5G,EAAMxa,EAAU,EAAG,E,CAE3C,CAKO,YAAAqiB,CAAa/F,EAAqBtc,EAAmBmiB,GAC3D,GAAI7F,EAAQ,CAEX,MAAMlI,EAASkI,EAAO1e,IAAI,UAC1B,GAAIwW,EAAQ,CACN,WAAepU,KACnBA,EAAW,GAGZ,IAAI6Q,EAAWyL,EAAO1e,IAAI,WAAY,IAElC,WAAeukB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlD,IAAIyR,EAAiB5nB,KAAKmF,KAAKse,kBAAkBne,EAAU6Q,GACvD0R,EAAiB7nB,KAAKmF,KAAKib,SAASwH,GACpChe,GAAK,EAKT,GAJI5J,KAAKkD,IAAI,cACZ0G,EAAI,GAGDgY,EAAO1e,IAAI,WACd,GAAI2kB,EAAgB,CACnB,IAAIC,EAAiBD,EAAe3kB,IAAI,UACpC4kB,GACHpO,EAAOvX,IAAI,IAAK2lB,EAAe1mB,IAAM0mB,EAAernB,SAAWmJ,E,MAIhE8P,EAAOvX,IAAI,IAAK,GAIlBnC,KAAKmF,KAAKib,SAASwH,GAAkBhG,EACrClI,EAAOvX,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IAC1CtF,KAAK0mB,iBAAiBhN,EAAQpU,EAAU,EAAG,E,EAG9C,CAKO,UAAAyiB,CAAWjU,EAAiBxO,EAAmBmiB,GACrD,GAAI3T,EAAM,CACJ,WAAexO,KACnBA,EAAW,GAEP,WAAemiB,KACnBA,EAAc,GAGf,IAAIO,EAAKhoB,KAAKqmB,qBAAqB/gB,GAC/B2iB,EAAKjoB,KAAKqmB,qBAAqBoB,GAEnCznB,KAAKkoB,eAAepU,EAAMkU,EAAIC,E,CAEhC,CAEU,cAAAC,CAAepU,EAAgBkU,EAAYC,GACpDnU,EAAK3R,IAAI,QAASsX,IAGjB,MAAMxQ,EAAIjJ,KAAKmF,KAAM9B,cAAc5C,SAC7BuI,EAAIhJ,KAAKM,QAEX2nB,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAEbD,EAAKhf,GAAKif,EAAK,IAWnBxO,EAAQE,OAAOqO,EAAI,GACnBvO,EAAQG,OAAOqO,EAAI,GACnBxO,EAAQG,OAAOqO,EAAIhf,GACnBwQ,EAAQG,OAAOoO,EAAI/e,GACnBwQ,EAAQG,OAAOoO,EAAI,GAAE,GAEvB,CAKO,eAAArE,CAAgBzY,EAAkB5F,GACxCtF,KAAK2mB,iBAAiBzb,EAAS,CAAE/J,EAAGnB,KAAKqmB,qBAAqB/gB,GAAWlE,EAAG,GAC7E,CAKO,mBAAA6f,CAAoB/V,GAC1B,MAAMuJ,EAASzU,KAAKkD,IAAI,UAClBilB,EAAM,IAEZ,IAAI3X,EAASxQ,KAAKmD,SAASqI,SAAS,CAAErK,EAAG,EAAGC,EAAG,IAC3CD,EAAIqP,EAAOrP,EACXC,EAAI,EACJ4H,EAAIhJ,KAAKygB,aACTxX,EAAIkf,EAEJC,EAAoC,KAEpCpoB,KAAKkD,IAAI,YACRuR,GACH2T,EAAqB,KACrBhnB,EAAIoP,EAAOpP,EACX6H,EAAIkf,IAGJC,EAAqB,OACrBhnB,EAAIoP,EAAOpP,EAAI+mB,EACflf,EAAIkf,GAID1T,GACH2T,EAAqB,OACrBhnB,EAAIoP,EAAOpP,EAAI+mB,EACflf,EAAIkf,IAGJC,EAAqB,KACrBhnB,EAAIoP,EAAOpP,EACX6H,EAAIkf,GAIN,MAAM3V,EAAS,CAAE3C,KAAM1O,EAAG2O,MAAO3O,EAAI6H,EAAGmJ,IAAK/Q,EAAGgR,OAAQhR,EAAI6H,GACtDof,EAAYnd,EAAQhI,IAAI,UAEzB,aAAkBsP,EAAQ6V,KAC9Bnd,EAAQ/I,IAAI,SAAUqQ,GACtBtH,EAAQ/I,IAAI,qBAAsBimB,GAEpC,EAxdA,qC,gDAAkC,kBAClC,sC,gDAA0C,IAAa1V,WAAWC,OAAO,CAACiU,EAAchU,a,6GCLlF,MAAM0V,UAAsB,IAAnC,c,oBAUC,qC,yDAEA,oC,gDAA0B,IAAUloB,IAAIJ,KAAKK,MAAO,CAAEI,OAAQ,KAAMM,YAAY,EAAOE,UAAW,CAAC,OAAQ,IAAK,YA8ejH,CA5eQ,SAAAI,GACNrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,WAAY,MAC/EjB,KAAKsa,UAAUhE,UAClBtW,KAAKsa,UAAUrZ,UAAUd,KAAK,YAG/BoB,MAAMF,YACNrB,KAAKuO,cAAc,SAAU,KAE7B,MAAMsY,EAAe7mB,KAAK8f,KAAKmF,SAC/B4B,EAAa1kB,IAAI,QAAS,MAC1B0kB,EAAa1kB,IAAI,SAAU,GAC3B0kB,EAAa1kB,IAAI,QAAQ,CAACsX,EAASqN,KAClCrN,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOkN,EAASxmB,QAAS,EAAE,IAGpCN,KAAKmC,IAAI,QAAQ,CAACsX,EAAS8E,KAC1B9E,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAG2E,EAAS9d,SAAS,GAEtC,CAEU,OAAAylB,CAAQgB,EAAgBC,GACjC,OAAQD,EAAO9lB,EAAI+lB,EAAO/lB,GAAKpB,KAAKS,QACrC,CAEO,QAAAglB,GACNlkB,MAAMkkB,WAEN,MAAMtgB,EAAOnF,KAAKmF,KAClBA,EAAKqZ,WAAW/R,WAAW,WAAYzM,KAAKkD,IAAI,WAChDiC,EAAKqZ,WAAWrc,IAAI,KAAM,KAE1B,MAAMijB,EAAQplB,KAAKolB,MACb9O,EAAW,WACX7B,EAAS,SACThE,EAAQzQ,KAAKyQ,MAEnB,GAAIzQ,KAAKiD,QAAQqT,IAAatW,KAAKiD,QAAQwR,GAAS,CAEnD,MAAMsS,EAAe5hB,EAAKjF,SAS1B,GAPIF,KAAKkD,IAAIuR,GACZtP,EAAKyb,OAAOnM,GAGZtP,EAAK6hB,UAAUvS,GAGZhE,EAAO,CACV,GAAIzQ,KAAKkD,IAAIoT,GAAW,CACvB,MAAMpW,EAAWuQ,EAAM9D,mBAAmBzM,UACX,GAA3BA,EAAS+P,QAAQ9K,IACpBjF,EAASkP,UAAUjK,EAAM,GAE1BA,EAAKyb,OAAOtK,GACZyQ,EAAa3X,UAAUpP,KAAM,E,KAEzB,CACJ,MAAME,EAAWuQ,EAAMlO,kBAAkBrC,UACV,GAA3BA,EAAS+P,QAAQ9K,IACpBjF,EAASkP,UAAUjK,GAEpBA,EAAK6hB,UAAU1Q,GAEfyQ,EAAa3X,UAAUpP,K,CAGxBmF,EAAKqZ,WAAWsC,eAChB9gB,KAAKkiB,OAAOhd,MAAM6b,IACjBA,EAAMD,cAAc,IAErB9gB,KAAK2B,KAAKslB,kB,CAEX9hB,EAAKkc,e,CAGN,MAAMrY,EAAI7D,EAAK+Y,gBAAgB5d,QAE3BmQ,IACCzQ,KAAKkD,IAAIoT,GACZ8O,EAAMjjB,IAAI,UAAW,GAGrBijB,EAAMjjB,IAAI,UAAW6G,IAIvBoc,EAAM3Y,WAAW,QAASzD,EAC3B,CAKO,WAAA+G,GACNxO,MAAMwO,cACN,MAAM5K,EAAOnF,KAAKmF,KACQ,MAAtBA,EAAKjC,IAAI,WACZiC,EAAKhD,IAAI,SAAU,MAEpB,MAAMzB,EAAmBV,KAAKK,MAAMK,iBACpCyE,EAAKhD,IAAI,SAAUzB,GACnByE,EAAK+Y,gBAAgB/b,IAAI,SAAU,MACnCgD,EAAKgZ,WAAWhc,IAAI,SAAUzB,EAC/B,CAEO,gBAAAgiB,GACN,MAAMvd,EAAOnF,KAAKmF,KACZ/D,EAAI+D,EAAK/D,IAAM,kBAAuB+D,EAAKjC,IAAI,UAAW,GAAIiC,EAAK1E,UACzE0E,EAAK9B,cAAclB,IAAI,IAAKf,GAC5B+D,EAAK3C,iBAAiBL,IAAI,IAAKf,GAC/B+D,EAAK1C,iBAAiBN,IAAI,IAAKnC,KAAKmB,KAEpC,MAAMsP,EAAQtL,EAAKsL,MACnB,GAAIA,EAAO,CACV,MAAM3P,EAAgB2P,EAAM3P,cACtBqd,EAAahZ,EAAKgZ,WACxB,IAAI1d,EAAS0E,EAAKjC,IAAI,YAAa,GAE/Bib,EAAWje,SAAS0G,OAAS,GAChCnG,EAAS0E,EAAKgZ,WAAW1d,SACzB0E,EAAKhD,IAAI,YAAa1B,EAAS,IAG/B0d,EAAWhc,IAAI,SAAU1B,GAE1B0d,EAAW9K,OAAO,CAAEjS,EAAG+D,EAAK/D,IAAMX,EAAQU,GAAI,EAAGb,MAAOQ,EAAcR,QAAU,G,CAElF,CAKO,UAAAmgB,GACN,OAAOzgB,KAAKmF,KAAKojB,aAClB,CAQO,eAAAhB,CAAgBjiB,GACtB,MAAO,CAAEnE,EAAG,EAAGC,EAAGpB,KAAKqmB,qBAAqB/gB,GAC7C,CAKO,WAAA4d,CAAYnC,EAAmBzb,EAAmBmiB,EAAsB5V,GAC9E,GAAIkP,EAAO,CACL,WAAezb,KACnBA,EAAW,GAGZ,IAAI6Q,EAAW,GAEdA,EADG,WAAetE,IAAUA,EAAQ,EACzBkP,EAAM7d,IAAI,gBAAiBiT,GAG3B4K,EAAM7d,IAAI,WAAYiT,GAGlC,MAAMG,EAAWtW,KAAKkD,IAAI,YACpBuR,EAASsM,EAAM7d,IAAI,SAAUlD,KAAKkD,IAAI,UAAU,IAElDoT,GACHyK,EAAM5e,IAAI,IAAK,GAEXsS,EACHsM,EAAM5e,IAAI,WAAY,YAGtB4e,EAAM5e,IAAI,WAAY,aAInBsS,GACHsM,EAAM5e,IAAI,IAAK,GACf4e,EAAM5e,IAAI,WAAY,cAGtB4e,EAAM5e,IAAI,SAAKyB,GACfmd,EAAM5e,IAAI,WAAY,aAIpB,WAAeslB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlD4K,EAAM5e,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IACzCtF,KAAK0mB,iBAAiB3F,EAAOzb,EAAUyb,EAAM7d,IAAI,cAAe,GAAI6d,EAAM7d,IAAI,cAAe,G,CAE/F,CAKO,UAAAwkB,CAAW5H,EAAaxa,EAAmBmiB,GACjD,GAAI3H,EAAM,CACJ,WAAexa,KACnBA,EAAW,GAGZ,IAAI6Q,EAAW2J,EAAK5c,IAAI,WAAY,IAChC,WAAeukB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlD2J,EAAK3d,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IACxCtF,KAAK0mB,iBAAiB5G,EAAMxa,EAAU,EAAG,E,CAE3C,CAKO,UAAAkiB,CAAW7F,EAAiBrc,EAAmBmiB,EAAsB5V,GAC3E,GAAI8P,EAAM,CACJ,WAAerc,KACnBA,EAAW,GAGZ,IAAI6Q,EAAW,GAEdA,EADG,WAAetE,IAAUA,EAAQ,EACzB8P,EAAKze,IAAI,gBAAiBiT,GAG1BwL,EAAKze,IAAI,WAAYiT,GAG7B,WAAesR,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAGlDwL,EAAKxf,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IAExC,IAAIsB,EAAS+a,EAAKze,IAAI,SAAU,GAChC,MAAMuR,EAASkN,EAAKze,IAAI,SAAUlD,KAAKkD,IAAI,UAAU,IAEjDlD,KAAKkD,IAAI,aACZye,EAAKxf,IAAI,IAAK,GACVsS,IACH7N,IAAW,IAIP6N,IACJ7N,IAAW,GAGb+a,EAAKxf,IAAI,QAASsX,IACjBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOhT,EAAQ,EAAE,IAG1B5G,KAAK0mB,iBAAiB/E,EAAMrc,EAAUqc,EAAKze,IAAI,cAAe,GAAIye,EAAKze,IAAI,cAAe,G,CAE5F,CAKO,YAAAykB,CAAa/F,EAAqBtc,EAAmBmiB,GAC3D,GAAI7F,EAAQ,CAEX,MAAMlI,EAASkI,EAAO1e,IAAI,UAC1B,GAAIwW,EAAQ,CAEN,WAAepU,KACnBA,EAAW,GAGZ,IAAI6Q,EAAWyL,EAAO1e,IAAI,WAAY,IAClC,WAAeukB,IAAgBA,GAAeniB,IACjDA,IAAuBmiB,EAAcniB,GAAY6Q,GAIlD,IAAIyR,EAAiB5nB,KAAKmF,KAAKse,kBAAkBne,EAAU6Q,GACvD0R,EAAiB7nB,KAAKmF,KAAKib,SAASwH,GACpChe,EAAI,EAKR,GAJI5J,KAAKkD,IAAI,cACZ0G,GAAK,GAGFgY,EAAO1e,IAAI,WACd,GAAI2kB,EAAgB,CACnB,IAAIC,EAAiBD,EAAe3kB,IAAI,UACpC4kB,GACHpO,EAAOvX,IAAI,IAAK2lB,EAAe3mB,IAAM2mB,EAAexnB,QAAUsJ,E,MAI/D8P,EAAOvX,IAAI,IAAK,GAIlBnC,KAAKmF,KAAKib,SAASwH,GAAkBhG,EAGrClI,EAAOvX,IAAI,IAAKnC,KAAKqmB,qBAAqB/gB,IAE1CtF,KAAK0mB,iBAAiBhN,EAAQpU,EAAU,EAAG,E,EAG9C,CAKO,UAAAyiB,CAAWjU,EAAiBxO,EAAmBmiB,GACrD,GAAI3T,EAAM,CACJ,WAAexO,KACnBA,EAAW,GAEP,WAAemiB,KACnBA,EAAc,GAGf,IAAIe,EAAKxoB,KAAKqmB,qBAAqB/gB,GAC/BmjB,EAAKzoB,KAAKqmB,qBAAqBoB,GAEnCznB,KAAKkoB,eAAepU,EAAM0U,EAAIC,E,CAEhC,CAEU,cAAAP,CAAepU,EAAgB0U,EAAYC,GACpD3U,EAAK3R,IAAI,QAASsX,IAEjB,MAAMzQ,EAAIhJ,KAAKmF,KAAM9B,cAAc/C,QAC7B2I,EAAIjJ,KAAKS,SAEXgoB,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAGbD,EAAKvf,GAAKwf,EAAK,IAOnBhP,EAAQE,OAAO,EAAG6O,GAClB/O,EAAQG,OAAO5Q,EAAGwf,GAClB/O,EAAQG,OAAO5Q,EAAGyf,GAClBhP,EAAQG,OAAO,EAAG6O,GAClBhP,EAAQG,OAAO,EAAG4O,GAAG,GAEvB,CAQO,oBAAAnC,CAAqB/gB,GAC3B,OAAKtF,KAAKugB,WAIDjb,EAAWtF,KAAK+e,QAAU/e,KAAKwgB,aAH/BxgB,KAAKgf,KAAO1Z,GAAYtF,KAAKwgB,WAKvC,CAKO,eAAAmD,CAAgBzY,EAAkB5F,GACxCtF,KAAK2mB,iBAAiBzb,EAAS,CAAE/J,EAAG,EAAGC,EAAGpB,KAAKqmB,qBAAqB/gB,IACrE,CAKO,mBAAA2b,CAAoB/V,GAC1B,MAAMuJ,EAASzU,KAAKkD,IAAI,UAClBilB,EAAM,IAEZ,IAAI3X,EAASxQ,KAAKmD,SAASqI,SAAS,CAAErK,EAAG,EAAGC,EAAG,IAC3CA,EAAIoP,EAAOpP,EACXD,EAAI,EACJ8H,EAAIjJ,KAAKygB,aACTzX,EAAImf,EAEJC,EAAuC,QAEvCpoB,KAAKkD,IAAI,YACRuR,GACH2T,EAAqB,QACrBjnB,EAAIqP,EAAOrP,EAAIgnB,EACfnf,EAAImf,IAGJC,EAAqB,OACrBjnB,EAAIqP,EAAOrP,EACX6H,EAAImf,GAID1T,GACH2T,EAAqB,OACrBjnB,EAAIqP,EAAOrP,EACX6H,EAAImf,IAGJC,EAAqB,QACrBjnB,EAAIqP,EAAOrP,EAAIgnB,EACfnf,EAAImf,GAIN,MAAM3V,EAAS,CAAE3C,KAAM1O,EAAG2O,MAAO3O,EAAI6H,EAAGmJ,IAAK/Q,EAAGgR,OAAQhR,EAAI6H,GACtDof,EAAYnd,EAAQhI,IAAI,UAEzB,aAAkBsP,EAAQ6V,KAC9Bnd,EAAQ/I,IAAI,SAAUqQ,GACtBtH,EAAQ/I,IAAI,qBAAsBimB,GAEpC,CAKO,SAAA1H,GACN,MAAMvb,EAAOnF,KAAKmF,KACZiH,EAASjH,EAAKiH,OACpB,GAAIA,EAAQ,CACX,MAAMnD,EAAImD,EAAOmc,cACjBvoB,KAAKqnB,IAAMrnB,KAAKygB,aAAexX,EAC/BjJ,KAAKonB,IAAMjiB,EAAK/D,IAAM6H,C,CAExB,CAKO,cAAA8E,CAAezI,GACrB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAazB,OATA1Z,GAFAA,GAAYtF,KAAKonB,MAEM/hB,EAAMD,GAASpF,KAAKqnB,IAEvCrnB,KAAKkD,IAAI,YACDkC,EAAQE,EAGRD,EAAMC,CAInB,CAKO,gBAAA6e,CAAiB7e,GACvB,MAAMF,EAAQpF,KAAK+e,QAAU,EACvB1Z,EAAMrF,KAAKgf,MAAQ,EAazB,OAXIhf,KAAKkD,IAAI,YACZoC,GAAsBF,EAGtBE,EAAWD,EAAMC,GAGlBA,EAAWA,GAAYD,EAAMD,GAASpF,KAAKqnB,KAE/BrnB,KAAKonB,GAGlB,CAMO,WAAA7hB,CAAYD,GAClB,OAAKtF,KAAKkD,IAAI,YAGPoC,EAFC,EAAIA,CAGb,EAtfA,qC,gDAAkC,kBAClC,sC,gDAA0C,IAAaoN,WAAWC,OAAO,CAAC2V,EAAc1V,a,qECuBlF,MAAM8V,UAAiB,IAA9B,c,oBAKC,0C,gDAAuC,IAIxC,EAFC,qC,gDAAkC,aAClC,sC,gDAA0C,IAAKhW,WAAWC,OAAO,CAAC+V,EAAS9V,a,mJCqGrE,MAAM+V,UAAyC,IAAtD,c,oBASC,2C,iDAAkC,IAClC,iD,iDAAwC,IACxC,kD,iDAAyC,IACzC,gD,gDAAsC,IACtC,4C,gDAAkC,IAElC,2C,gDAAsD,CAAC,IACvD,2C,gDAAsD,CAAC,GA4lCxD,CA1lCQ,SAAAtnB,GACNrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,SACvEM,MAAMF,YACNrB,KAAK4oB,iBAAiB5oB,KAAKkD,IAAI,iBAC/BlD,KAAK8B,GAAG,gBAAgB,KACvB9B,KAAK4oB,iBAAiB5oB,KAAKkD,IAAI,gBAAgB,GAEjD,CAEU,gBAAA0lB,CAAiBC,GAC1B7oB,KAAKuO,cAAc,eAAgBsa,GACnC7oB,KAAK8oB,cAAgB,sBAA0BD,EAChD,CAEU,cAAAE,GACT,MAAMnT,EAAgB5V,KAAKkD,IAAI,iBACV,MAAjB0S,GAAyBA,GAAiBjQ,IAC7C3F,KAAKuO,cAAc,gBAAiBqH,GAGpC5V,KAAKuO,cAAc,gBAAiBnI,KAAKgS,OAAOpY,KAAK0F,WAAW,MAAO,GAAK1F,KAAK0F,WAAW,MAAO,IAAM1F,KAAKgpB,oBAEhH,CAEU,UAAAC,GACT,MAAMrb,EAAM5N,KAAK0F,WAAW,OACtBmE,EAAM7J,KAAK0F,WAAW,OAE5B,GAAK,WAAekI,IAAQ,WAAe/D,GAAO,CAEjD7J,KAAK+oB,iBAEL,MAAMG,EAAgBlpB,KAAK0F,WAAW,iBAStC,GARIwjB,EACHlpB,KAAK4oB,iBAAiBM,GAGtBlpB,KAAK4oB,iBAAiB5oB,KAAKkD,IAAI,iBAI5BlD,KAAKiD,QAAQ,iBAAkB,CAClC,IAAIimB,EAAgBlpB,KAAKkD,IAAI,iBACzBgmB,IACHlpB,KAAKsL,OAAO,iBAAkB,CAAC4d,IAC/BlpB,KAAKmpB,qB,CAIP,GAAInpB,KAAKiD,QAAQ,eACXjD,KAAKopB,aAAc,CACvB,GAAIppB,KAAKkD,IAAI,aACZ,OAAYlD,KAAKuD,QAASA,IACzBvD,KAAK0kB,iBAAiBnhB,EAAO,IAG9BvD,KAAKmpB,yBAED,CACJ,IAAIxR,EAAe3X,KAAKkD,IAAI,gBACxBmmB,EAAwB1R,EAAaX,SAAWW,EAAa9F,MACjE,OAAY7R,KAAKuD,QAASA,IACzBA,EAAO+lB,WAAWD,GAClB9lB,EAAOgmB,eAAe,IAGvBvpB,KAAK4oB,iBAAiBjR,GACtB3X,KAAKuO,cAAc,qBAAiB3K,GACpC5D,KAAK8D,mB,CAEN9D,KAAKopB,cAAe,C,EAIxB,CAGO,gBAAA1E,CAAiBnhB,GACvB,GAAIvD,KAAKkD,IAAI,eAAiBK,EAAOL,IAAI,qBAAsB,CAE9DlD,KAAKopB,cAAe,EAEpBppB,KAAKwpB,oBAAqB,EAG1B,IAAIC,EAA6B,GAC7BC,EAAe1pB,KAAKgpB,mBAEpBxR,EAAiBxX,KAAKkD,IAAI,kBAE9B,OAAYsU,GAAiBqR,IACL,sBAA0BA,GAC1Ba,GACtBD,EAAUtpB,KAAK0oB,E,IAIjBtlB,EAAOomB,UAAY,CAAC,EAEpB,MAAMxO,EAAMnb,KAAK0F,WAAW,QAAW1F,KAAKkD,IAAI,YAAYwC,WAAW,UACvE,IAAIkkB,EAEJ,MAAMC,EAAWtmB,EAAOL,IAAI,YAExBK,EAAOL,IAAI,WAAa2mB,EAC3BD,EAASrmB,EAAOumB,cAERvmB,EAAOL,IAAI,WAAa2mB,IAChCD,EAASrmB,EAAOwmB,eAGjB,IAAIxf,EAAYhH,EAAOymB,eACnBrS,EAAe3X,KAAKkD,IAAI,gBACxBmmB,EAAwB1R,EAAaX,SAAWW,EAAa9F,MAEjEtO,EAAOomB,UAAUN,GAAiB9e,EAElC,MAAM0f,EAAgB1mB,EAAOL,IAAI,qBACjC,IAAIgnB,EAAiB3mB,EAAOL,IAAI,0BAA0B,GACtD+mB,IACHC,GAAiB,GAGlB,OAAYT,GAAYZ,IAEvB,IAIIsB,EAJAC,GAAe,IACfC,EAAYxB,EAAS7R,SAAW6R,EAAShX,MAC7CtO,EAAOomB,UAAUU,GAAa,GAI9B,IAAIhZ,EAAmC,CAAC,EACpCQ,EAAqC,CAAC,EAEtCyY,EAAgD,CAAC,EACjDC,EAA6C,CAAC,EAElD,OAAYX,GAASY,IACpBnZ,EAAImZ,GAAS,EACb3Y,EAAM2Y,GAAS,EACfF,EAAiBE,GAASjnB,EAAOL,IAAKsnB,EAAQ,WAC9CD,EAAcC,GAASA,EAAQ,SAAS,IAGzC,IAGIC,EAKAC,EARAhT,EAAmB,cAAkBmR,EAAS7R,UAElCzM,EAAU,KAGzBkgB,EAAYlgB,EAAU,GAAGrH,IAAIiY,IAI9B,OAAY5Q,GAAYK,IACvB,IAGI+f,EAHAC,EAAOhgB,EAAS1H,IAAIiY,GAEpB0P,EAAc,OAAWD,EAAM/B,EAAS7R,SAAU6R,EAAShX,MAAO7R,KAAKK,MAAOoqB,GAG9EL,EAAeS,EAAcnT,EAAmB,IACnDiT,EAAc,OAAa/f,EAAS+f,aAEpCR,EAAc,IAAI,IAAS5mB,EAAQonB,EAAapnB,EAAOunB,cAAcH,IACrER,EAAY7e,OAAO6P,EAAY0P,GAE/BtnB,EAAOomB,UAAUU,GAAWlqB,KAAKgqB,GAEjC,OAAYP,GAASY,IACpB,IAAInb,EAAQzE,EAAS1H,IAAIsnB,GACrB,WAAenb,IAClB8a,EAAY7e,OAAOkf,EAAcnb,GACjC8a,EAAY7e,OAAOif,EAAcC,GAAenb,GAChDwC,EAAM2Y,GAAS,EACfnZ,EAAImZ,GAASnb,IAGbgC,EAAImZ,GAAS,EACb3Y,EAAM2Y,GAAS,E,IAIbN,GACHC,EAAYhoB,IAAI,YAAa,CAACyI,IAG3Bqf,GAAiBS,GACpBT,EAAcS,EAAiB7B,GAGhC6B,EAAkBP,IAGlB,OAAYP,GAASY,IACpB,IAAIO,EAAWT,EAAiBE,GAC5Bnb,EAAQzE,EAAS1H,IAAIsnB,GAEzB,GAAa,MAATnb,EAAe,CAElB,IAAI2b,EAAeb,EAAYjnB,IAAIsnB,GAEnC,OAAQO,GACP,IAAK,QACJZ,EAAY7e,OAAOkf,EAAcnb,GACjC,MAED,IAAK,MACJ8a,EAAY7e,OAAOkf,EAAcQ,EAAe3b,GAChD,MAED,IAAK,OACJ,MAED,IAAK,MACAA,EAAQ2b,GACXb,EAAY7e,OAAOkf,EAAcnb,GAElC,MAED,IAAK,OACAA,EAAQ2b,GACXb,EAAY7e,OAAOkf,EAAcnb,GAElC,MAED,IAAK,UACJwC,EAAM2Y,KACNnZ,EAAImZ,IAAUnb,EACd,IAAI4b,EAAU5Z,EAAImZ,GAAS3Y,EAAM2Y,GACjCL,EAAY7e,OAAOkf,EAAcS,GACjC,MAED,IAAK,UACA7kB,KAAKC,IAAIgJ,GAASjJ,KAAKC,IAAI2kB,IAC9Bb,EAAY7e,OAAOkf,EAAcnb,GAKpC8a,EAAY7e,OAAOif,EAAcC,GAAeL,EAAYjnB,IAAIsnB,IAChE,IAAIG,EAAmB,OAAa/f,EAAS+f,aAC7CA,EAAYxP,GAAc0P,EAC1BV,EAAYQ,YAAcA,C,KAIxBT,GACHC,EAAYjnB,IAAI,aAAc/C,KAAKyK,IAGrCwf,EAAeS,CAAW,IAGvBZ,GAAiBS,GACpBT,EAAcS,EAAiB7B,E,IAI7BtlB,EAAO2nB,YACV3nB,EAAO+lB,WAAW/lB,EAAO2nB,YAE1BlrB,KAAKqhB,gBAEDrhB,KAAKmN,cACRnN,KAAKK,MAAMwB,OAAO2jB,KAAK,cAAc,KACpCxlB,KAAKqhB,eAAe,G,CAKxB,CAEO,WAAA0C,GACNxiB,MAAMwiB,cACN/jB,KAAKmrB,qBAAsB,EAC3BnrB,KAAKopB,cAAe,CACrB,CAOO,gBAAAgC,CAAiB9O,GACvB,IAAI3E,EAAe3X,KAAKkD,IAAI,gBACxBgmB,EAAgB,iBAAqB,EAAG5M,EAAUtc,KAAKkD,IAAI,aAAcyC,KAAW3F,KAAKkD,IAAI,mBAIjG,OAHI,sBAA0BgmB,GAAiB,sBAA0BvR,KACxEuR,EAAgB,OAAH,UAAQvR,IAEfuR,CACR,CAWO,cAAAmC,CAAexC,GACrB,OAAO7oB,KAAKsrB,aAAazC,EAAS7R,SAAW6R,EAAShX,MACvD,CAWO,cAAA0Z,CAAe1C,GACrB,OAAO7oB,KAAKwrB,aAAa3C,EAAS7R,SAAW6R,EAAShX,MACvD,CAEU,kBAAAsX,GACT5nB,MAAM4nB,qBAEN,IAAIsC,EAAerlB,KAAKgS,MAAMpY,KAAK0F,WAAW,iBAC1CgmB,EAAetlB,KAAKgS,MAAMpY,KAAK0F,WAAW,iBAE9C,GAAI,WAAe+lB,IAAiB,WAAeC,GAAe,CAMjE,GAJ+B,GAA3B1rB,KAAKkD,IAAI,iBACZwoB,GAAgB,GAGb1rB,KAAKkD,IAAI,eAAiBlD,KAAKmrB,oBAAqB,CACvDnrB,KAAKmrB,qBAAsB,EAE3B,IAAIjC,EAAgBlpB,KAAKkD,IAAI,iBACzByoB,EAAU3rB,KAAK0F,WAAW,iBAE1BkmB,EAAsBF,EAAeD,GAAiBzrB,KAAKkD,IAAI,gBAAiB,IAAM,EAAIlD,KAAKkD,IAAI,cAAe,IAAMlD,KAAK0pB,gBAEjI,GAAIiC,EAAS,CACZ,IAAIrP,EAAW,sBAA0BqP,GACzCC,EAAqBxlB,KAAK4c,KAAK4I,EAAqBtP,GAAYA,C,CAOjE,GAJK4M,IACJA,EAAgBlpB,KAAKorB,iBAAiBQ,IAGnC1C,KAAmByC,GAAYA,EAAQ3U,WAAakS,EAAclS,UAAY2U,EAAQ9Z,QAAUqX,EAAcrX,OAAU7R,KAAKwpB,oBAAqB,CACrJxpB,KAAKwpB,oBAAqB,EAC1BxpB,KAAKuO,cAAc,gBAAiB2a,GACpClpB,KAAK4oB,iBAAiBM,GAGtB,IAAI2C,EAAQ3C,EAAclS,SAAWkS,EAAcrX,MACnD,OAAY7R,KAAKuD,QAASA,IACrBA,EAAOL,IAAI,cAAgBlD,MAC9BuD,EAAO+lB,WAAWuC,E,IAIpB7rB,KAAK8D,oBAEL9D,KAAKK,MAAMwB,OAAO2jB,KAAK,cAAc,KACpCxlB,KAAKK,MAAMwB,OAAO2jB,KAAK,cAAc,KACpC,MAAM5d,EAAO,uBACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,M,GAEjD,G,EAKL,OAAYA,KAAKuD,QAASA,IACzB,GAAIA,EAAOL,IAAI,cAAgBlD,KAAM,CACpC,IAAI8rB,EAAkB9rB,KAAK0F,WAAW,QAAW1F,KAAKkD,IAAI,YAAYwC,WAAW,UAM7EgF,EAJU,sBAA2BnH,EAAOgH,WAAYK,GACpD,KAAeA,EAAS1H,IAAI4oB,GAAYL,KAGzBzc,MAEnBtE,EAAa,IAChBA,GAAc,GAGfghB,GAAgB1rB,KAAK0pB,gBAAkB,EAAI1pB,KAAKkD,IAAI,cAAe,IAMnE,IAAIyH,EAJQ,iBAAsBpH,EAAOgH,WAAYK,GAC7C,KAAeA,EAAS1H,IAAI4oB,GAAYJ,KAG7B1c,MACf+c,EAAYphB,EAEZohB,EAAY,GACfA,IAGD,MAAMC,EAAgBzoB,EAAOgH,UAAUG,GACjCuhB,EAAe1oB,EAAOgH,UAAUwhB,GAEtC,IAAIG,EACAC,EACAH,IACHG,EAAYH,EAAc9oB,IAAI4oB,IAG3BG,IACHC,EAAWD,EAAa/oB,IAAI4oB,IAG7B,IAAIM,GAAiB,EACL,MAAZF,GAAiC,MAAbC,IACnBD,EAAWT,GAAgBU,EAAYT,KAC1CU,GAAiB,GAInB7oB,EAAOkJ,WAAW,iBAAkB2f,GACpC7oB,EAAOkJ,WAAW,aAAc/B,GAChCnH,EAAOkJ,WAAW,qBAAsBlJ,EAAO8oB,kBAAkB3hB,IACjEnH,EAAOkJ,WAAW,WAAY9B,GAC9B3K,KAAK2B,KAAKE,OAAO2jB,KAAK,cAAc,KACnCjiB,EAAO+oB,qBAAqB,qBAAqB,G,KAMtD,CAEU,aAAAC,CAAc3e,EAAa/D,EAAasb,EAAmBqH,GACpE,MAAO,CAAE5e,IAAKA,EAAK/D,IAAKA,EAAK2O,MAAO3O,EAAM+D,GAAOuX,EAClD,CAKO,gBAAAzN,GACN,OAAO1X,KAAKysB,iBACb,CAEU,WAAAC,CAAY9e,EAAa/D,GAClC,IAAIqf,EAAgBlpB,KAAK0F,WAAW,iBAE/BwjB,IACJA,EAAgBlpB,KAAKkD,IAAI,iBAG1B,IAAIypB,EAAKzD,EAAclS,SAAWkS,EAAcrX,MAChD7R,KAAKwrB,aAAamB,GAAM/e,EACxB5N,KAAKsrB,aAAaqB,GAAM9iB,CACzB,CAEU,KAAA+iB,CAAM5V,GACf,MAAgB,SAAZA,GAAmC,QAAZA,GAAkC,OAAZA,EACzC,KAED,IACR,CAEU,iBAAA6V,CAAkBhE,G,MAC3B,IAAIiE,EACAjb,EAAQgX,EAAShX,MACjBmF,EAAW6R,EAAS7R,SA2BxB,OA1BInF,EAAQ,IACE,IAATA,GAGc,IAATA,EAFRA,EAAQ,EAKS,IAATA,EACRA,EAAQ,EAES,GAATA,EACRA,EAAQ,EAES,IAATA,EACRA,EAAQ,GAEAA,EAAQ,KAChBA,EAAQ,GAETib,EAAoB,CAAE9V,SAAUA,EAAUnF,MAAOA,IAElC,QAAZmF,GAC8C,SAAd,QAA/B,EAAAhX,KAAK0F,WAAW,uBAAe,eAAEsR,YACpC8V,EAAoB,CAAE9V,SAAU,MAAOnF,MAAO,IAGzCib,CACR,CAEU,iBAAAC,GACT,MAAMnf,EAAM5N,KAAK0F,WAAW,OACtBmE,EAAM7J,KAAK0F,WAAW,OAE5B,GAAI,WAAekI,IAAQ,WAAe/D,GAAM,CAC/C,MAAMlI,EAAO3B,KAAKK,MACZorB,EAAerlB,KAAKgS,MAAMpY,KAAK0F,WAAW,iBAC1CgmB,EAAetlB,KAAKgS,MAAMpY,KAAK0F,WAAW,iBAC1C6Y,EAAWve,KAAKkD,IAAI,YACpByU,EAAe3X,KAAK0F,WAAW,gBAErC,IAAI2J,EAAQoc,EACR9iB,EAAI,EAER,MAAM8gB,EAAYzpB,KAAKkD,IAAI,iBAC3B,IAAI0U,EAAe,iBAAqB,EAAG8T,EAAeD,EAAclN,EAAS4G,YAAasE,GAE1F,sBAA0B7R,GAAgB5X,KAAK0pB,iBAClD9R,EAAe,OAAH,UAAQD,IAGrB,MAAMD,EAAmB,sBAA0BE,GACnD5X,KAAKysB,kBAAoB/U,EAEzB,MAAMsV,EAAe,cAAkBpV,EAAaZ,UAC9CgB,EAAMrW,EAAKqW,IACXC,EAAWtW,EAAKsW,SAGtB5I,EAAQ,OAAWoc,EAAe/T,EAAkBE,EAAaZ,SAAUY,EAAa/F,MAAOlQ,EAAMiM,GACrG,IACIqf,EADAC,EAAgB7d,EAAQqI,EAE5B,MAAMyV,EAAUntB,KAAKkD,IAAI,eAEzBlD,KAAKuO,cAAc,eAAgBqJ,GAEnC,MAAMwV,EAAqB7O,EAASrb,IAAI,sBAClCmqB,EAAmB9O,EAASrb,IAAI,mBAAoBkqB,GAE1D,IAAIN,EACAQ,EAAgB,EAEhBD,IACHP,EAAoB9sB,KAAK6sB,kBAAkBjV,GAC3C0V,EAAgB,sBAA0BR,IAG3C,IAAIxR,EAAI,EACR,KAAOjM,EAAQqc,EAAehU,GAAkB,CAC/C,IAAI9M,EACA5K,KAAKuK,UAAU3D,OAAS+B,EAAI,GAC/BiC,EAAW,IAAI,IAAS5K,UAAM4D,EAAW,CAAC,GAC1C5D,KAAKutB,WAAWptB,KAAKyK,GACrB5K,KAAKwtB,gBAAgB5iB,IAGrBA,EAAW5K,KAAKuK,UAAU5B,GAG3B3I,KAAK0f,cAAc9U,EAAU,IAE7B5K,KAAK6hB,gBAAgBjX,GAAU,GAE/BA,EAASU,OAAO,QAAS+D,GACzBzE,EAASU,OAAO,qBAAiB1H,GAEjC,IAAI6T,EAAWpI,EAAQ,cAAkBuI,EAAaZ,SAAUY,EAAa/F,MAAQ7R,KAAK4sB,MAAMhV,EAAaZ,WAE7GS,EAAW,OAAWA,EAAUG,EAAaZ,SAAU,EAAGrV,GAE1DiJ,EAASU,OAAO,WAAYmM,GAE5B,IAAIgW,EAAO,IAAI5V,KAAKxI,GAEpB4d,EAASE,EAAQvV,EAAaZ,UAC1BgW,GAAgBhtB,KAAKkD,IAAI,mBAAqB,WAAegqB,IACnC,QAAzBtV,EAAaZ,UACZ,cAAkB3H,EAAO6d,EAAeF,EAAchV,EAAKC,KAC9DgV,EAASjtB,KAAKkD,IAAI,2BAA4B0U,EAAaZ,WAK9D,MAAM+J,EAAQnW,EAAS1H,IAAI,SACvB6d,GACHA,EAAM5e,IAAI,OAAQR,EAAK+rB,cAAcT,OAAOQ,EAAMR,IAGnD,IAAIpb,EAAQ+F,EAAa/F,MAMzB,GAJ6B,QAAzB+F,EAAaZ,UAChBpM,EAASU,OAAO,gBAAiB+D,GAG9Bge,EAAkB,CACrBxb,EAAQ,EACR,IAAImF,EAAWY,EAAaZ,SACZ,QAAZA,IACHA,EAAW,OAGZ,IAAI2W,EAAgBte,EAAQ,cAAkB2H,EAAUhX,KAAK4sB,MAAM5V,IAEnE2W,EAAgB,OAAWA,EAAe3W,EAAU,EAAGrV,GACvDiJ,EAASU,OAAO,gBAAiBqiB,E,CASlC,GANA3tB,KAAK4f,iBAAiBhV,EAAUiH,GAEhCqb,EAAgB7d,EAChBA,EAAQoI,EAGJqV,EAAmB,CACtB,MAAMc,EAAgBd,EAAkB9V,SAClC6W,EAAaf,EAAkBjb,MAC/Bic,EAAM9tB,KAAK4sB,MAAMgB,GAGvB,IAEIG,EAFAC,EAAa,OAAWd,EAAgBI,EAAgBQ,EAAKF,EAAeC,EAAYlsB,EAAMurB,GAG9Fe,EAAejuB,KAAKkD,IAAI,mBAAoBlD,KAAKkD,IAAI,gBAEzD,KAAO8qB,EAAa3e,EAAQ,IAAOie,GAAe,CACjD,IAAIY,EACAluB,KAAKmuB,eAAevnB,OAAS0U,EAAI,GACpC4S,EAAgB,IAAI,IAASluB,UAAM4D,EAAW,CAAC,GAC/C5D,KAAKmuB,eAAehuB,KAAK+tB,GACzBluB,KAAKwtB,gBAAgBU,IAGrBA,EAAgBluB,KAAKmuB,eAAe7S,GAGrCtb,KAAK0f,cAAcwO,EAAe,CAAC,UAAU,GAE7CluB,KAAK6hB,gBAAgBqM,GAAe,GAEpCA,EAAc5iB,OAAO,QAAS0iB,GAE9B,IAAII,EAAgBJ,EAAa,cAAkBJ,EAAeC,EAAaC,GAE/EM,EAAgB,OAAWA,EAAeR,EAAe,EAAGjsB,GAE5DusB,EAAc5iB,OAAO,WAAY8iB,GAEjC,IAAIX,EAAO,IAAI5V,KAAKmW,GAEpBf,EAASgB,EAAaL,GAEtB,MAAMS,EAAaH,EAAchrB,IAAI,SAarC,GAXImrB,IACCjB,EACHiB,EAAWlsB,IAAI,OAAQR,EAAK+rB,cAAcT,OAAOQ,EAAMR,IAGvDoB,EAAW5hB,WAAW,WAAW,IAInCzM,KAAK4f,iBAAiBsO,EAAe,GAEjCF,GAAcD,EACjB,MAGDA,EAAqBC,EACrBA,EAAaI,EACb9S,G,EAIF,GAAIjM,GAAS6d,EACZ,MAGDvkB,G,CAGD,IAAK,IAAI2lB,EAAI3lB,EAAG2lB,EAAItuB,KAAKuK,UAAU3D,OAAQ0nB,IAC1CtuB,KAAK6hB,gBAAgB7hB,KAAKuK,UAAU+jB,IAAI,GAGzC,IAAK,IAAIA,EAAIhT,EAAGgT,EAAItuB,KAAKmuB,eAAevnB,OAAQ0nB,IAC/CtuB,KAAK6hB,gBAAgB7hB,KAAKmuB,eAAeG,IAAI,GAG9C,OAAYtuB,KAAKuD,QAASA,IACrBA,EAAOgrB,QACVhrB,EAAO2J,gB,IAKVlN,KAAK4iB,cACN,CAEU,aAAA9D,CAAc1Z,EAAeC,GACtCrF,KAAKuO,cAAc,oBAAqBvO,KAAKwuB,gBAAgBppB,IAC7DpF,KAAKuO,cAAc,oBAAqBvO,KAAKwuB,gBAAgBnpB,GAC9D,CAEU,SAAAopB,GACTzuB,KAAK0uB,aAAe1uB,KAAK0pB,eAAiB,CAC3C,CAEU,OAAAiF,CAAQ/gB,GACjB,MAAM+J,EAAe3X,KAAK0F,WAAW,gBAC/BsR,EAAWW,EAAaX,SAE9B,IAAI4X,EAAY,OAAWhhB,EAAKoJ,EAAUW,EAAa9F,MAAO7R,KAAKK,OAE/DwuB,EAAUD,EAAY,cAAkB5X,EAAUW,EAAa9F,MAAQ7R,KAAK4sB,MAAM5V,IAGtF,OADA6X,EAAU,OAAWA,EAAS7X,EAAU,EAAGhX,KAAKK,OACzCuuB,GAAaC,EAAUD,GAAa5uB,KAAKkD,IAAI,gBAAiB,EACtE,CAEU,OAAA4rB,CAAQjlB,GACjB,MAAM8N,EAAe3X,KAAK0F,WAAW,gBAC/BsR,EAAWW,EAAaX,SAE9B,IAAI4X,EAAY,OAAW/kB,EAAKmN,EAAUW,EAAa9F,MAAO7R,KAAKK,OAC/DwuB,EAAUD,EAAY,cAAkB5X,EAAUW,EAAa9F,MAAQ7R,KAAK4sB,MAAM5V,IAItF,OAFA6X,EAAU,OAAWA,EAAS7X,EAAU,EAAGhX,KAAKK,OAEzCuuB,GAAaC,EAAUD,GAAa5uB,KAAKkD,IAAI,cAAe,EACpE,CAEU,YAAA6rB,CAAaC,EAAevP,GAEtC,CAOO,YAAAiK,GACN,OAAO1pB,KAAK8oB,aAEb,CAOO,gBAAAE,GACN,OAAO,sBAA0BhpB,KAAKkD,IAAI,gBAC3C,CAKO,qBAAA2gB,CAAsBjZ,EAAuCgf,GACnE,MAAMjS,EAAe3X,KAAK0F,WAAW,gBAEhCkF,EAASqkB,OACbrkB,EAASqkB,KAAO,CAAC,GAEbrkB,EAASskB,QACbtkB,EAASskB,MAAQ,CAAC,GAGnB,OAAYtF,GAASY,IACpB,IAAInb,EAAQzE,EAAS1H,IAAIsnB,GACzB,GAAI,WAAenb,GAAQ,CAC1B,IAAIuf,EAAYhkB,EAASqkB,KAAMzE,GAC3BqE,EAAUjkB,EAASskB,MAAO1E,GAG9B,GAAInb,GAASuf,GAAavf,GAASwf,OAG9B,CACJ,MAAM7X,EAAWW,EAAaX,SACxBnF,EAAQ8F,EAAa9F,MAE3B+c,EAAY,OAAWvf,EAAO2H,EAAUnF,EAAO7R,KAAKK,OACpDwuB,EAAUD,EAAY,cAAkB5X,EAAUnF,EAAQ7R,KAAK4sB,MAAM5V,IAErE6X,EAAU,OAAWA,EAAS7X,EAAU,EAAGhX,KAAKK,OAEhDuK,EAASqkB,KAAMzE,GAASoE,EACxBhkB,EAASskB,MAAO1E,GAASqE,C,CAG1B7uB,KAAK+uB,aAAaH,EAAWhkB,EAASQ,U,IAGzC,CAEU,gBAAA+jB,GAEV,CAKO,oBAAAC,CAAqBxkB,EAAuC4f,EAAe6E,EAAsBC,GAEvG,IAAIC,EACAC,EAEA5kB,EAASqkB,MAAQrkB,EAASskB,OAC7BK,EAAY3kB,EAASqkB,KAAKzE,GAC1BgF,EAAa5kB,EAASskB,MAAM1E,KAG5B+E,EAAY3kB,EAAS1H,IAAIsnB,GACzBgF,EAAaD,GAGd,IAAIlgB,EAAQkgB,GAAaC,EAAaD,GAAaF,EAInD,OAFAhgB,EAAQrP,KAAKyvB,YAAcpgB,EAAQrP,KAAKyvB,YAAcH,EAE/CtvB,KAAK0vB,gBAAgBrgB,EAC7B,CAKO,sBAAAsgB,CAAuB/kB,EAAuC4f,EAAe6E,EAAsBC,GACzG,OAAOtvB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAKovB,qBAAqBxkB,EAAU4f,EAAO6E,EAAcC,GAC9G,CAKO,oBAAAM,CAAqBhlB,EAAuC4f,EAAe6E,EAAsBC,GACvG,IAAIC,EACAC,EAEA5kB,EAASqkB,MAAQrkB,EAASskB,OAC7BK,EAAY3kB,EAASqkB,KAAKzE,GAC1BgF,EAAa5kB,EAASskB,MAAM1E,KAG5B+E,EAAY3kB,EAAS1H,IAAIsnB,GACzBgF,EAAaD,GAGd,IAAIlgB,EAAQkgB,GAAaC,EAAaD,GAAaF,EAGnD,OADAhgB,EAAQrP,KAAKyvB,YAAcpgB,EAAQrP,KAAKyvB,YAAcH,EAC/CtvB,KAAK0vB,gBAAgBrgB,EAC7B,CAKO,sBAAAwgB,CAAuBjlB,EAAuC4f,EAAe6E,EAAsBC,GACzG,OAAOtvB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAK4vB,qBAAqBhlB,EAAU4f,EAAO6E,EAAcC,GAC9G,CAKO,iBAAA7L,CAAkBne,EAAkB6Q,GAC1C,IAAI9G,EAAQrP,KAAKwuB,gBAAgBlpB,GACjC+J,IAAiB8G,EAAW,IAAOnW,KAAK0pB,eAExC,IAAI/R,EAAe3X,KAAK0F,WAAW,gBACnC,IAAK,QAAY2J,GAAQ,CACxB,MAAMygB,EAAW9vB,KAAKK,MAAMyX,OAAOC,eAC7Bf,EAAWW,EAAaX,SACxBgB,EAAMhY,KAAKK,MAAM2X,IACjBC,EAAWjY,KAAKK,MAAM4X,SACtBpG,EAAQ8F,EAAa9F,MAG3BxC,EAAQ,OAAWA,EAAO2H,EAAUnF,EAAO7R,KAAKK,MAAOL,KAAK0F,WAAW,MAAO,IAE9E,IAAI4W,EAAW,0BAA8B3E,EAAc,IAAIE,KAAKxI,GAAQygB,EAAU9X,EAAKC,GAO3F,OANIA,IAEH5I,EAAQ,OAAWA,EAA8B,IAAtBrP,KAAK0pB,eAAuB1S,EAAUnF,EAAO7R,KAAKK,MAAOL,KAAK0F,WAAW,MAAO,IAC3G4W,EAAW,0BAA8B3E,EAAc,IAAIE,KAAKxI,EAAQiN,EAAWnG,GAAW2Z,EAAU9X,EAAKC,IAGvGjY,KAAK0vB,gBAAgBrgB,EAAQiN,EAAWnG,E,CAEhD,OAAO4Z,GACR,CAYO,cAAArjB,CAAepH,EAAkB0qB,GAEvC,GAA8B,MAA1BhwB,KAAK0F,WAAW,OAAgB,CACnC,IAAIunB,EAASjtB,KAAKkD,IAAI,sBAAuBlD,KAAK0F,WAAW,gBAAgBsR,UACzE3H,EAAQrP,KAAKwuB,gBAAgBlpB,GACjC,GAAI,WAAe+J,GAAQ,CAC1B,IAAIoe,EAAO,IAAI5V,KAAKxI,GAEhBsI,EAAe3X,KAAK0F,WAAW,gBAC/B4W,EAAW,0BAA8B3E,EAAc8V,EAAMztB,KAAKK,MAAMyX,OAAOC,eAAgB/X,KAAKK,MAAM2X,IAAKhY,KAAKK,MAAM4X,UAM9H,OAJuB,IAAnB+X,IACHvC,EAAO,IAAI5V,KAAKxI,EAAQrP,KAAKkD,IAAI,yBAA0BlD,KAAKkD,IAAI,kBAAmB,KAAQoZ,IAGzFtc,KAAKK,MAAMqtB,cAAcT,OAAOQ,EAAMztB,KAAKkD,IAAI,oBAAqB+pB,G,EAI7E,MAAO,EACR,CASO,aAAA3J,CAAc/f,EAAkB+B,EAAkB6Q,EAAmB8Z,GAC3E,IAAInE,EAAkB9rB,KAAK0F,WAAW,QAAW1F,KAAKkD,IAAI,YAAYwC,WAAW,UAC7E2J,EAAQrP,KAAKwuB,gBAAgBlpB,GAEjB,MAAZ6Q,IACHA,EAAW,IAGZ9G,IAAiB8G,EAAW,IAAOnW,KAAK0pB,eAExC,MAAMwG,EAAS,iBAAsB3sB,EAAOgH,WAAYK,IACvD,IAAIulB,EAAU,EAKd,OAJIvlB,EAASqkB,OACZkB,EAAUvlB,EAASqkB,KAAKnD,IAGlB,KAAeqE,EAAS9gB,EAAM,IAGtC,GAAI4gB,GAAQ1sB,EAAOL,IAAI,eAAgB,CACtC,IAAIktB,EAAQ7sB,EAAOgH,UAAU2lB,EAAOlhB,MAAQ,GACxCqhB,EAAS9sB,EAAOgH,UAAU2lB,EAAOlhB,OAErC,GAAIohB,GAASC,GACRD,EAAMnB,MAAQoB,EAAOnB,MAAO,CAC/B,IAAID,EAAOmB,EAAMnB,KAAKnD,GAClBoD,EAAQmB,EAAOnB,MAAMpD,GAEzB,GAAI1lB,KAAKC,IAAIgJ,EAAQ4f,GAAQ7oB,KAAKC,IAAIgJ,EAAQ6f,GAC7C,OAAOmB,C,CAKV,GAAID,EACH,OAAOA,EAGR,GAAIC,EACH,OAAOA,C,KAGJ,CACJ,MAAMzlB,EAAWrH,EAAOgH,UAAU2lB,EAAOlhB,MAAQ,GAEjD,GAAIpE,GACCA,EAASqkB,MAAQrkB,EAASskB,MAAO,CACpC,IAAID,EAAOrkB,EAASqkB,KAAKnD,GACrBoD,EAAQtkB,EAASskB,MAAMpD,GAE3B,GAAIzc,GAAS4f,GAAQ5f,GAAS6f,EAC7B,OAAOtkB,C,EAKZ,CAKO,SAAAwZ,CAAUxZ,EAAuC0lB,EAAuC/W,EAAsBuS,GACpH,MAAMyE,EAAS3lB,EAAS1H,IAAI4oB,GAG5B,OAFewE,EAASptB,IAAI4oB,GAEfyE,EAASvwB,KAAK0pB,eAAiBnQ,CAI7C,CAWO,WAAAiX,CAAYprB,EAAaC,EAAWiX,GAC1Ctc,KAAKywB,aAAarrB,EAAM8S,UAAW7S,EAAI6S,UAAWoE,EACnD,CAWO,YAAAmU,CAAarrB,EAAeC,EAAaiX,GAC/C,MAAM1O,EAAM5N,KAAK0F,WAAW,WAAY,GAClCmE,EAAM7J,KAAK0F,WAAW,WAAY,GACxC,GAA8B,MAA1B1F,KAAK0F,WAAW,QAA4C,MAA1B1F,KAAK0F,WAAW,OACrD,GAAI1F,KAAKkD,IAAI,aAAc,CAC1B,MAAMwtB,EAAsB1wB,KAAKorB,iBAAiB/lB,EAAMD,GAClDuS,EAAe3X,KAAKkD,IAAI,gBAE9B,IAAIytB,EAAU3wB,KAAKurB,eAAe5T,GAC9BiZ,EAAU5wB,KAAKqrB,eAAe1T,GAAgB,EAClDiZ,EAAU,OAAWA,EAASF,EAAoB1Z,SAAU0Z,EAAoB7e,MAAO7R,KAAK2B,MAC5FivB,GAAW5wB,KAAK4sB,MAAM8D,EAAoB1Z,UAAY,sBAA0B0Z,GAChFE,EAAU,OAAWA,EAASF,EAAoB1Z,SAAU0Z,EAAoB7e,MAAO7R,KAAK2B,MAE5F,IAAIkvB,EAAY,OAAWF,EAASD,EAAoB1Z,SAAU0Z,EAAoB7e,MAAO7R,KAAK2B,MAC9FmvB,EAAY,OAAWF,EAASF,EAAoB1Z,SAAU0Z,EAAoB7e,MAAO7R,KAAK2B,MAE9FmI,GAAK1E,EAAQyrB,IAAcC,EAAYD,GACvC9mB,GAAK1E,EAAMwrB,IAAcC,EAAYD,GAEzC7wB,KAAK6F,KAAKiE,EAAGC,EAAGuS,E,MAGhBtc,KAAK6F,MAAMT,EAAQwI,IAAQ/D,EAAM+D,IAAOvI,EAAMuI,IAAQ/D,EAAM+D,GAAM0O,EAGrE,CAUO,cAAAyU,CAAezrB,GACrB,OAAO,IAAIuS,KAAK7X,KAAKwuB,gBAAgBlpB,GACtC,CASO,cAAA0rB,CAAevD,GACrB,OAAOztB,KAAK0vB,gBAAgBjC,EAAKvV,UAClC,CAQO,oBAAA2K,GACN,IAAIhZ,EAAM7J,KAAK0F,WAAW,eAAgB1F,KAAK0F,WAAW,QACtDkI,EAAM5N,KAAK0F,WAAW,eAAgB1F,KAAK0F,WAAW,QAE1D,OAAI,WAAemE,IAAQ,WAAe+D,GAClC5N,KAAKysB,mBAAqB5iB,EAAM+D,GAEjC,GACR,CAEO,YAAA2N,CAAa1J,GACP,MAATA,IACFA,EAAQ,GAGT,IAAIof,EAAQjxB,KAAKkD,IAAI,kBAAmB,IAAOlD,KAAK0pB,eACJ,KAA7C1pB,KAAKkD,IAAI,YAAYwC,WAAW,YAClCmM,IAAU,GAGX,IAAIqf,EAAelxB,KAAKwuB,gBAAgBxuB,KAAK0F,WAAW,kBAAmB,IAE3E,MAAMiS,EAAe3X,KAAK0F,WAAW,gBACrC,IAAIklB,EAAO5qB,KAAKmxB,UAAUD,EAAcrf,EAAO8F,GAE3C8T,EAAezrB,KAAK0F,WAAW,eAAgB,GAC/CgmB,EAAe1rB,KAAK0F,WAAW,eAAgB,GAE/CkI,EAAM,OAAW6d,EAAc9T,EAAaX,SAAUW,EAAa9F,MAAO7R,KAAKK,OAC/EwJ,EAAM,OAAW6hB,EAAc/T,EAAaX,SAAUW,EAAa9F,MAAO7R,KAAKK,OAKnF,OAHAuqB,GAAQqG,EACRrG,EAAO,aAAiBA,EAAMhd,EAAMqjB,EAAOpnB,EAAMonB,GAE1CjxB,KAAKmkB,iBAAiBnkB,KAAK0vB,gBAAgB9E,GACnD,CAEU,SAAAuG,CAAUvG,EAAa/Y,EAAc8F,GAC9C,OAAO,OAAWiT,EAAO/Y,EAAQ7R,KAAK0pB,eAAgB/R,EAAaX,SAAUW,EAAa9F,MAAO7R,KAAKK,MACvG,EA1mCA,qC,gDAAkC,aAClC,sC,gDAA0C,IAAUqS,WAAWC,OAAO,CAACgW,EAAS/V,a,gIC5I1E,MAAMwe,UAAgD,IAA7D,c,oBASC,yC,gDAA+B,IAC/B,iC,gDAAuB,IAOvB,qC,gDAA+B,KAC/B,2C,wDAwkBD,CA9kBQ,SAAA/vB,GACNrB,KAAKqxB,YAAYlxB,KAAK,QACtBoB,MAAMF,WACP,CAMO,SAAAiwB,GACN,OAAItxB,KAAKuxB,aACDvxB,KAAKuxB,aAENvxB,KAAKwxB,MACb,CAEU,YAAAzC,CAAatB,EAAclqB,GACpC,IAAKA,EAAOL,IAAI,gBAAiB,CAChC,MAAMuuB,EAAQzxB,KAAKsxB,YACbpB,EAAS,iBAAsBuB,GAAQtwB,GAAM,KAAeA,EAAGssB,KAChEyC,EAAOwB,OACX,cAAmBD,EAAOvB,EAAOlhB,MAAOye,E,CAG3C,CAEO,eAAAkE,GACN,IAAK3xB,KAAKuxB,aAAc,CACvB,MAAME,EAAQzxB,KAAKwxB,OACnBC,EAAM7qB,OAAS,EAEf,OAAY5G,KAAKuD,QAASA,IACzB,IAAIinB,EAAQ,SACRjnB,EAAOL,IAAI,UAAYlD,OAC1BwqB,EAAQ,UAET,OAAYjnB,EAAOgH,WAAYK,IAC9B,IAAIyE,EAAQzE,EAAS1H,IAAIsnB,GACrB,WAAenb,IACdzE,EAASqkB,MACZjvB,KAAK+uB,aAAankB,EAASqkB,KAAMzE,GAAQjnB,E,GAG1C,IAGH,MAAMquB,EAAW5xB,KAAKkD,IAAI,WAAY,GAChC2uB,EAAW7xB,KAAKkD,IAAI,WAAY,GAEtC,IAAI4uB,EAAML,EAAM7qB,OAEhB,MAAM+Q,EAAe3X,KAAK0F,WAAW,gBAC/BqsB,EAAYpa,EAAa9F,MACzBmF,EAAWW,EAAaX,SAE9B,GAAI4a,EAAW,EAAG,CACjB,MAAM3L,EAAQ6L,EAAMF,EACpB,IAAIhH,EAAO6G,EAAMK,EAAM,GACvB,GAAI,WAAelH,GAClB,IAAK,IAAIjiB,EAAImpB,EAAM,EAAGnpB,EAAImpB,EAAM7L,EAAOtd,IACtCiiB,GAAQ,cAAkB5T,EAAU+a,EAAY/xB,KAAK4sB,MAAM5V,IAE3D4T,EAAO,OAAWA,EAAM5T,EAAU+a,EAAW/xB,KAAKK,OAClDoxB,EAAMtxB,KAAKyqB,E,CAKd,GAAIiH,EAAW,EAAG,CACjB,MAAM5L,EAAQ6L,EAAMD,EACpB,IAAIjH,EAAO6G,EAAM,GACjB,GAAI,WAAe7G,GAClB,IAAK,IAAIjiB,EAAI,EAAGA,EAAIsd,EAAOtd,IAC1BiiB,GAAQ,cAAkB5T,EAAU+a,GAEpCnH,EAAO,OAAWA,EAAM5T,EAAU+a,EAAW/xB,KAAKK,OAClDoxB,EAAMO,QAAQpH,E,EAKnB,CAQO,eAAA8E,CAAgBrgB,GACtB,MAAMoiB,EAAQzxB,KAAKsxB,YACb3a,EAAgB3W,KAAKkD,IAAI,gBAAiB,GAC1C0T,EAAc5W,KAAKkD,IAAI,cAAe,GACtC4uB,EAAML,EAAM7qB,OAAS+P,GAAiB,EAAIC,GAC1CsZ,EAAS,iBAAsBuB,GAAQtwB,GAAM,KAAeA,EAAGkO,KACrE,IAAIL,EAAQkhB,EAAOlhB,MAEnB,GAAIkhB,EAAOwB,MACV,OAAQ1iB,EAAQ2H,GAAiBmb,EAE7B,CACA9iB,EAAQ,IACXA,GAAS,GAGV,IAAIijB,EAAYR,EAAMziB,GAElBpF,EAAI,EAQR,OANCA,EADGqoB,EAAY5iB,GAASA,EAAQrP,KAAK0F,WAAW,MAAO,GACnDusB,EAAY5iB,EAGZA,EAAQ4iB,GAGLjjB,EAAQ2H,GAAiBmb,EAAMloB,EAAI5J,KAAK0pB,eAAiBoI,C,CAEnE,CAQO,YAAAI,CAAa7iB,GACnB,MAAMoiB,EAAQzxB,KAAKsxB,YAEbpB,EAAS,iBAAsBuB,GAAQtwB,GAAM,KAAeA,EAAGkO,KACrE,IAAIL,EAAQkhB,EAAOlhB,MAEnB,OAAIkhB,EAAOwB,OAIN1iB,EAAQ,IACXA,GAAS,GAJHA,CAQT,CASO,eAAAwf,CAAgBlpB,GACtB,MAAMqR,EAAgB3W,KAAKkD,IAAI,gBAAiB,GAC1C0T,EAAc5W,KAAKkD,IAAI,cAAe,GACtCuuB,EAAQzxB,KAAKsxB,YACnB,IAAIQ,EAAM1rB,KAAKgS,MAAMqZ,EAAM7qB,OAAS+P,GAAiB,EAAIC,IACrD5H,EAAQ1J,EAAWwsB,EACnBK,EAAS/rB,KAAKgsB,MAAMpjB,GASxB,OARImjB,EAAS,IACZA,EAAS,GAGNA,EAASL,EAAM,IAClBK,EAASL,EAAM,GAGTL,EAAMU,IAAWnjB,EAAQmjB,EAASxb,GAAiB3W,KAAK0pB,cAChE,CAEU,cAAAX,GACT/oB,KAAKuO,cAAc,gBAAiBvO,KAAKsxB,YAAY1qB,OAAS5G,KAAKkD,IAAI,gBAAiB,IAAM,EAAIlD,KAAKkD,IAAI,cAAe,IAC3H,CAYO,WAAAstB,CAAYprB,EAAaC,EAAWiX,GAC1C,MAAMmV,EAAQzxB,KAAKsxB,YACbQ,EAAML,EAAM7qB,OAClB,IAAIspB,EAAS,iBAAsBuB,GAAQtwB,GAAM,KAAeA,EAAGiE,EAAM8S,aAErEma,EAAaZ,EAAMrrB,KAAKwH,IAAIsiB,EAAOlhB,MAAO8iB,EAAM,IAEpD5B,EAAS,iBAAsBuB,GAAQtwB,GAAM,KAAeA,EAAGkE,EAAI6S,aACnE,IAAIT,EAAWga,EAAMvB,EAAOlhB,OAEzBkhB,EAAOlhB,OAAS8iB,IAClBra,EAAWga,EAAMK,EAAM,GAAK9xB,KAAK0pB,gBAGlC1pB,KAAKywB,aAAa4B,EAAY5a,EAAU6E,EACzC,CAWO,YAAAmU,CAAarrB,EAAeC,EAAaiX,GAC/C,MAAM1O,EAAM5N,KAAK0F,WAAW,MAAO,GAC7BmE,EAAM7J,KAAK0F,WAAW,MAAO,GACnCN,EAAQ,aAAiBA,EAAOwI,EAAK/D,GACrCxE,EAAM,aAAiBA,EAAKuI,EAAK/D,GACjC7J,KAAK6F,KAAK7F,KAAK0vB,gBAAgBtqB,GAAQpF,KAAK0vB,gBAAgBrqB,GAAMiX,EACnE,CAGU,iBAAAyQ,GACT,IAAI6B,EAAY5uB,KAAK0F,WAAW,eAAgB,GAC5CmpB,EAAU7uB,KAAK0F,WAAW,eAAgB,GAE9C,GAAI,WAAekpB,IAAc,WAAeC,GAAU,CAErD7uB,KAAKsyB,qBACRtyB,KAAKsyB,oBAAqB,EAC1BtyB,KAAK2xB,mBAGN,MAAMhwB,EAAO3B,KAAKK,MACZ2X,EAAMrW,EAAKqW,IACXC,EAAWtW,EAAKsW,SAChBwZ,EAAQzxB,KAAKsxB,YACb/S,EAAWve,KAAKkD,IAAI,YACpB4uB,EAAML,EAAM7qB,OACZ8iB,EAAe1pB,KAAK0pB,eAE1B,IAAIhf,EAAa1K,KAAKkyB,aAAatD,GAC/BlkB,EAAa,GAChBA,IAGD,IAAIC,EAAW3K,KAAKkyB,aAAarD,GAC7BlkB,EAAWmnB,EAAM,GACpBnnB,IAED,IAAI4nB,EAAWhU,EAASkC,aAAera,KAAKyD,IAAI0U,EAASrb,IAAI,mBAAqB,EAAIsvB,OAAOC,kBACzFC,EAAYtsB,KAAKwH,IAAIkkB,EAAK1rB,KAAK4c,MAAMrY,EAAWD,GAAc6nB,IAClEG,EAAYtsB,KAAKyD,IAAI,EAAG6oB,GAExBhoB,EAAatE,KAAKgsB,MAAM1nB,EAAagoB,GAAaA,EAElD1yB,KAAK2yB,WAAaD,EAElB,OAAY1yB,KAAKuK,WAAYK,IAC5B5K,KAAK6hB,gBAAgBjX,GAAU,EAAM,IAGtC,OAAY5K,KAAKmuB,gBAAiBvjB,IACjC5K,KAAK6hB,gBAAgBjX,GAAU,EAAM,IAGtC,IAAIgoB,EAAgB/D,EAAUD,IAAeC,EAAUD,GAAalF,GAAgB/e,EAAWD,IAAegf,EAG1G9R,EAAe,iBAAqB,EAAGgb,EAAcL,EAAUvyB,KAAKkD,IAAI,kBAE5E,MAAMyU,EAAe3X,KAAK0F,WAAW,gBACrC,IAAIgS,EAAmB,sBAA0BE,GAE7CF,EAAmBgS,IACtB9R,EAAe,OAAH,UAAQD,GACpBD,EAAmB,sBAA0BE,IAG9C5X,KAAKysB,kBAAoB/U,EAEzB,MAAMV,EAAWY,EAAaZ,SACxBmW,EAAUntB,KAAKkD,IAAI,eAEzB,IAAIunB,EAAY5S,KAAKgb,MAEjBpB,EAAM,KACThH,EAAYgH,EAAM,IAInB,IAAIpiB,EAAQ,OAAWrP,KAAK0F,WAAW,eAAgB,GAAIsR,EAAUY,EAAa/F,MAAOlQ,EAAM8oB,GAE/F,MAAM2C,EAAqB7O,EAASrb,IAAI,sBAClCmqB,EAAmB9O,EAASrb,IAAI,mBAAoBkqB,GAE1D,IAAIN,EAEAgG,EADAxF,EAAgB,EAGhBD,IACHP,EAAoB9sB,KAAK6sB,kBAAkBjV,GAC3C0V,EAAgB,sBAA0BR,IAI3C,IAAIiG,EAA+B/yB,KAAKgzB,YAAY3jB,EAAOrP,KAAK0F,WAAW,eAAgB2J,GAASqI,EAAkBE,EAAc5X,KAAK0F,WAAW,MAAO2J,IAC3J,GAAI0jB,EAAcnsB,OAAS,EAAG,CAC7B,IAAI+B,EAAI,EACR3I,KAAKizB,GAAK,EACV,IAAI/F,EAAgB7d,EAA2B,GAAnBqI,EAC5B,MAAMsV,EAAe,cAAkBhW,GAGvC,GAAI8V,EAAmB,CACtB,IAAIsD,EAAQqB,EAAMsB,EAAc,IAChC/yB,KAAKkzB,cAAc9C,EAAQ1Y,EAAkB0Y,EAAO9C,EAAeR,E,CAGpE,IAAI/hB,EAAcwT,EAASkC,aAAelC,EAAS4G,YAAc,GAEjE,OAAY4N,GAAgB/jB,I,MAC3B,IAAIpE,EACA5K,KAAKuK,UAAU3D,OAAS+B,EAAI,GAC/BiC,EAAW,IAAI,IAAoC5K,UAAM4D,EAAW,CAAC,GACrE5D,KAAKutB,WAAWptB,KAAKyK,GACrB5K,KAAKwtB,gBAAgB5iB,IAGrBA,EAAW5K,KAAKuK,UAAU5B,GAG3B,IAAI0G,EAAQoiB,EAAMziB,GACdye,EAAO,IAAI5V,KAAKxI,GAEhBoI,EAAWpI,EACX1G,EAAIoqB,EAAcnsB,OAAS,EAC9B6Q,EAAWga,EAAMsB,EAAcpqB,EAAI,IAGnC8O,GAAYC,EAEb9M,EAASU,OAAO,QAAS+D,GACzBzE,EAASU,OAAO,WAAYmM,GAC5B7M,EAASU,OAAO,QAAS3C,GACzBiC,EAASU,OAAO,qBAAiB1H,GAEjC,IAAIqpB,EAASE,EAAQnW,GACjBgW,GAAgBhtB,KAAKkD,IAAI,mBAAqB,WAAegqB,IAChD,QAAZlW,GACC,cAAkB3H,EAAO6d,EAAeF,EAAchV,EAAKC,KAC9DgV,EAASjtB,KAAKkD,IAAI,2BAA4B8T,IAKjDhX,KAAK0f,cAAc9U,EAAU,IAE7B,MAAMmW,EAAQnW,EAAS1H,IAAI,SACvB6d,GACHA,EAAM5e,IAAI,OAAQR,EAAK+rB,cAAcT,OAAOQ,EAAMR,IAGnDjtB,KAAK6hB,gBAAgBjX,GAAU,GAE/B,IAAIiH,EAAQ+F,EAAa/F,MAOzB,GAJgB,QAAZmF,GACHpM,EAASU,OAAO,gBAAiB+D,GAG9Bge,EAAkB,CACrB,IAAI8F,EAAYvb,EAAaZ,SAK7B,GAJiB,QAAbmc,IACHA,EAAY,OAGTthB,EAAQ,GAA8B,QAAzB+F,EAAaZ,SAAoB,CAEjD,IAAI2W,EAAgB,OAAWte,EAAO8jB,EAAW,EAAGxxB,GAAQ,cAAkBwxB,EAAWnzB,KAAK4sB,MAAMuG,IAChGnkB,EAAQhP,KAAKkyB,aAAavE,GAE9B,GADAA,EAAgB8D,EAAMziB,GAClB2e,GAAiBte,EAAO,CAC3B,IAAI/B,EAAOmkB,EAAMziB,EAAQ,GACrB1B,EACHqgB,EAAgBrgB,EAGhBqgB,GAAiBL,C,CAInB1iB,EAASU,OAAO,gBAAiBqiB,E,CAElC9b,EAAQ,C,CAKT,GAFA7R,KAAK4f,iBAAiBhV,EAAUiH,GAE5BkP,GAAS+R,GACyB,KAAjCvU,EAAS7Y,WAAW,UAAkB,CACzC,IAAI0tB,EAAgBN,EAAiB5vB,IAAI,SACzC,GAAIkwB,GACKrS,EAAM5f,IACEiyB,EAAcjyB,IAEV4J,EAAa,CAChC,IAAIsoB,EAAQrzB,KAAKszB,WAAWR,EAAkBloB,EAAUgN,GACpDyb,IACe,QAAlB,EAAAA,EAAMnwB,IAAI,gBAAQ,SAAEuJ,WAAW,WAAW,G,EAW3CqgB,GACH9sB,KAAKkzB,cAAc7jB,EAAOoI,EAAU6V,EAAeR,GAGpDnkB,IAEIoY,GAASA,EAAMrb,WAAW,aAC7BotB,EAAmBloB,GAEpBsiB,EAAgB7d,CAAK,G,CAIvB,OAAYrP,KAAKuD,QAASA,IACrBA,EAAOgrB,QACVhrB,EAAO2J,gB,IAKVlN,KAAK4iB,cACN,CAEU,UAAA0Q,CAAWC,EAA+CC,EAA+C3K,GAClH,MAAM7R,EAAW6R,EAAS7R,SAEpByc,EAASF,EAAUrwB,IAAI,QAAS,GAChCwwB,EAASF,EAAUtwB,IAAI,QAAS,GAEtC,MAAgB,QAAZ8T,GACC,IAAIa,KAAK4b,GAAQE,WAAa,IAAI9b,KAAK6b,GAAQC,UAC3CJ,EAIFC,CACR,CAEU,aAAAN,CAAcb,EAAoB5a,EAAkB6V,EAAuB1V,GACpF,MAAMqW,EAAejuB,KAAKkD,IAAI,mBAAoBlD,KAAKkD,IAAI,gBACrD0wB,EAAYhc,EAAaZ,SAC/B,IAAI3H,EAAQgjB,EAAa,cAAkBuB,EAAW5zB,KAAK4sB,MAAMgH,IAEjEvkB,EAAQ,OAAWA,EAAOukB,EAAW,EAAG5zB,KAAKK,OAE7C,IAAIwzB,EAAWpc,EAA2B,GAAhB6V,EAEtBwG,EAAoC9zB,KAAKgzB,YAAY3jB,EAAOwkB,EAAUjc,EAAcvI,GACxF,MAAMoiB,EAAQzxB,KAAKsxB,YAEnB,OAAYwC,GAAqB9kB,IAChC,IAAIkf,EACAluB,KAAKmuB,eAAevnB,OAAS5G,KAAKizB,GAAK,GAC1C/E,EAAgB,IAAI,IAAoCluB,UAAM4D,EAAW,CAAC,GAC1E5D,KAAKmuB,eAAehuB,KAAK+tB,GACzBluB,KAAKwtB,gBAAgBU,IAGrBA,EAAgBluB,KAAKmuB,eAAenuB,KAAKizB,IAG1C5jB,EAAQoiB,EAAMziB,GACdkf,EAAc5iB,OAAO,QAAS+D,GAC9B6e,EAAc5iB,OAAO,WAAY+D,EAAQie,GACzCY,EAAc5iB,OAAO,QAAS0D,GAE9BhP,KAAK0f,cAAcwO,EAAe,CAAC,UAAU,GAE7C,MAAMnN,EAAQmN,EAAchrB,IAAI,SAChC,GAAI6d,EACH,GAAI/gB,KAAKkD,IAAI,YAAYA,IAAI,sBAAuB,CACnD,IAAIuqB,EAAO,IAAI5V,KAAKxI,GAChB4d,EAASgB,EAAa2F,GAC1B7S,EAAM5e,IAAI,OAAQnC,KAAKK,MAAMqtB,cAAcT,OAAOQ,EAAMR,G,MAGxDlM,EAAMtU,WAAW,WAAW,GAI9BzM,KAAK6hB,gBAAgBqM,GAAe,GACpCluB,KAAK4f,iBAAiBsO,EAAe,GACrCluB,KAAKizB,IAAI,GAEX,CAGU,WAAAD,CAAY3jB,EAAewkB,EAAkBhL,EAAyBkL,GAC/E,MAAMC,EAAuB,GACvBhd,EAAW6R,EAAS7R,SACpBnF,EAAQgX,EAAShX,MACjBic,EAAM9tB,KAAK4sB,MAAM5V,GAEjBW,EAAe3X,KAAK0F,WAAW,gBAE/B/D,EAAO3B,KAAKK,MACZoxB,EAAQzxB,KAAKsxB,YAEnB,IAAI2C,EAAIpiB,EAAQ,EACZqb,GAAgB,IAEhB5Q,EAAW,cAAkBtF,EAAU8W,GACvCoG,EAAe,cAAkBld,EAAUnF,EAAQic,GACnDqG,EAAgB9kB,EAMpB,IAJgB,OAAZ2H,IACH3H,EAAQ0kB,GAGF1kB,GAASwkB,GAAU,CAEzBxkB,EAAQ,OAAWA,EAAO2H,EAAUnF,EAAOlQ,GAE3C,IAAIqN,EAAQhP,KAAKkyB,aAAa7iB,GAC1B+kB,EAAY3C,EAAMziB,GAEtB,GAAgB,OAAZgI,GAA8C,OAAzBW,EAAaX,SACjChX,KAAKq0B,SAAShlB,IACjB4kB,IAGGA,GAAKpiB,IACJxC,GAAS8kB,EAA+B,EAAfD,GAC5B,OAAYF,EAAOhlB,GAEpBilB,EAAI,GAEL5kB,GAASiN,EAETjN,EAAQ,OAAWA,EAAO2H,EAAU,EAAGrV,OAEnC,CACJ,GAAIyyB,EAAY/kB,EACf,IAAK,IAAI1G,EAAIqG,EAAO8iB,EAAML,EAAM7qB,OAAQ+B,EAAImpB,EAAKnpB,IAEhD,GADAyrB,EAAY3C,EAAM9oB,GACdyrB,GAAa/kB,EAAO,CACvBL,EAAQrG,EACR,K,CAKH,OAAYqrB,EAAOhlB,GAEnBK,GAAS6kB,EAET7kB,EAAQ,OAAWA,EAAO2H,EAAUnF,EAAOlQ,E,CAQ5C,GALI0N,GAAS6d,IACZ7d,GAAS6kB,EAAe5X,EAExBjN,EAAQ,OAAWA,EAAO2H,EAAUnF,EAAOlQ,IAExC0N,GAAS6d,EACZ,MAGDA,EAAgB7d,C,CAGjB,OAAO2kB,CACR,CAEU,QAAAK,CAASzJ,GAKlB,OAJe,iBAAsB5qB,KAAKsxB,aAAc7D,GAChD,KAAqBA,EAAM7C,KAGrB8G,KACf,CACU,SAAAP,CAAUvG,EAAa/Y,EAAcyiB,GAC9C,IAAItlB,EAAQ,aAAiBhP,KAAKkyB,aAAatH,GAAQ/Y,EAAO,EAAG7R,KAAKwxB,OAAO5qB,OAAS,GACtF,OAAO5G,KAAKwxB,OAAOxiB,EACpB,EAxlBA,qC,gDAAkC,oBAClC,sC,gDAA0C,IAAS0D,WAAWC,OAAO,CAACye,EAAgBxe,a,qEClBhF,MAAM2hB,UAAa,IAQlB,cAAAvxB,GACNzB,MAAMyB,kBAEFhD,KAAKw0B,eAAe,UAAYx0B,KAAKw0B,eAAe,aACvDx0B,KAAKymB,QAAS,EAEhB,EATA,qC,gDAAkC,SAClC,sC,gDAA0C,IAAS/T,WAAWC,OAAO,CAAC4hB,EAAK3hB,a,gICoTrE,MAAM6hB,UAA0C,IAAvD,c,oBASC,6C,iDAAoC,IACpC,sD,iDAA6C,IAC7C,2C,gDAAiC,IACjC,uC,yDACA,uC,yDAEA,0C,yDAEA,yC,gDAA+B,IAC/B,sC,yDACA,8C,gDAAoC,GAy+CrC,CAr+CQ,iBAAA3wB,GACN9D,KAAK00B,gBAAiB,EACtB10B,KAAKwmB,WACN,CAKO,0BAAAvG,GACNjgB,KAAK20B,yBAA0B,EAC/B30B,KAAKwmB,WACN,CAEU,SAAAnlB,GACTrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,SACvEjB,KAAKuO,cAAc,OAAQ,SAC3BvO,KAAK4gB,OAAO,SACZrf,MAAMF,WACP,CAEO,gBAAAuK,GAGN,GAFArK,MAAMqK,mBAEF5L,KAAKiD,QAAQ,gBAAiB,CACbjD,KAAK+L,cAAc6oB,cAElC50B,KAAK60B,SACR70B,KAAK60B,QAAQnxB,UAGf,IAAIkxB,EAAe50B,KAAKkD,IAAI,gBACxB0xB,IACH50B,KAAK60B,QAAU,IAAI,KAAc,CAChCD,EAAaxT,UAAU,qBAAqB,KAC3CphB,KAAK20B,yBAA0B,CAAI,IAEpCC,EAAaxT,UAAU,qBAAqB,KAC3CphB,KAAK20B,yBAA0B,CAAI,M,CAMvC,IAAIG,GAAY,EAchB,IAbI90B,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,iBAAmBjD,KAAKiD,QAAQ,mBAC9F6xB,GAAY,EACZ90B,KAAKwe,WAAWrc,IAAI,OAAQ,MAIzBnC,KAAKgkB,YAAchkB,KAAK00B,gBAAkB10B,KAAK+0B,cAAgBD,GAAa90B,KAAKw0B,eAAe,UAAYx0B,KAAKw0B,eAAe,WAAax0B,KAAKiD,QAAQ,aAAejD,KAAKiD,QAAQ,aAAejD,KAAKiD,QAAQ,gBAAkBjD,KAAKiD,QAAQ,gBAAkBjD,KAAKiD,QAAQ,cAAgBjD,KAAKiD,QAAQ,iBAAmBjD,KAAKiD,QAAQ,4BAChVjD,KAAKg1B,aACLh1B,KAAK00B,gBAAiB,GAGvB10B,KAAKmvB,mBAEDnvB,KAAK20B,0BAA4B30B,KAAKiI,YAAcjI,KAAKkD,IAAI,YAAY,GAAO,CAEnF,MAAMuN,EAAQzQ,KAAKyQ,MACnB,IAAIwkB,GAAQ,EAEZ,GAAIxkB,EAAO,CACV,MAAMykB,EAASl1B,KAAKkD,IAAI,YAAYwC,WAAW,UACjC,KAAVwvB,EACHzkB,EAAMhP,MAAMyD,MAAMC,IACK,aAAlBA,EAAKyN,YACRqiB,GAAQ,E,IAIQ,KAAVC,GACRzkB,EAAM/O,MAAMwD,MAAMC,IACK,aAAlBA,EAAKyN,YACRqiB,GAAQ,E,IAMRA,GACHj1B,KAAKm1B,sBAENn1B,KAAK20B,yBAA0B,C,CAGhC30B,KAAKipB,cAEDjpB,KAAKgkB,YAAchkB,KAAK+0B,cAAgB/0B,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,QAAUjD,KAAKw0B,eAAe,QAAUx0B,KAAKw0B,eAAe,iBAAmBx0B,KAAKw0B,eAAe,iBAAmBx0B,KAAKw0B,eAAe,QAAUx0B,KAAKw0B,eAAe,SAAWx0B,KAAKw0B,eAAe,UAAYx0B,KAAKw0B,eAAe,WAAax0B,KAAKiD,QAAQ,kBAClVjD,KAAKmpB,qBACLnpB,KAAK+sB,oBACL/sB,KAAKmgB,qBAGNngB,KAAKyvB,WAAazvB,KAAKqY,WAExB,CAEU,gBAAA8W,GACLnvB,KAAKgkB,aACRhkB,KAAK20B,yBAA0B,EAEjC,CAEU,UAAA1L,GAEV,CAEU,WAAAmM,CAAY/lB,GACrB,MAAMgmB,EAAer1B,KAAKkD,IAAI,gBACxBoyB,EAAYt1B,KAAKu1B,qBAEvB,IAAIxgB,EAAO,GAQX,OALCA,EADGsgB,EACIC,EAAUrI,OAAO5d,EAAOgmB,GAGxBC,EAAUrI,OAAO5d,OAAOzL,EAAW5D,KAAK0F,WAAW,sBAEpDqP,CACR,CAEU,iBAAAgY,GACT,MAAMnf,EAAM5N,KAAK0F,WAAW,OACtBmE,EAAM7J,KAAK0F,WAAW,OAE5B,GAAI,WAAekI,IAAQ,WAAe/D,GAAM,CAE/C,MAAMyO,EAActY,KAAKkD,IAAI,eACvBsV,EAAOxY,KAAK0F,WAAW,QACvB+lB,EAAezrB,KAAK0F,WAAW,gBAC/BgmB,EAAe1rB,KAAK0F,WAAW,gBAAmB8S,EAExD,IAAInJ,EAAQoc,EAAejT,EACvBgd,EAAkB,EAClBC,EAAiB7nB,EAErB,GAAI0K,EAAa,CAGhB,GAFAjJ,EAAQrP,KAAK01B,gBAETrmB,EAAQoc,EACX,KAAOpc,EAAQoc,GACdpc,GAASmJ,EAIXid,EAASpmB,EAELomB,GAAU,IACbA,EAAS,EACLjd,EAAO,IAETid,EADG,WAAez1B,KAAK21B,aACd31B,KAAK21B,YAGLvvB,KAAKwvB,IAAI,IAAK,MAK1BJ,EAAkBpvB,KAAKyvB,IAAInK,EAAelT,GAAQpS,KAAK0vB,OAAS1vB,KAAKyvB,IAAIJ,GAAUrvB,KAAK0vB,OAEpFN,EAAkB,IACrBnmB,EAAQjJ,KAAKwvB,IAAI,GAAIxvB,KAAKyvB,IAAIJ,GAAUrvB,KAAK0vB,OAAS,I,CAKxD,MAAMvX,EAAWve,KAAKkD,IAAI,YACpBkqB,EAAqB7O,EAASrb,IAAI,sBAClCmqB,EAAmB9O,EAASrb,IAAI,mBAAoBkqB,GAE1D,IAAI2I,EAAY3vB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMhsB,KAAKyvB,IAAIzvB,KAAKC,IAAImS,IAASpS,KAAK0vB,SAExE,MAAME,EAAe5vB,KAAKgS,MAAMI,EAAOud,GAEvC,IAAIE,EAAiB,EAEjB,QAAYD,EAAe,EAAG,IAAM,GAAK,IAC5CC,EAAiB,GAGd,QAAYD,EAAe,GAAI,IAAM,GAAK,IAC7CC,EAAiB,IAGlB,IAAIC,EAAY1d,EAAOyd,EAGnBttB,EAAI,EACJ2S,EAAI,EACJxP,GAAW,IAEf,KAAOuD,EAAQqc,GAAc,CAC5B,IAAI9gB,EACA5K,KAAKuK,UAAU3D,OAAS+B,EAAI,GAC/BiC,EAAW,IAAI,IAAS5K,UAAM4D,EAAW,CAAC,GAC1C5D,KAAKutB,WAAWptB,KAAKyK,GACrB5K,KAAKwtB,gBAAgB5iB,IAGrBA,EAAW5K,KAAKuK,UAAU5B,GAG3B3I,KAAK0f,cAAc9U,EAAU,IAC7B5K,KAAK6hB,gBAAgBjX,GAAU,GAE/BA,EAASU,OAAO,QAAS+D,GACzB,MAAM0R,EAAQnW,EAAS1H,IAAI,SACvB6d,GACHA,EAAM5e,IAAI,OAAQnC,KAAKo1B,YAAY/lB,IAGpCrP,KAAK4f,iBAAiBhV,GAEtB,IAAIurB,EAAY9mB,EAchB,GAbKiJ,GAIAkd,EAAkB,EACrBW,EAAY/vB,KAAKwvB,IAAI,GAAIxvB,KAAKyvB,IAAIJ,GAAUrvB,KAAK0vB,OAASntB,EAAI,IAJ/DwtB,GAAa3d,EAYV6U,EAAkB,CACrB,IAAIW,EAAa3e,EAAQ6mB,EAUzB,IARI5d,IACCkd,EAAkB,IAErBU,EADsBl2B,KAAKusB,cAAcld,EAAO8mB,EAAW,IAC/B3d,MAE7BwV,EAAa3e,EAAQ6mB,GAGflI,EAAamI,EAAmB,MAAP3d,GAAsB,CACrD,IAAI0V,EACAluB,KAAKmuB,eAAevnB,OAAS0U,EAAI,GACpC4S,EAAgB,IAAI,IAASluB,UAAM4D,EAAW,CAAC,GAC/C5D,KAAKmuB,eAAehuB,KAAK+tB,GACzBluB,KAAKwtB,gBAAgBU,IAGrBA,EAAgBluB,KAAKmuB,eAAe7S,GAGrCtb,KAAK0f,cAAcwO,EAAe,CAAC,UAAU,GAC7CluB,KAAK6hB,gBAAgBqM,GAAe,GACpCA,EAAc5iB,OAAO,QAAS0iB,GAE9B,MAAMK,EAAaH,EAAchrB,IAAI,SACjCmrB,IACCjB,EACHiB,EAAWlsB,IAAI,OAAQnC,KAAKo1B,YAAYpH,IAGxCK,EAAW5hB,WAAW,WAAW,IAInCzM,KAAK4f,iBAAiBsO,GACtBF,GAAckI,EACd5a,G,EAMF,GAFAjM,EAAQ8mB,EAEJrqB,GAAYuD,EACf,MAGD,IAAI0mB,EAAY3vB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMhsB,KAAKyvB,IAAIzvB,KAAKC,IAAImS,IAASpS,KAAK0vB,SACxE,GAAIC,EAAY,IAAMzd,EAAa,CAElC,IAAI8d,EAAWhwB,KAAKgS,MAAMhS,KAAKC,IAAID,KAAKyvB,IAAIzvB,KAAKC,IAAI0vB,IAAc3vB,KAAK0vB,SAAW,EAEnFzmB,EAAQ,QAAYA,EAAO+mB,E,CAE5BztB,IAEAmD,EAAWuD,C,CAGZ,IAAK,IAAIif,EAAI3lB,EAAG2lB,EAAItuB,KAAKuK,UAAU3D,OAAQ0nB,IAC1CtuB,KAAK6hB,gBAAgB7hB,KAAKuK,UAAU+jB,IAAI,GAGzC,IAAK,IAAIA,EAAIhT,EAAGgT,EAAItuB,KAAKmuB,eAAevnB,OAAQ0nB,IAC/CtuB,KAAK6hB,gBAAgB7hB,KAAKmuB,eAAeG,IAAI,GAG9C,OAAYtuB,KAAKuD,QAASA,IACrBA,EAAOgrB,QACVhrB,EAAO2J,gB,IAITlN,KAAK4iB,c,CAEP,CAGO,gBAAAhD,CAAiBhV,EAA+CiH,GACtE,IAAI0M,EAAWve,KAAKkD,IAAI,YACpBmM,EAAQzE,EAAS1H,IAAI,SACrBuU,EAAW7M,EAAS1H,IAAI,YAExBoC,EAAWtF,KAAK0vB,gBAAgBrgB,GAEhCoY,EAAcniB,EACd+wB,EAAkBr2B,KAAK0vB,gBAAgBrgB,EAAQrP,KAAK0F,WAAW,SAE/D,WAAe+R,KAClBgQ,EAAcznB,KAAK0vB,gBAAgBjY,GACnC4e,EAAkB5O,GAGf7c,EAAS1H,IAAI,YACA,MAAZuU,IACH4e,EAAkB/wB,GAIpB,IAAIgxB,EAAmB7O,EAEnBkG,EAAgB/iB,EAAS1H,IAAI,iBACZ,MAAjByqB,IACH2I,EAAmBt2B,KAAK0vB,gBAAgB/B,IAGzCpP,EAAS2E,YAAYtY,EAAS1H,IAAI,SAAUoC,EAAUgxB,EAAkBzkB,GAExE,MAAMiO,EAAOlV,EAAS1H,IAAI,QAmB1B,GAlBAqb,EAASmJ,WAAW5H,EAAMxa,EAAUmiB,GAChC3H,IACCzQ,GAASrP,KAAKkD,IAAI,YAAa,IAClC4c,EAAKc,OAAO,QACZd,EAAKgB,gBAEGhB,EAAKyW,OAAO,UACpBzW,EAAKkH,UAAU,QACflH,EAAKgB,iBAIPvC,EAASiJ,WAAW5c,EAAS1H,IAAI,QAASoC,EAAUgxB,EAAkBzkB,GACtE0M,EAASwJ,WAAWnd,EAAS1H,IAAI,YAAaoC,EAAU+wB,GAExDr2B,KAAKuiB,eAAe3X,GACpB2T,EAASoJ,aAAa/c,EAAS1H,IAAI,UAAWoC,EAAUmiB,IAEnD7c,EAAS1H,IAAI,WAAY,CAC7B,MAAM2T,EAAW7W,KAAKkD,IAAI,YACtB2T,GACHA,EAASjM,E,CAGZ,CAGU,kBAAAue,GACT,IAAIsC,EAAuBzrB,KAAKwuB,gBAAgBxuB,KAAKkD,IAAI,QAAS,IAC9DwoB,EAAuB1rB,KAAKwuB,gBAAgBxuB,KAAKkD,IAAI,MAAO,IAEhE,MAAMiiB,EAAYnlB,KAAKkD,IAAI,YAAYiiB,YACvC,IAAIqR,EAA0Bx2B,KAAKusB,cAAcd,EAAcC,EAAcvG,GAAW,GAEpFsR,EAAoB,gBAAqBD,EAAWhe,MACxDxY,KAAKuO,cAAc,oBAAqBkoB,GAExChL,EAAe,QAAYA,EAAcgL,GACzC/K,EAAe,QAAYA,EAAc+K,GAEzCD,EAAax2B,KAAKusB,cAAcd,EAAcC,EAAcvG,GAAW,GAEvE,IAAI3M,EAAOge,EAAWhe,KACtBiT,EAAe+K,EAAW5oB,IAC1B8d,EAAe8K,EAAW3sB,IAEtB7J,KAAK0F,WAAW,kBAAoB+lB,GAAgBzrB,KAAK0F,WAAW,kBAAoBgmB,GAAgB1rB,KAAK0F,WAAW,UAAY8S,IAEvIxY,KAAKuO,cAAc,eAAgBkd,GACnCzrB,KAAKuO,cAAc,eAAgBmd,GAEnC1rB,KAAKuO,cAAc,OAAQiK,GAE7B,CASO,eAAAgW,CAAgBlpB,GACtB,MAAMsI,EAAM5N,KAAK0F,WAAW,OACtBmE,EAAM7J,KAAK0F,WAAW,OAE5B,OAAK1F,KAAKkD,IAAI,eAINkD,KAAKwvB,IAAIxvB,KAAKswB,GAAIpxB,GAAac,KAAKyvB,IAAIhsB,GAAOzD,KAAK0vB,OAAS1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,QAAW1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,QAAU1vB,KAAK0vB,QAHjIxwB,GAAYuE,EAAM+D,GAAOA,CAKlC,CAQO,eAAA8hB,CAAgBrgB,GAEtB,MAAMzB,EAAM5N,KAAK0F,WAAW,OACtBmE,EAAM7J,KAAK0F,WAAW,OAE5B,GAAK1F,KAAKkD,IAAI,eAGT,CACJ,GAAImM,GAAS,EAAG,CACf,IAAIsnB,EAAc32B,KAAKkD,IAAI,eACvB,WAAeyzB,KAClBtnB,EAAQsnB,E,CAGV,OAAQvwB,KAAKyvB,IAAIxmB,GAASjJ,KAAK0vB,OAAS1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,SAAY1vB,KAAKyvB,IAAIhsB,GAAOzD,KAAK0vB,OAAS1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,O,CAT5H,OAAQzmB,EAAQzB,IAAQ/D,EAAM+D,EAWhC,CAKO,oBAAAgpB,CAAqBvnB,GAE3B,MAAMzB,EAAM5N,KAAK0F,WAAW,YACtBmE,EAAM7J,KAAK0F,WAAW,YAE5B,GAAK1F,KAAKkD,IAAI,eAGT,CACJ,GAAImM,GAAS,EAAG,CACf,IAAIsnB,EAAc32B,KAAKkD,IAAI,eACvB,WAAeyzB,KAClBtnB,EAAQsnB,E,CAGV,OAAQvwB,KAAKyvB,IAAIxmB,GAASjJ,KAAK0vB,OAAS1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,SAAY1vB,KAAKyvB,IAAIhsB,GAAOzD,KAAK0vB,OAAS1vB,KAAKyvB,IAAIjoB,GAAOxH,KAAK0vB,O,CAT5H,OAAQzmB,EAAQzB,IAAQ/D,EAAM+D,EAWhC,CAUO,IAAAipB,CAAKxnB,EAAe8G,EAAkBkC,GAC5ChJ,EAAQgJ,GAAahJ,EAAQgJ,GAAalC,EAE1C,MAAM7Q,EAAWtF,KAAK0vB,gBAAgBrgB,GACtC,OAAOrP,KAAKsa,UAAUiE,SAAS8H,qBAAqB/gB,EACrD,CAUO,IAAAwxB,CAAKznB,EAAe8G,EAAkBkC,GAC5ChJ,EAAQgJ,GAAahJ,EAAQgJ,GAAalC,EAE1C,MAAM7Q,EAAWtF,KAAK0vB,gBAAgBrgB,GACtC,OAAOrP,KAAKsa,UAAUiE,SAAS8H,qBAAqB/gB,EACrD,CAKO,sBAAAqqB,CAAuB/kB,EAAuC4f,EAAeuM,EAAuBzH,GAC1G,OAAOtvB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAKovB,qBAAqBxkB,EAAU4f,EAAOuM,EAAezH,GAC/G,CAKO,oBAAAF,CAAqBxkB,EAAuC4f,EAAeuM,EAAuBzH,GACxG,IAAIjgB,EAAQzE,EAAS1H,IAAIsnB,GAWzB,OANCnb,EAHmBzE,EAAS1H,IAAI,gBAGxBmM,EAAQigB,EADD1kB,EAASQ,UACc4rB,wBAAwBpsB,EAAU4f,GAGhExqB,KAAKyvB,YAAcpgB,EAAQrP,KAAKyvB,YAAcH,EAGhDtvB,KAAK0vB,gBAAgBrgB,EAC7B,CAKO,sBAAAwgB,CAAuBjlB,EAAuC4f,EAAeuM,EAAuBzH,GAC1G,OAAOtvB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAK4vB,qBAAqBhlB,EAAU4f,EAAOuM,EAAezH,GAC/G,CAKO,oBAAAM,CAAqBhlB,EAAuC4f,EAAeuM,EAAuBzH,GACxG,IAAIjgB,EAAQzE,EAAS1H,IAAIsnB,GAWzB,OANCnb,EAHmBzE,EAAS1H,IAAI,gBAGxBmM,EAAQigB,EADD1kB,EAASQ,UACc6rB,wBAAwBrsB,EAAU4f,GAGhExqB,KAAKyvB,YAAcpgB,EAAQrP,KAAKyvB,YAAcH,EAGhDtvB,KAAK0vB,gBAAgBrgB,EAC7B,CAOO,YAAA6nB,GACN,OAAOl3B,KAAK0vB,gBAAgB1vB,KAAKqY,YAClC,CAQO,SAAAA,GACN,MAAMzK,EAAMxH,KAAKwH,IAAI5N,KAAK0F,WAAW,YAAY,KAAY1F,KAAK0F,WAAW,gBAAgB,MACvFmE,EAAMzD,KAAKyD,IAAI7J,KAAK0F,WAAW,WAAYC,KAAW3F,KAAK0F,WAAW,eAAgBC,MAC5F,IAAI0S,EAAYrY,KAAKkD,IAAI,YAAa,GAUtC,OARImV,EAAYzK,IACfyK,EAAYzK,GAGTyK,EAAYxO,IACfwO,EAAYxO,GAGNwO,CACR,CAKO,YAAA8e,CAAa9nB,GACnB,OAAOA,CACR,CAEU,YAAA+nB,CAAa5e,GAEtB,OAAI,EAAIA,IAAS,GAChBA,GAAQ,EACDxY,KAAKo3B,aAAa5e,IAEnBA,CACR,CAEU,OAAAmW,CAAQ/gB,GACjB,OAAOA,CACR,CAEU,OAAAkhB,CAAQjlB,GACjB,OAAOA,CACR,CAEO,gBAAAqW,GACN,GAAIlgB,KAAKkD,IAAI,mBAAoB,CAChC,IAAIK,EAASvD,KAAKuD,OAAO,GACzB,GAAIA,EAAQ,CACX,IAAImH,EAAanH,EAAOmH,aAExB,GAAInH,EAAOgH,UAAU3D,OAAS,EAAG,CAE5B8D,EAAa,GAChBA,IAED,IAKI8f,EACA6M,EANA1sB,EAAWpH,EAAOoH,WAClBA,EAAWpH,EAAOgH,UAAU3D,QAC/B+D,IAMGpH,EAAOL,IAAI,UAAYlD,MAC1BwqB,EAAQ,SACR6M,EAAK,OAEG9zB,EAAOL,IAAI,UAAYlD,OAC/BwqB,EAAQ,SACR6M,EAAK,OAGN,IAAIC,EAAe9M,EAAQ,UAE3B,GAAIA,EACH,IAAK,IAAI7hB,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IAAK,CAC3C,IAAI0I,EAAM,EACNkmB,EAAQ,EAEZ,OAAYv3B,KAAKuD,QAASA,IACzB,IAAKA,EAAOL,IAAI,oBAAqB,CACpC,IAAI0H,EAAWrH,EAAOgH,UAAU5B,GAChC,GAAIiC,EAAU,CACb,IAAIyE,EAAQzE,EAAS1H,IAAIo0B,GAAuB/zB,EAAOL,IAAIm0B,GAEtD,QAAYhoB,KAChBgC,GAAOhC,EACPkoB,GAASnxB,KAAKC,IAAIgJ,G,MAMtB,OAAYrP,KAAKuD,QAASA,IACzB,IAAKA,EAAOL,IAAI,oBAAqB,CACpC,IAAI0H,EAAWrH,EAAOgH,UAAU5B,GAChC,GAAIiC,EAAU,CACb,IAAIyE,EAAQzE,EAAS1H,IAAIo0B,GAAuB/zB,EAAOL,IAAIm0B,GAEtD,QAAYhoB,KAChBzE,EAASzI,IAAKqoB,EAAQ,QAAiB+M,GACvC3sB,EAASzI,IAAKqoB,EAAQ,MAAenZ,GACrCzG,EAASzI,IAAKqoB,EAAQ,eAAwBnb,EAAQkoB,EAAQ,K,SAUxE,CAEU,mBAAApC,GACT,MAAMvnB,EAAM5N,KAAK0F,WAAW,YACtBmE,EAAM7J,KAAK0F,WAAW,YAEtB8xB,EAAax3B,KAAKkD,IAAI,OACtBu0B,EAAaz3B,KAAKkD,IAAI,OAE5B,IAAI2uB,EAAW7xB,KAAKkD,IAAI,WAAY,GAChC0uB,EAAW5xB,KAAKkD,IAAI,WAAY,GAEhClD,KAAKkD,IAAI,iBACgB,MAAxBlD,KAAKkD,IAAI,cACZ2uB,EAAW,IAEgB,MAAxB7xB,KAAKkD,IAAI,cACZ0uB,EAAW,KAIb,MAAMzM,EAAYnlB,KAAKkD,IAAI,YAAYiiB,YACjCuS,EAAwB13B,KAAKkD,IAAI,yBACvC,IAAImU,EAAerX,KAAKkD,IAAI,gBAE5B,GAAI,WAAe0K,IAAQ,WAAe/D,GAAM,CAC/C,IAAI4hB,EAAe5hB,EACf6hB,EAAe9d,EAmGnB,GAjGA,OAAY5N,KAAKuD,QAASA,IACzB,IAAKA,EAAOL,IAAI,gBAAiB,CAChC,IAAIy0B,EACAC,EACJ,MAAMxL,EAAiB7oB,EAAOmC,WAAW,kBAEzC,GAAInC,EAAOL,IAAI,WAAalD,MAC3B,IAAKosB,EAAgB,CACpB,IAAIyL,EAAOt0B,EAAOmC,WAAW,QACzBoyB,EAAOv0B,EAAOmC,WAAW,QAGF,GAAvBnC,EAAOmH,cAAqBnH,EAAOoH,YAAcpH,EAAOgH,UAAU3D,SACrEixB,OAAOj0B,EACPk0B,OAAOl0B,GAGR+zB,EAAYp0B,EAAOmC,WAAW,gBAAiBmyB,GAC/CD,EAAYr0B,EAAOmC,WAAW,gBAAiBoyB,E,OAG5C,GAAIv0B,EAAOL,IAAI,WAAalD,OAC3BosB,EAAgB,CAEpB,IAAI2L,EAAOx0B,EAAOmC,WAAW,QACzBsyB,EAAOz0B,EAAOmC,WAAW,QAGF,GAAvBnC,EAAOmH,cAAqBnH,EAAOoH,YAAcpH,EAAOgH,UAAU3D,SACrEmxB,OAAOn0B,EACPo0B,OAAOp0B,GAGR+zB,EAAYp0B,EAAOmC,WAAW,gBAAiBqyB,GAC/CH,EAAYr0B,EAAOmC,WAAW,gBAAiBsyB,E,CAI5Cz0B,EAAOiH,YAAejH,EAAO00B,cAC7B,WAAeN,KAClBlM,EAAerlB,KAAKwH,IAAI6d,EAAckM,IAGnC,WAAeC,KAClBlM,EAAetlB,KAAKyD,IAAI6hB,EAAckM,I,KAM1C53B,KAAKoe,WAAWlZ,MAAMgzB,IACrB,GAAIA,EAAMh1B,IAAI,iBAAkB,CAC/B,IAAImM,EAAQ6oB,EAAMh1B,IAAI,SACT,MAATmM,IACHoc,EAAerlB,KAAKwH,IAAI6d,EAAcpc,GACtCqc,EAAetlB,KAAKyD,IAAI6hB,EAAcrc,IAEvCA,EAAQ6oB,EAAMh1B,IAAI,YACL,MAATmM,IACHoc,EAAerlB,KAAKwH,IAAI6d,EAAcpc,GACtCqc,EAAetlB,KAAKyD,IAAI6hB,EAAcrc,G,KAKrCoc,EAAeC,KACjBD,EAAcC,GAAgB,CAACA,EAAcD,IAG3C,WAAe+L,GAEjB/L,EADGpU,EACYmgB,EAGA5pB,EAGRyJ,GACJ,WAAerX,KAAKm4B,YACvB1M,EAAezrB,KAAKm4B,UAIlB,WAAeV,GAEjB/L,EADGrU,EACYogB,EAGA5tB,EAGRwN,GACJ,WAAerX,KAAKo4B,YACvB1M,EAAe1rB,KAAKo4B,UAIlB3M,IAAiBC,EAAc,CAClC,IAAI2M,EAAO5M,EAIX,GAHAA,GAAgBzrB,KAAK0uB,aACrBhD,GAAgB1rB,KAAK0uB,aAEjBjD,EAAe7d,EAAK,CACvB,IAAIhE,EAAIyuB,EAAOzqB,EACN,GAALhE,IACHA,EAAI5J,KAAK0uB,cAGVjD,EAAe4M,EAAOzuB,EACtB8hB,EAAe2M,EAAOzuB,EAEtByN,GAAe,C,CAGhB,IAAIihB,EAAct4B,KAAKusB,cAAcd,EAAcC,EAAcvG,EAAW9N,GAC5EoU,EAAe6M,EAAY1qB,IAC3B8d,EAAe4M,EAAYzuB,G,CAG5B,IAAI0uB,EAAmB9M,EACnB+M,EAAmB9M,EAEnB5lB,EAAQ4lB,EAAeD,EAE3BA,GAAgB3lB,EAAQ+rB,EACxBnG,GAAgB5lB,EAAQ8rB,EAExB,IAAI4E,EAA0Bx2B,KAAKusB,cAAcd,EAAcC,EAAcvG,GAE7EsG,EAAe+K,EAAW5oB,IAC1B8d,EAAe8K,EAAW3sB,IAE1B4hB,EAAe,aAAiBA,EAAc7d,EAAK/D,GACnD6hB,EAAe,aAAiBA,EAAc9d,EAAK/D,GAGnD2sB,EAAax2B,KAAKusB,cAAcd,EAAcC,EAAcvG,GAAW,GAElE9N,IACJoU,EAAe+K,EAAW5oB,IAC1B8d,EAAe8K,EAAW3sB,KAG3B,MAAM+qB,EAAe50B,KAAKkD,IAAI,gBA+B9B,GA9BI0xB,IACH4B,EAAax2B,KAAKy4B,UAAUhN,EAAcC,EAAc8K,EAAWhe,KAAMoc,EAAalvB,WAAW,oBAAqBkvB,EAAalvB,WAAW,WAAY,IAAKkvB,EAAalvB,WAAW,oBAAqBkvB,EAAalvB,WAAW,WAAY,IAAKkvB,EAAalvB,WAAW,qBAAsBkvB,EAAalvB,WAAW,OAAQ,KAE/T8wB,EAAW5oB,IAAMA,IACpB4oB,EAAW5oB,IAAMA,GAGd4oB,EAAW3sB,IAAMA,IACpB2sB,EAAW3sB,IAAMA,GAGlB4hB,EAAe+K,EAAW5oB,IAC1B8d,EAAe8K,EAAW3sB,KAGvBwN,IACC,WAAemgB,KAClB/L,EAAerlB,KAAKyD,IAAI4hB,EAAc+L,IAGnC,WAAeC,KAClB/L,EAAetlB,KAAKwH,IAAI8d,EAAc+L,KAIpCC,IACHjM,EAAe8M,GAAoBC,EAAmBD,GAAoB1G,EAC1EnG,EAAe8M,GAAoBA,EAAmBD,GAAoB3G,GAGvEva,EAAc,CAEhBoU,EADG,WAAe+L,GACHA,EAGAe,EAIf7M,EADG,WAAe+L,GACHA,EAGAe,EAGZ9M,EAAeD,GAAgB,OAClCA,GAAgBzrB,KAAK0uB,aACrBhD,GAAgB1rB,KAAK0uB,cAGtB,IAAI5oB,EAAQ4lB,EAAeD,EAE3BA,GAAgB3lB,EAAQ+rB,EACxBnG,GAAgB5lB,EAAQ8rB,C,CAGrB5xB,KAAKkD,IAAI,iBAERuoB,GAAgB,IACnBA,EAAe8M,GAAoB,EAAInyB,KAAKwH,IAAIikB,EAAU,OAGvDpG,EAAe7d,IAClB6d,EAAe7d,GAEZ8d,EAAe7hB,IAClB6hB,EAAe7hB,IAIjB,IAAIioB,EAAM1rB,KAAKwH,IAAI,GAAIxH,KAAK4c,KAAK5c,KAAKyvB,IAAI71B,KAAK0F,WAAW,gBAAiB,KAAO,GAAKU,KAAKsyB,MAAQ,GAEhGtzB,EAAQ,QAAYpF,KAAK42B,qBAAqBnL,GAAeqG,GAC7DzsB,EAAM,QAAYrF,KAAK42B,qBAAqBlL,GAAeoG,GAE/D9xB,KAAKuO,cAAc,oBAAqBkd,GACxCzrB,KAAKuO,cAAc,oBAAqBmd,GACxC1rB,KAAKuO,cAAc,qBAAsBioB,EAAWhe,MAEpDxY,KAAK6F,KAAKT,EAAOC,E,CAEnB,CAGU,UAAA2vB,GACT,IAAIwC,EAAax3B,KAAKkD,IAAI,OACtBu0B,EAAaz3B,KAAKkD,IAAI,OAEtB0K,EAAMjI,IACNkE,GAAM,IAENgoB,EAAW7xB,KAAKkD,IAAI,WAAY,GAChC0uB,EAAW5xB,KAAKkD,IAAI,WAAY,GAEhClD,KAAKkD,IAAI,iBACgB,MAAxBlD,KAAKkD,IAAI,cACZ2uB,EAAW,IAEgB,MAAxB7xB,KAAKkD,IAAI,cACZ0uB,EAAW,KAIb,IAAI+G,EAAUhzB,IA+Cd,GA7CA,OAAY3F,KAAKuD,QAASA,IACzB,IAAKA,EAAOL,IAAI,gBAAiB,CAChC,IAAIy0B,EACAC,EAUJ,GATIr0B,EAAOL,IAAI,WAAalD,MAC3B23B,EAAYp0B,EAAOmC,WAAW,QAC9BkyB,EAAYr0B,EAAOmC,WAAW,SAEtBnC,EAAOL,IAAI,WAAalD,OAChC23B,EAAYp0B,EAAOmC,WAAW,QAC9BkyB,EAAYr0B,EAAOmC,WAAW,SAG3B,WAAeiyB,IAAc,WAAeC,GAAY,CAC3DhqB,EAAMxH,KAAKwH,IAAIA,EAAK+pB,GACpB9tB,EAAMzD,KAAKyD,IAAIA,EAAK+tB,GAEpB,IAAIrxB,EAAOqxB,EAAYD,EAEnBpxB,GAAQ,IACXA,EAAOH,KAAKC,IAAIuxB,EAAY,MAGzBrxB,EAAOoyB,IACVA,EAAUpyB,E,MAMdvG,KAAKoe,WAAWlZ,MAAMgzB,IACrB,GAAIA,EAAMh1B,IAAI,iBAAkB,CAC/B,IAAImM,EAAQ6oB,EAAMh1B,IAAI,SACT,MAATmM,IACHzB,EAAMxH,KAAKwH,IAAIA,EAAKyB,GACpBxF,EAAMzD,KAAKyD,IAAIA,EAAKwF,IAErBA,EAAQ6oB,EAAMh1B,IAAI,YACL,MAATmM,IACHzB,EAAMxH,KAAKwH,IAAIA,EAAKyB,GACpBxF,EAAMzD,KAAKyD,IAAIA,EAAKwF,G,KAKnBrP,KAAKkD,IAAI,eAAgB,CAC5B,IAAIyzB,EAAc32B,KAAKkD,IAAI,eACvB,WAAeyzB,IACd/oB,GAAO,IACVA,EAAM+oB,GAGJ/oB,GAAO,GACV,IAAIuB,MAAM,mD,CAiBZ,GAbY,IAARvB,GAAqB,IAAR/D,IAChBA,EAAM,GACN+D,GAAO,IAGJ,WAAe4pB,KAClB5pB,EAAM4pB,GAEH,WAAeC,KAClB5tB,EAAM4tB,GAIH7pB,IAAQjI,KAAYkE,KAAQ,IAG/B,OAFA7J,KAAKyM,WAAW,gBAAY7I,QAC5B5D,KAAKyM,WAAW,gBAAY7I,GAIzBgK,EAAM/D,KACR+D,EAAK/D,GAAO,CAACA,EAAK+D,IAGpB,MAAMgrB,EAAahrB,EACbirB,EAAahvB,EAGnB,IAAIivB,EAAa94B,KAAK0e,SAASqa,KAAK,MAAOnrB,GACvCorB,EAAah5B,KAAK0e,SAASqa,KAAK,MAAOlvB,GAE3C7J,KAAK21B,YAAc/nB,EAEf,WAAekrB,KAClBlrB,EAAMkrB,GAGH,WAAeE,KAClBnvB,EAAMmvB,GAIPprB,EAAM5N,KAAK2uB,QAAQ/gB,GACnB/D,EAAM7J,KAAK8uB,QAAQjlB,GAGfA,EAAM+D,GAAO,EAAIxH,KAAKwvB,IAAI,GAAI,MAC7B/rB,EAAM+D,GAAQ,EACjB5N,KAAK0uB,cAAgB7kB,EAAM+D,GAAO,EAGlC5N,KAAKyuB,UAAU5kB,GAGhB+D,GAAO5N,KAAK0uB,aACZ7kB,GAAO7J,KAAK0uB,cAIb9gB,IAAQ/D,EAAM+D,GAAOikB,EACrBhoB,IAAQA,EAAM+D,GAAOgkB,EAEjB5xB,KAAKkD,IAAI,iBAER0K,EAAM,GAAKgrB,GAAc,IAC5BhrB,EAAM,GAGH/D,EAAM,GAAKgvB,GAAc,IAC5BhvB,EAAM,IAIR7J,KAAKm4B,SAAWvqB,EAChB5N,KAAKo4B,SAAWvuB,EAEhB,IAAIwN,EAAerX,KAAKkD,IAAI,gBACxB+1B,EAAwBj5B,KAAKkD,IAAI,yBAAyB,GAC1D+1B,IACH5hB,EAAe4hB,GAGhB,IAAIC,EAAS7hB,EACT,WAAeogB,KAClByB,GAAS,GAGV,IAAI/T,EAAYnlB,KAAKkD,IAAI,YAAYiiB,YAEjCqR,EAA0Bx2B,KAAKusB,cAAc3e,EAAK/D,EAAKsb,EAAW+T,GAYtE,GAVAtrB,EAAM4oB,EAAW5oB,IACjB/D,EAAM2sB,EAAW3sB,IAGjB2sB,EAAax2B,KAAKusB,cAAc3e,EAAK/D,EAAKsb,GAAW,GAErDvX,EAAM4oB,EAAW5oB,IACjB/D,EAAM2sB,EAAW3sB,IAGbwN,EAAc,CAEhBzJ,EADG,WAAe4pB,GACZA,EAGAx3B,KAAKm4B,SAIXtuB,EADG,WAAe4tB,GACZA,EAGAz3B,KAAKo4B,SAGRvuB,EAAM+D,GAAO,OAChBA,GAAO5N,KAAK0uB,aACZ7kB,GAAO7J,KAAK0uB,cAGb,IAAI5oB,EAAQ+D,EAAM+D,EAClBA,GAAO9H,EAAQ+rB,EACfhoB,GAAO/D,EAAQ8rB,C,CAGhBkH,EAAa94B,KAAK0e,SAASqa,KAAK,MAAOnrB,GACvCorB,EAAah5B,KAAK0e,SAASqa,KAAK,MAAOlvB,GAEnC,WAAeivB,KAClBlrB,EAAMkrB,GAGH,WAAeE,KAClBnvB,EAAMmvB,GAGHL,GAAWhzB,MACdgzB,EAAW9uB,EAAM+D,GAIlB,IAAIwoB,EAAWhwB,KAAKgS,MAAMhS,KAAKC,IAAID,KAAKyvB,IAAIzvB,KAAKC,IAAIwD,EAAM+D,IAAQxH,KAAK0vB,SAAW,EAEnFloB,EAAM,QAAYA,EAAKwoB,GACvBvsB,EAAM,QAAYA,EAAKusB,GAIvB,MAAMxB,EAAe50B,KAAKkD,IAAI,gBAuB9B,GAtBI0xB,IACH4B,EAAax2B,KAAKy4B,UAAU7qB,EAAK/D,EAAK2sB,EAAWhe,KAAMoc,EAAalvB,WAAW,WAAYkvB,EAAalvB,WAAW,MAAO,IAAKkvB,EAAalvB,WAAW,WAAYkvB,EAAalvB,WAAW,MAAO,IAAKkvB,EAAalvB,WAAW,OAAQ,IACvOkI,EAAM4oB,EAAW5oB,IACjB/D,EAAM2sB,EAAW3sB,KAIlB7J,KAAKuO,cAAc,gBAAiBnI,KAAKyD,IAAI,EAAGzD,KAAK4c,MAAMnZ,EAAM+D,GAAO+qB,EAAU34B,KAAKkD,IAAI,gBAAiB,QAC5GlD,KAAK+oB,iBAED/oB,KAAKkD,IAAI,iBACZlD,KAAK01B,gBAAkB9nB,EACvBA,EAAM5N,KAAKm4B,SACXtuB,EAAM7J,KAAKo4B,SAEPxqB,GAAO,IACVA,EAAMgrB,GAAc,EAAIxyB,KAAKwH,IAAIikB,EAAU,QAMzC,WAAejkB,IAAQ,WAAe/D,KACrC7J,KAAK0F,WAAW,cAAgBkI,GAAO5N,KAAK0F,WAAW,cAAgBmE,GAAK,CAE/E7J,KAAKyM,WAAW,WAAYmB,GAC5B5N,KAAKyM,WAAW,WAAY5C,GAC5B7J,KAAK0sB,YAAY9e,EAAK/D,GAEtB,MAAMyS,EAAWtc,KAAKkD,IAAI,wBAAyB,GAC7CqZ,EAASvc,KAAKkD,IAAI,uBAExBlD,KAAKm5B,eAAe,CAAEhe,IAAK,MAAOkB,GAAIzO,EAAK0O,WAAUC,WACrDvc,KAAKm5B,eAAe,CAAEhe,IAAK,MAAOkB,GAAIxS,EAAKyS,WAAUC,U,CAGxD,CAEU,cAAAwM,GACV,CAEU,SAAA0F,CAAU5kB,GAEnB,IAAIuvB,EAAmBhzB,KAAKyvB,IAAIzvB,KAAKC,IAAIwD,IAAQzD,KAAK0vB,OAGlDuD,EAAQjzB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMgH,IAGpCC,GAAgB,GAEhBr5B,KAAK0uB,aAAe2K,CACrB,CAEU,WAAA3M,CAAY4M,EAAcC,GAEpC,CAGU,aAAAhN,CAAc3e,EAAa/D,EAAasb,EAAmBqU,GAEhErU,GAAa,IAChBA,EAAY,GAGbA,EAAY/e,KAAKgS,MAAM+M,GAEvB,IAAIyT,EAAqBhrB,EACrBirB,EAAqBhvB,EAErB4vB,EAAa5vB,EAAM+D,EAGJ,IAAf6rB,IACHA,EAAarzB,KAAKC,IAAIwD,IAIvB,IAAIuvB,EAAmBhzB,KAAKyvB,IAAIzvB,KAAKC,IAAIozB,IAAerzB,KAAK0vB,OAGzDuD,EAAQjzB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMgH,IAGpCC,GAAgB,GAEhB,IAAIpT,EAAgBoT,EAChBG,IACHvT,EAAQ,GAILuT,GACH5rB,EAAMxH,KAAKgsB,MAAMxkB,EAAMyrB,GAASA,EAEhCxvB,EAAMzD,KAAK4c,KAAKnZ,EAAMwvB,GAASA,IAG/BzrB,EAAMxH,KAAK4c,KAAKpV,EAAMyrB,GAASA,EAAQpT,EAEvCpc,EAAMzD,KAAKgsB,MAAMvoB,EAAMwvB,GAASA,EAAQpT,GAIrCrY,EAAM,GAAKgrB,GAAc,IAC5BhrB,EAAM,GAGH/D,EAAM,GAAKgvB,GAAc,IAC5BhvB,EAAM,GAGPuvB,EAAWhzB,KAAKyvB,IAAIzvB,KAAKC,IAAIozB,IAAerzB,KAAK0vB,OACjDuD,EAAQjzB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMgH,IAChCC,GAAgB,IAGhB,IAAI7gB,EAAOpS,KAAK4c,KAAMyW,EAAatU,EAAakU,GAASA,EACrDtD,EAAY3vB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMhsB,KAAKyvB,IAAIzvB,KAAKC,IAAImS,IAASpS,KAAK0vB,SAGpE4D,EAAsBtzB,KAAK4c,KAAKxK,EAAOud,GAGvC2D,EAAc,EACjBA,EAAc,GAENA,GAAe,GAAKA,EAAc,IAC1CA,EAAc,GAIflhB,EAAOpS,KAAK4c,KAAKxK,GAAQud,EAAY2D,IAAgB3D,EAAY2D,EAGjE,IAAIC,EAAe35B,KAAKkD,IAAI,gBAC5B,GAAI,WAAey2B,GAAe,CAEjC,IAAIC,EAAa,OAAWphB,EAAMmhB,GAC9BA,EAAenH,OAAOqH,WAAarhB,IAASohB,IAC/CphB,EAAOohB,EACK,GAARphB,IACHA,EAAO,G,CAKV,IAAI4d,EAAmB,EAEnBL,EAAY,IAEfK,EAAWhwB,KAAKgS,MAAMhS,KAAKC,IAAID,KAAKyvB,IAAIzvB,KAAKC,IAAI0vB,IAAc3vB,KAAK0vB,SAAW,EAE/Etd,EAAO,QAAYA,EAAM4d,IAI1B,IAII7D,EAJAuH,EAAW1zB,KAAKgsB,MAAMxkB,EAAM4K,GA8BhC,OA5BA5K,EAAM,QAAY4K,EAAOshB,EAAU1D,GAQlC7D,EAJIiH,EAIOpzB,KAAKgsB,MAAMvoB,EAAM2O,GAHjBpS,KAAK4c,KAAKnZ,EAAM2O,GAMxB+Z,IAAauH,GAChBvH,KAGD1oB,EAAM,QAAY2O,EAAO+Z,EAAU6D,IAEzByC,IACThvB,GAAY2O,GAGT5K,EAAMgrB,IACThrB,GAAY4K,GAIbA,EAAOxY,KAAKo3B,aAAa5e,GAElB,CAAE5K,IAAKA,EAAK/D,IAAKA,EAAK2O,KAAMA,EACpC,CAQO,cAAA9L,CAAepH,EAAkBy0B,GACvC,MAAM1E,EAAer1B,KAAKkD,IAAI,sBAAuBlD,KAAKkD,IAAI,iBACxDoyB,EAAYt1B,KAAKu1B,qBACjByE,EAAgBh6B,KAAKkD,IAAI,wBAAyB,GAClD+2B,EAAWj6B,KAAK0F,WAAW,oBAAqB,GAAKs0B,EACrD3qB,EAAQ,QAAYrP,KAAKwuB,gBAAgBlpB,GAAW20B,GAE1D,OAAI5E,EACIC,EAAUrI,OAAO5d,EAAOgmB,GAGxBC,EAAUrI,OAAO5d,OAAOzL,EAAWq2B,EAE5C,CASO,aAAA3W,CAAc/f,EAAkB+B,GACtC,IAGI0J,EACAkrB,EAJApO,EAAkB9rB,KAAK0F,WAAW,QAAW1F,KAAKkD,IAAI,YAAYwC,WAAW,UAC7E2J,EAAQrP,KAAKwuB,gBAAgBlpB,GAYjC,GARA,OAAY/B,EAAOgH,WAAW,CAACK,EAAUjC,KACxC,MAAMpC,EAAOH,KAAKC,IAAIuE,EAAS1H,IAAI4oB,GAAazc,SAClCzL,IAAVoL,GAAuBzI,EAAO2zB,KACjClrB,EAAQrG,EACRuxB,EAAU3zB,E,IAIC,MAATyI,EACH,OAAOzL,EAAOgH,UAAUyE,EAE1B,CAWO,YAAAyhB,CAAarrB,EAAeC,EAAaiX,GAC/C,MAAM1O,EAAM5N,KAAK0F,WAAW,WAAY,GAClCmE,EAAM7J,KAAK0F,WAAW,WAAY,GACV,MAA1B1F,KAAK0F,WAAW,QAA4C,MAA1B1F,KAAK0F,WAAW,QACrD1F,KAAK6F,MAAMT,EAAQwI,IAAQ/D,EAAM+D,IAAOvI,EAAMuI,IAAQ/D,EAAM+D,GAAM0O,EAEpE,CAUU,SAAAmc,CAAU7qB,EAAa/D,EAAa2O,EAAc2hB,EAAiBC,EAAiBC,GAE7F,GADWr6B,KAAKkD,IAAI,gBACV,CACT,IAAI2O,EAAgBzL,KAAKgS,MAAMgiB,EAAUD,GAAWE,EAChDC,EAAel0B,KAAKgS,OAAOvO,EAAM+D,GAAO4K,GAExC2M,EAAYnlB,KAAKkD,IAAI,YAAYiiB,YAErC,GAAI,WAAetT,IAAU,WAAeyoB,GAAe,CAC1D,IAAIC,GAAS,EACTtG,EAAI,EACJ1tB,EAAqB,KAAbsD,EAAM+D,GACd4sB,EAAO5sB,EACP6sB,EAAO5wB,EACP6wB,EAAQliB,EAEZ,KAAiB,GAAV+hB,GAMN,GALAA,EAASv6B,KAAK26B,WAAWH,EAAMC,EAAMC,EAAO7oB,GAC5CoiB,IACIA,EAAI,MACPsG,GAAS,GAELA,EAoBJ3sB,EAAM4sB,EACN3wB,EAAM4wB,EACNjiB,EAAOkiB,MAtBK,CACRzG,EAAI,GAAK7tB,KAAKgS,MAAM6b,EAAI,IAC3BuG,EAAO5sB,EAAMrH,EAAO0tB,EAChBrmB,GAAO,GAAK4sB,EAAO,IACtBA,EAAO,KAIRC,EAAO5wB,EAAMtD,EAAO0tB,EAChBwG,GAAQ,GAAKA,EAAO,IACvBA,EAAO,IAIT,IAAIjE,EAAax2B,KAAKusB,cAAciO,EAAMC,EAAMtV,GAAW,GAC3DqV,EAAOhE,EAAW5oB,IAClB6sB,EAAOjE,EAAW3sB,IAClB6wB,EAAQlE,EAAWhe,I,GAWvB,MAAO,CAAE5K,IAAKA,EAAK/D,IAAKA,EAAK2O,KAAMA,EACpC,CAKU,UAAAmiB,CAAW/sB,EAAa/D,EAAa2O,EAAc3G,GAC5D,IAAIyoB,GAAgBzwB,EAAM+D,GAAO4K,EACjC,IAAK,IAAI7P,EAAI,EAAGA,EAAIkJ,EAAOlJ,IAC1B,GAAI,QAAY2xB,EAAe3xB,EAAG,IAAMkJ,GAASyoB,EAAe3xB,GAAKkJ,EACpE,OAAO,EAGT,OAAO,CACR,CAOO,oBAAAgR,GACN,IAAIhZ,EAAM7J,KAAK0F,WAAW,eAAgB1F,KAAK0F,WAAW,QACtDkI,EAAM5N,KAAK0F,WAAW,eAAgB1F,KAAK0F,WAAW,QAE1D,OAAI,WAAemE,IAAQ,WAAe+D,GAClC5N,KAAK0F,WAAW,OAAQ,IAAMmE,EAAM+D,GAErC,GACR,CAKO,YAAA2N,CAAa1J,GACN,MAATA,IACHA,EAAQ,GAGwC,KAA7C7R,KAAKkD,IAAI,YAAYwC,WAAW,YACnCmM,IAAU,GAGX,IAAIxC,EAAQrP,KAAKwuB,gBAAgBxuB,KAAK0F,WAAW,kBAAmB,IAIpE,OAHA2J,GAASrP,KAAK0F,WAAW,OAAQ,GAAKmM,EACtCxC,EAAQ,aAAiBA,EAAOrP,KAAK0F,WAAW,eAAgB,GAAI1F,KAAK0F,WAAW,eAAgB,IAE7F1F,KAAKmkB,iBAAiBnkB,KAAK0vB,gBAAgBrgB,GACnD,EA1/CA,qC,gDAAkC,cAClC,sC,gDAA0C,IAAKqD,WAAWC,OAAO,CAAC8hB,EAAU7hB,a,sHC9PtE,MAAegoB,UAAyB,IAA/C,c,oBAwBC,kC,gDAAwB,IACxB,kC,gDAAwB,GAgrBzB,CArrBW,aAAAC,CAAcC,EAAsClwB,GAC7D,OAAO5K,KAAK+6B,WAAWnwB,EAAUkwB,EAClC,CAKO,eAAAE,GACNz5B,MAAMy5B,kBAEN,MAAMn3B,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEjB+3B,EAAe,eACfC,EAAY,YAEdr3B,EAAMmJ,OAA0BiuB,KAC9Bj7B,KAAKkD,IAAI,wBACblD,KAAKm7B,YAAcn7B,KAAKo7B,UAItBv3B,EAAMmJ,OAAsBkuB,KAC1Bl7B,KAAKkD,IAAI,qBACblD,KAAKm7B,YAAcn7B,KAAKo7B,UAItBr3B,EAAMiJ,OAA0BiuB,KAC9Bj7B,KAAKkD,IAAI,wBACblD,KAAKq7B,YAAcr7B,KAAKs7B,UAItBv3B,EAAMiJ,OAAsBkuB,KAC1Bl7B,KAAKkD,IAAI,qBACblD,KAAKq7B,YAAcr7B,KAAKs7B,SAG3B,CAGO,gBAAA1vB,GACNrK,MAAMqK,mBAEN,MAAM/H,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEjB4uB,EAAM9xB,KAAKuK,UAAU3D,OACrB8D,EAAatE,KAAKyD,IAAI,EAAG7J,KAAK0K,aAAe,GAC7CC,EAAWvE,KAAKwH,IAAI5N,KAAK2K,WAAa,EAAGmnB,EAAM,GAErD,GAAIjuB,EAAM0qB,QAAUxqB,EAAMwqB,OACzB,IAAK,IAAI5lB,EAAI+B,EAAY/B,GAAKgC,EAAUhC,IAAK,CAC5C,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC9B3I,KAAKu7B,gBAAgB3wB,E,CAGxB,CAEO,eAAAqR,GACN,MAAMxL,EAAQzQ,KAAKyQ,MACfA,IACHzQ,KAAKw7B,IAAM/qB,EAAM3P,cAAcL,SAC/BT,KAAKy7B,IAAMhrB,EAAM3P,cAAcR,SAGhC,MAAMuD,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAEpBw4B,EAAkB17B,KAAK27B,QAAQ1W,SACjCjlB,KAAKiD,QAAQ,SACmB,MAA/By4B,EAAgBx4B,IAAI,SACvBw4B,EAAgBv5B,IAAI,OAAQnC,KAAKkD,IAAI,SAInClD,KAAKiD,QAAQ,WACqB,MAAjCy4B,EAAgBx4B,IAAI,WACvBw4B,EAAgBv5B,IAAI,SAAUnC,KAAKkD,IAAI,WAIzC,IAAI8L,EAAQ,EACR4sB,EAAe,EACfjzB,EAAI,EAER,OAAYkhB,EAAStmB,QAASA,IAC7B,GAAIA,aAAkBq3B,EAAkB,CACvC,MAAMiB,EAAUt4B,EAAOL,IAAI,WAEvB24B,GAAgB,GAALlzB,GACdizB,KAGIC,GAAWt4B,EAAOL,IAAI,cAC1B04B,G,CAIEr4B,IAAWvD,OACdgP,EAAQ4sB,EAAe,GAExBjzB,GAAG,IAGC3I,KAAKkD,IAAI,eACb8L,EAAQ,EACR4sB,EAAe,GAGK,IAAjBA,IACHA,EAAe,EACf5sB,EAAQ,GAGT,MAAM8sB,EAAYj4B,EAAMX,IAAI,YACtB64B,EAAYh4B,EAAMb,IAAI,YAEtBsT,EAAoB,oBACpBC,EAAkB,kBAElBulB,EAAiBF,EAAU54B,IAAIsT,EAAmB,GAClDylB,EAAiBH,EAAU54B,IAAIuT,EAAiB,GAEhDylB,EAAiBH,EAAU74B,IAAIsT,EAAmB,GAClD2lB,EAAiBJ,EAAU74B,IAAIuT,EAAiB,GAQtD,GANAzW,KAAKo8B,aAAeJ,EAAkBhtB,EAAQ4sB,GAAiBK,EAAiBD,GAChFh8B,KAAKq8B,aAAeL,GAAkBhtB,EAAQ,GAAK4sB,GAAgBK,EAAiBD,GAEpFh8B,KAAKs8B,aAAeJ,EAAkBltB,EAAQ4sB,GAAiBO,EAAiBD,GAChFl8B,KAAKu8B,aAAeL,GAAkBltB,EAAQ,GAAK4sB,GAAgBO,EAAiBD,GAEhFr4B,EAAM0qB,QAAUxqB,EAAMwqB,QACzB,GAAIvuB,KAAKw8B,YAAcx8B,KAAK+0B,cAAgB/0B,KAAKy8B,aAAez8B,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,QAAUjD,KAAKgkB,WAAY,CAC9H,MAAM8N,EAAM9xB,KAAKuK,UAAU3D,OAE3B,IAAI8D,EAAatE,KAAKyD,IAAI,EAAG7J,KAAK0K,aAAe,GAC7CC,EAAWvE,KAAKwH,IAAI5N,KAAK2K,WAAa,EAAGmnB,EAAM,GAEnD,IAAK,IAAInpB,EAAI,EAAGA,EAAI+B,EAAY/B,IAC/B3I,KAAK08B,cAAc18B,KAAKuK,UAAU5B,IAAI,GAEvC,IAAImD,EAAW9L,KAAKuK,UAAUG,GAE9B,IAAK,IAAI/B,EAAI+B,EAAY/B,GAAKgC,EAAUhC,IAAK,CAC5C,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC9B,GAA8B,MAA1BiC,EAAS1H,IAAI,WAA+C,MAA1B0H,EAAS1H,IAAI,UAAmB,CAErE,GADA4I,EAAWlB,EACPjC,EAAI,GAAK+B,EAAa,EACzB,IAAK,IAAI4jB,EAAI3lB,EAAI,EAAG2lB,GAAK,EAAGA,IAAK,CAChC,IAAI1jB,EAAW5K,KAAKuK,UAAU+jB,GAC9B,GAA8B,MAA1B1jB,EAAS1H,IAAI,WAA+C,MAA1B0H,EAAS1H,IAAI,UAAmB,CACrE4I,EAAWlB,EACX,K,EAIH,K,CAGA5K,KAAK08B,cAAc9xB,GAAU,E,CAG/B,IAAK,IAAIjC,EAAI+B,EAAY/B,GAAKgC,EAAUhC,IAAK,CAC5C,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC9B3I,KAAK28B,gBAAgB/xB,EAAUkB,GACD,MAA1BlB,EAAS1H,IAAI,WAA+C,MAA1B0H,EAAS1H,IAAI,YAClD4I,EAAWlB,E,CAIb,IAAK,IAAIjC,EAAIgC,EAAW,EAAGhC,EAAImpB,EAAKnpB,IACnC3I,KAAK08B,cAAc18B,KAAKuK,UAAU5B,IAAI,E,OAKxC3I,KAAK48B,UAAW,EAEjB58B,KAAKujB,mBAAmBvjB,KAAKkD,IAAI,oBACjC3B,MAAM0a,iBACP,CAGU,eAAAsf,CAAgB3wB,GACzB,IAAIkc,EAAWlc,EAAS1H,IAAI,YAC5B,IAAK4jB,EAAU,CAEdA,EAAW9mB,KAAK66B,cAAc76B,KAAK27B,QAAS/wB,GAC5CA,EAASzI,IAAI,WAAY2kB,GACzBA,EAAS3b,aAAaP,GAEtB,MAAMiyB,EAAiBjyB,EAAS1H,IAAI,kBACpC,GAAI25B,EAAgB,CACnB,MAAMC,EAAkBD,EAAe35B,IAAI,mBAC3C,GAAI45B,EAAiB,CACpB,MAAMC,EAAKD,EAAgB76B,OAAOC,OAAO,WACzC,OAAY,KAAiB86B,IAC5B,MAAM3tB,EAAQyX,EAAU5jB,IAAI85B,EAASh9B,KAAKkD,IAAI85B,IAC9CF,EAAgB36B,IAAI66B,EAAS3tB,GAC7B0tB,EAAG56B,IAAI66B,EAAS3tB,EAAM,G,EAKzB,IAAI4tB,EAA6CryB,EAAS1H,IAAI,iBAC1D+5B,GACH,OAAYA,GAAgBnW,IAC3BA,EAASpjB,SAAS,IAIpBu5B,EAAgB,GAChBryB,EAASU,OAAO,gBAAiB2xB,GAEjCj9B,KAAKoe,WAAWlZ,MAAMmb,IACrB,MAAM7R,EAAY6R,EAAU7R,UACtB0uB,EAAgBl9B,KAAK66B,cAAcxa,EAAUsb,QAAS/wB,GACxDqyB,GACHA,EAAc98B,KAAK+8B,GAEpBA,EAAczwB,WAAW,OAAQ4T,EAAUsb,SAC3CntB,EAAUtO,SAASC,KAAK+8B,EAAc,G,CAGzC,CAEO,eAAA1Y,CAAgBC,GAStB,OARA,OAAYzkB,KAAKuK,WAAYK,IAC5B,MAAMkc,EAAWlc,EAAS1H,IAAI,YAC1B4jB,IACHA,EAASpjB,UACTkH,EAASzI,IAAI,gBAAYyB,G,IAIpBrC,MAAMijB,gBAAgBC,EAC9B,CAEU,eAAAkY,CAAgB/xB,EAA+CkoB,GACxE,IAAIhM,EAAWlc,EAAS1H,IAAI,YAO5B,MAAMi6B,EAASn9B,KAAKo7B,QACdgC,EAASp9B,KAAKs7B,QAEd+B,EAASzyB,EAAS1H,IAAIi6B,GACtBG,EAAS1yB,EAAS1H,IAAIk6B,GAE5B,GAAc,MAAVC,GAA4B,MAAVC,EAAgB,CACrC,MAAMC,EAAav9B,KAAKm7B,YAClBqC,EAAax9B,KAAKq7B,YAElBziB,EAAY5Y,KAAKkD,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAC5D2V,EAAY7Y,KAAKkD,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAE5Du6B,EAAgBz9B,KAAKkD,IAAI,gBAAiB0H,EAAS1H,IAAI,gBAAiB0V,IACxE8kB,EAAgB19B,KAAKkD,IAAI,gBAAiB0H,EAAS1H,IAAI,gBAAiB2V,IAExEvY,EAAQwmB,EAAS5jB,IAAI,SACrBzC,EAASqmB,EAAS5jB,IAAI,UAEtB24B,EAAU77B,KAAKkD,IAAI,WAEnBW,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAEpBy6B,EAAS95B,EAAMX,IAAI,SACnB06B,EAAO/5B,EAAMX,IAAI,OAEjB26B,EAAS95B,EAAMb,IAAI,SACnB46B,EAAO/5B,EAAMb,IAAI,OAEvB,IAAI66B,EACA7qB,EACA8qB,EACAhsB,EAEAisB,EAAMj+B,KAAKkD,IAAI,MAAO,GACtBg7B,EAAMl+B,KAAKkD,IAAI,MAAO,GAEtBi7B,GAAO,EACPC,GAAO,EAEX,GAAIr6B,EAAMiJ,OAA0B,iBAAmBnJ,EAAMmJ,OAA0B,gBAAiB,CAEvG,IAAI2J,EAAgB3W,KAAKo8B,aAAeqB,EAAgB,GACpD7mB,EAAc5W,KAAKq8B,aAAezjB,EAAY,GAElD,GAAItY,aAAiB,KAAS,CAC7B,IAAI+9B,GAAkBznB,EAAcD,IAAkB,EAAIrW,EAAM+O,OAAS,EACzEsH,GAAiB0nB,EACjBznB,GAAeynB,C,CAShB,GANAN,EAAIl6B,EAAMurB,qBAAqBxkB,EAAU2yB,EAAY5mB,EAAeunB,GACpEhrB,EAAIrP,EAAMurB,qBAAqBxkB,EAAUuyB,EAAQvmB,EAAasnB,GAE9DvnB,EAAgB3W,KAAKs8B,aAAeoB,EAAgB,GACpD9mB,EAAc5W,KAAKu8B,aAAe1jB,EAAY,GAE1CpY,aAAkB,KAAS,CAC9B,IAAI49B,GAAkBznB,EAAcD,IAAkB,EAAIlW,EAAO4O,OAAS,EAC1EsH,GAAiB0nB,EACjBznB,GAAeynB,C,CAGhBL,EAAIj6B,EAAM6rB,qBAAqBhlB,EAAU4yB,EAAY7mB,EAAesnB,GACpEjsB,EAAIjO,EAAM6rB,qBAAqBhlB,EAAUwyB,EAAQxmB,EAAaqnB,GAE9DrzB,EAASU,OAAO,QAAS,CAAEnK,EAAG48B,GAAK7qB,EAAI6qB,GAAK,EAAG38B,EAAG48B,GAAKhsB,EAAIgsB,GAAK,G,MAE5D,GAAIn6B,IAAUgmB,EAAU,CAE5B,IAAIlT,EAAgB3W,KAAKo8B,aAAeqB,EAAgB,GACpD7mB,EAAc5W,KAAKq8B,aAAezjB,EAAY,GAElD,GAAItY,aAAiB,KAAS,CAC7B,IAAI+9B,GAAkBznB,EAAcD,IAAkB,EAAIrW,EAAM+O,OAAS,EACzEsH,GAAiB0nB,EACjBznB,GAAeynB,C,CAOhB,GAJAN,EAAIl6B,EAAMurB,qBAAqBxkB,EAAU2yB,EAAY5mB,EAAeunB,GACpEhrB,EAAIrP,EAAMurB,qBAAqBxkB,EAAUuyB,EAAQvmB,EAAasnB,GAC9DF,EAAIj6B,EAAM6rB,qBAAqBhlB,EAAUwyB,EAAQvkB,EAAWolB,GAExDj+B,KAAKq7B,cAAgBr7B,KAAKs7B,QAC7BtpB,EAAIjO,EAAM6rB,qBAAqBhlB,EAAU4yB,EAAYE,EAAeO,QAGpE,GAAIpC,EAAS,CACZ,IAAIyC,EAAe1zB,EAAS1H,IAAI,gBAE/B8O,EADGssB,EACCv6B,EAAM6rB,qBAAqB0O,EAAclB,EAAQM,EAAgBY,EAAalzB,UAAuBlI,IAAI,QAGzGa,EAAMmzB,c,MAIXllB,EAAIjO,EAAMmzB,eAGZtsB,EAASU,OAAO,QAAS,CAAEnK,EAAG48B,GAAK7qB,EAAI6qB,GAAK,EAAG38B,EAAG48B,IAElDI,GAAO,C,MAEH,GAAIr6B,IAAU8lB,EAAU,CAC5B,IAAIlT,EAAgB3W,KAAKs8B,aAAeoB,EAAgB,GACpD9mB,EAAc5W,KAAKu8B,aAAe1jB,EAAY,GAElD,GAAIpY,aAAkB,KAAS,CAC9B,IAAI49B,GAAkBznB,EAAcD,IAAkB,EAAIlW,EAAO4O,OAAS,EAC1EsH,GAAiB0nB,EACjBznB,GAAeynB,C,CAOhB,GAJAL,EAAIj6B,EAAM6rB,qBAAqBhlB,EAAU4yB,EAAY7mB,EAAesnB,GACpEjsB,EAAIjO,EAAM6rB,qBAAqBhlB,EAAUwyB,EAAQxmB,EAAaqnB,GAC9D/qB,EAAIrP,EAAMurB,qBAAqBxkB,EAAUuyB,EAAQvkB,EAAWslB,GAExDl+B,KAAKm7B,cAAgBn7B,KAAKo7B,QAC7B2C,EAAIl6B,EAAMurB,qBAAqBxkB,EAAU2yB,EAAYE,EAAeS,QAGpE,GAAIrC,EAAS,CACZ,IAAI0C,EAAe3zB,EAAS1H,IAAI,gBAE/B66B,EADGQ,EACC16B,EAAMurB,qBAAqBmP,EAAcpB,EAAQM,EAAgBc,EAAanzB,UAAuBlI,IAAI,QAGzGW,EAAMqzB,c,MAIX6G,EAAIl6B,EAAMqzB,eAIZiH,GAAO,EAEPvzB,EAASU,OAAO,QAAS,CAAEnK,EAAG+R,EAAG9R,EAAG48B,GAAKhsB,EAAIgsB,GAAK,G,CAGnDh+B,KAAKw+B,sBAAsB5zB,EAAUkc,EAAWiX,EAAG7qB,EAAG8qB,EAAGhsB,EAAGmsB,EAAMC,GAE7DL,EAAIJ,GAAUzqB,EAAIyqB,GAAYI,EAAIH,GAAQ1qB,EAAI0qB,GAAUI,EAAIH,GAAU7rB,GAAK6rB,GAAYG,GAAKF,GAAQ9rB,EAAI8rB,GAAS,QAAYC,IAAM,QAAYC,GACnJh+B,KAAK08B,cAAc9xB,GAAU,GAG7B5K,KAAK08B,cAAc9xB,GAAU,GAG9B,IAAIsyB,EAAgBtyB,EAAS1H,IAAI,iBAC7Bg6B,GACH,OAAYA,GAAgBpW,IAC3B9mB,KAAKw+B,sBAAsB5zB,EAAUkc,EAAUiX,EAAG7qB,EAAG8qB,EAAGhsB,EAAGmsB,EAAMC,EAAK,IAIxEp+B,KAAKy+B,qBAAqB7zB,EAAUkoB,E,CAEtC,CAEU,qBAAA0L,CAAsB5zB,EAA+Ckc,EAAoBiX,EAAW7qB,EAAW8qB,EAAWhsB,EAAWmsB,EAAeC,GAC7J,MAAM99B,EAAQwmB,EAAS5jB,IAAI,SACrBzC,EAASqmB,EAAS5jB,IAAI,UACtBw7B,EAAW5X,EAAS5jB,IAAI,YACxBy7B,EAAY7X,EAAS5jB,IAAI,aAEzB07B,EAAM5+B,KAAK6+B,SAASd,EAAGC,GACvBc,EAAM9+B,KAAK6+B,SAAS3rB,EAAGlB,GAEvB+sB,EAAen0B,EAAS1H,IAAI,SAElC,GAAI67B,EAAc,CACjB,MAAMr6B,EAAQ1E,KAAK6+B,SAASE,EAAa59B,EAAG49B,EAAa39B,GACzD29B,EAAa59B,EAAIuD,EAAMvD,EAAInB,KAAKg/B,GAChCD,EAAa39B,EAAIsD,EAAMtD,EAAIpB,KAAKi/B,E,CASjC,GANAlB,EAAIa,EAAIz9B,EACR+R,EAAI4rB,EAAI39B,EAER68B,EAAIY,EAAIx9B,EACR4Q,EAAI8sB,EAAI19B,EAEJ,WAAed,GAAQ,CAC1B,MAAM+9B,GAAmBnrB,EAAI6qB,EAAKz9B,GAAS,EAC3Cy9B,GAAKM,EACLnrB,GAAKmrB,C,CAGN,GAAI,WAAeK,IAAaA,EAAWt4B,KAAKC,IAAI6M,EAAI6qB,GAAI,CAC3D,MAAMM,GAAmBnrB,EAAI6qB,EAAKW,GAAY,EAC9CX,GAAKM,EACLnrB,GAAKmrB,C,CAGN,GAAI,WAAe59B,GAAS,CAC3B,MAAM49B,GAAmBrsB,EAAIgsB,EAAKv9B,GAAU,EAC5Cu9B,GAAKK,EACLrsB,GAAKqsB,C,CAGN,GAAI,WAAeM,IAAcA,EAAYv4B,KAAKC,IAAI2L,EAAIgsB,GAAI,CAC7D,MAAMK,GAAmBrsB,EAAIgsB,EAAKW,GAAa,EAC/CX,GAAKK,EACLrsB,GAAKqsB,C,CAGFr+B,KAAKkD,IAAI,0BACRi7B,IACHjrB,EAAI9M,KAAKwH,IAAIxH,KAAKyD,IAAI,EAAGqJ,GAAIlT,KAAKy7B,KAClCsC,EAAI33B,KAAKwH,IAAIxH,KAAKyD,IAAI,EAAGk0B,GAAI/9B,KAAKy7B,MAG/B2C,IACHJ,EAAI53B,KAAKwH,IAAIxH,KAAKyD,IAAI,EAAGm0B,GAAIh+B,KAAKw7B,KAClCxpB,EAAI5L,KAAKwH,IAAIxH,KAAKyD,IAAI,EAAGmI,GAAIhS,KAAKw7B,OAIpC5wB,EAASU,OAAO,OAAQyyB,GACxBnzB,EAASU,OAAO,QAAS4H,GACzBtI,EAASU,OAAO,MAAO0yB,GACvBpzB,EAASU,OAAO,SAAU0G,GAE1B8U,EAASra,WAAW,QAASyG,EAAI6qB,GACjCjX,EAASra,WAAW,SAAUuF,EAAIgsB,GAClClX,EAAS3kB,IAAI,IAAK47B,GAClBjX,EAAS3kB,IAAI,IAAK6P,GAAKA,EAAIgsB,GAC5B,CAEU,oBAAAkB,GACT39B,MAAM29B,uBACN,OAAYl/B,KAAKutB,YAAa3iB,IAC7B5K,KAAK08B,cAAc9xB,GAAU,EAAM,GAErC,CAEO,oBAAA6zB,CAAqB7zB,EAA+CkoB,GAE1E,MAAMhM,EAAWlc,EAAS1H,IAAI,YAExBi8B,EAAerY,EAAS7kB,OAAOC,OAAO,gBACtCk9B,EAAetY,EAAS7kB,OAAOC,OAAO,gBAEtCm9B,EAAmBvY,EAAS7kB,OAAOC,OAAO,oBAC1Co9B,EAAmBxY,EAAS7kB,OAAOC,OAAO,oBAEhD,GAAIi9B,GAAgBE,GAAoBD,GAAgBE,EAAkB,CACzE,MAAMz7B,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAE1B,IAAI+rB,EACAC,EACAqQ,EAEA1V,IAAahmB,GAASE,EAAMiJ,OAAuB,cACtDiiB,EAAOrkB,EAAS1H,IAAIlD,KAAKq7B,aACzBnM,EAAQtkB,EAAS1H,IAAIlD,KAAKs7B,SAE1BiE,EAAgBzM,EAAiB5vB,IAAIlD,KAAKs7B,UAElCzR,IAAa9lB,GAASF,EAAMmJ,OAAuB,eAC3DiiB,EAAOrkB,EAAS1H,IAAIlD,KAAKm7B,aACzBjM,EAAQtkB,EAAS1H,IAAIlD,KAAKo7B,SAE1BmE,EAAgBzM,EAAiB5vB,IAAIlD,KAAKo7B,UAGvC,WAAenM,IAAS,WAAeC,KACtCA,EAAQD,EACPkQ,GACHA,EAAaK,QAIVJ,GACHA,EAAaI,QAGX,WAAeD,KACdrQ,EAAQqQ,EACPF,GACHA,EAAiBG,QAIdF,GACHA,EAAiBE,S,CAMvB,CAKO,eAAAnhB,CAAgBzT,GACtBrJ,MAAM8c,gBAAgBzT,GACtB,MAAMkc,EAAWlc,EAAS1H,IAAI,YAC1B4jB,IACH9mB,KAAK27B,QAAQlsB,YAAYqX,GACzBA,EAASpjB,WAGV,MAAMw5B,EAAgBtyB,EAAS1H,IAAI,iBAC/Bg6B,GACH,OAAYA,GAAgBpW,IAC3B,MAAM2Y,EAAO3Y,EAASphB,WAAW,QAC7B+5B,GACHA,EAAKhwB,YAAYqX,GAElBA,EAASpjB,SAAS,GAGrB,CASa,YAAA4d,CAAa1W,EAA+C0R,G,uHACxE,MAAMojB,EAAW,CAAC,EAAMpe,aAAY,UAAC1W,EAAU0R,IACzCwK,EAAWlc,EAAS1H,IAAI,YAC1B4jB,GACH4Y,EAASv/B,KAAK2mB,EAAS9kB,KAAKsa,IAG7B,MAAM4gB,EAAgBtyB,EAAS1H,IAAI,iBAC/Bg6B,GACH,OAAYA,GAAgBpW,IAC3B4Y,EAASv/B,KAAK2mB,EAAS9kB,KAAKsa,GAAU,UAIlCqjB,QAAQC,IAAIF,EACnB,G,CAEU,aAAAhD,CAAc9xB,EAA+CuF,GACtE,MAAM2W,EAAWlc,EAAS1H,IAAI,YAC1B4jB,GACHA,EAASra,WAAW,UAAW0D,GAGhC,MAAM+sB,EAAgBtyB,EAAS1H,IAAI,iBAC/Bg6B,GACH,OAAYA,GAAgBpW,IAC3BA,EAASra,WAAW,UAAW0D,EAAQ,IAIzC,MAAM0vB,EAAUj1B,EAASi1B,QACrBA,GACH,OAAYA,GAAUje,IACrBA,EAAOnV,WAAW,UAAW0D,EAAQ,GAGxC,CASa,YAAAqR,CAAa5W,EAA+C0R,G,uHACxE,MAAMojB,EAAW,CAAC,EAAMle,aAAY,UAAC5W,EAAU0R,IACzCwK,EAAWlc,EAAS1H,IAAI,YAC1B4jB,GACH4Y,EAASv/B,KAAK2mB,EAAS1W,KAAKkM,IAG7B,MAAM4gB,EAAgBtyB,EAAS1H,IAAI,iBAC/Bg6B,GACH,OAAYA,GAAgBpW,IAC3B4Y,EAASv/B,KAAK2mB,EAAS1W,KAAKkM,GAAU,UAIlCqjB,QAAQC,IAAIF,EACnB,G,CAKO,kBAAAnc,CAAmB3Y,GACzB,IAAIiyB,EAAiB78B,KAAKkD,IAAI,kBAE9B,GAAIlD,KAAKkD,IAAI,iCACP0H,EAAU,CACd,MAAMqhB,EAAejsB,KAAKuK,UAAUvK,KAAK2K,WAAa,GAClDshB,IACHrhB,EAAWqhB,E,CAKd,GAAI4Q,EAAgB,CAEnB,IAAI/V,EAA0C9mB,KAAK27B,QAAQ1W,SAC3D,GAAIra,EAAU,CACb,IAAIk1B,EAASl1B,EAAS1H,IAAI,YACtB48B,IACHhZ,EAAWgZ,E,CAIb,MAAMhD,EAAkBD,EAAe35B,IAAI,mBAE3C,GAAI45B,IACED,EAAe35B,IAAI,iBAAiBA,IAAI,YAAa,CACzD,MAAM65B,EAAKD,EAAgB76B,OAAOC,OAAO,WACzC,OAAY,KAAiB86B,IAC5B,MAAM3tB,EAAQyX,EAAS5jB,IAAI85B,EAASh9B,KAAKkD,IAAI85B,IAC7CF,EAAgB36B,IAAI66B,EAAS3tB,GAC7B0tB,EAAG56B,IAAI66B,EAAS3tB,EAAM,G,EAM3B,CAEU,iBAAA0wB,CAAkBn1B,GAC3B,GAAuC,UAAnC5K,KAAKkD,IAAI,uBACZ,OAAO3B,MAAMw+B,kBAAkBn1B,GAIhC,OADaA,EAAS1H,IAAI,aAInBlD,IACR,EAjsBA,qC,gDAAkC,qBAClC,sC,gDAA0C,IAAS0S,WAAWC,OAAO,CAACioB,EAAiBhoB,a,qECpCjF,MAAMotB,UAAoB,IAQzB,cAAAh9B,GACNzB,MAAMyB,kBAEFhD,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,WAAajD,KAAKiD,QAAQ,WAAajD,KAAKiD,QAAQ,WAAajD,KAAKiD,QAAQ,aAClMjD,KAAKymB,QAAS,EAEhB,CAEO,KAAAwZ,GACN1+B,MAAM0+B,QAEN,MAAMxmB,EAAUzZ,KAAKmD,SAErBsW,EAAQE,OAAO3Z,KAAKkD,IAAI,QAAS,GAAIlD,KAAKkD,IAAI,QAAS,IACvDuW,EAAQG,OAAO5Z,KAAKkD,IAAI,QAAS,GAAIlD,KAAKkD,IAAI,QAAS,IAEvDuW,EAAQE,OAAO3Z,KAAKkD,IAAI,SAAU,GAAIlD,KAAKkD,IAAI,SAAU,IACzDuW,EAAQG,OAAO5Z,KAAKkD,IAAI,SAAU,GAAIlD,KAAKkD,IAAI,SAAU,GAC1D,EArBA,qC,gDAAkC,gBAClC,sC,gDAA0C,IAAiBwP,WAAWC,OAAO,CAACqtB,EAAYptB,a,qHC5BpF,MAAMstB,UAA0B,IAAvC,c,oBA2BC,sC,gDAAqD,IAAI,IACxD,KAAS9/B,IAAI,CACZa,UAAW,CAAC,gBAEb,IAAM,IAAY+jB,KAAKhlB,KAAKK,MAAO,CAClCY,UAAW,YAAiBjB,KAAK27B,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,cAAe,SAAU,YAChG,CAAClD,KAAK27B,QAAQ1W,cAoInB,CAxJQ,UAAA8V,CAAWnwB,EAA+CkwB,GAChE,MAAMgF,EAAS9/B,KAAKmgC,cAAcjgC,SAASC,KAAK26B,EAAa5V,QAG7D,OAFA4a,EAAO30B,aAAaP,GACpBkwB,EAAa36B,KAAK2/B,GACXA,CACR,CAkBU,eAAAnD,CAAgB/xB,EAA+CkoB,GACxEvxB,MAAMo7B,gBAAgB/xB,EAAUkoB,GAEhC,MAAMjvB,EAAQ7D,KAAKogC,OAAO,SACpBr8B,EAAQ/D,KAAKogC,OAAO,SACpBvW,EAAW7pB,KAAKogC,OAAO,YAE7B,IAGIC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAQAC,EAnBA5C,EAAMj+B,KAAKkD,IAAI,MAAO,GACtBg7B,EAAMl+B,KAAKkD,IAAI,MAAO,GAYtB0V,EAAY5Y,KAAKkD,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAC5D2V,EAAY7Y,KAAKkD,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAE5Du6B,EAAgBz9B,KAAKkD,IAAI,gBAAiB0H,EAAS1H,IAAI,gBAAiB0V,IACxE8kB,EAAgB19B,KAAKkD,IAAI,gBAAiB0H,EAAS1H,IAAI,gBAAiB2V,IAI5E,GAAI9U,IAAU8lB,EAAU,CACvB,IAAIoF,EAAOprB,EAAMurB,qBAAqBxkB,EAAU5K,KAAKm7B,YAAa,EAAG+C,GACjEhP,EAAQrrB,EAAMurB,qBAAqBxkB,EAAU5K,KAAKo7B,QAAS,EAAG8C,GAElEoC,EAAMz8B,EAAMurB,qBAAqBxkB,EAAU5K,KAAK8gC,WAAY,EAAG5C,GAC/DwC,EAAM78B,EAAMurB,qBAAqBxkB,EAAU5K,KAAK+gC,YAAa,EAAG7C,GAEhEuC,EAAMr6B,KAAKyD,IAAIolB,EAAMC,GACrBmR,EAAMj6B,KAAKwH,IAAIqhB,EAAMC,GAErB,IAAIvY,EAAgB3W,KAAKs8B,aAAeoB,EAAgB,GACpD9mB,EAAc5W,KAAKu8B,aAAe1jB,EAAY,GAElD0nB,EAAMx8B,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKs7B,QAAS3kB,GAAiBC,EAAcD,GAAiB,EAAGsnB,GAC5GuC,EAAMD,EACNI,EAAMJ,EACNK,EAAML,EAENM,EAAc,Y,KAEV,CACJ,IAAI5R,EAAOlrB,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKq7B,YAAa,EAAG4C,GACjE/O,EAAQnrB,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKs7B,QAAS,EAAG2C,GAElEuC,EAAMz8B,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKghC,WAAY,EAAG/C,GAC/D2C,EAAM78B,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKihC,YAAa,EAAGhD,GAEhE0C,EAAMv6B,KAAKyD,IAAIolB,EAAMC,GACrBqR,EAAMn6B,KAAKwH,IAAIqhB,EAAMC,GAErB,IAAIvY,EAAgB3W,KAAKo8B,aAAeqB,EAAgB,GACpD7mB,EAAc5W,KAAKq8B,aAAezjB,EAAY,GAElDynB,EAAMx8B,EAAMurB,qBAAqBxkB,EAAU5K,KAAKo7B,QAASzkB,GAAiBC,EAAcD,GAAiB,EAAGunB,GAC5GoC,EAAMD,EACNI,EAAMJ,EACNK,EAAML,EAENQ,EAAc,U,CAGf7gC,KAAKkhC,sBAAsBt2B,EAAUy1B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC9E,CAEU,qBAAAK,CAAsBt2B,EAA+Cy1B,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GACtL,IAAIf,EAASl1B,EAAS1H,IAAI,YAE1B,GAAI48B,EAAQ,CACX,IAAIqB,EAAMnhC,KAAK6+B,SAASwB,EAAKE,GACzBa,EAAMphC,KAAK6+B,SAASyB,EAAKE,GAEzBa,EAAMrhC,KAAK6+B,SAAS4B,EAAKE,GACzBW,EAAMthC,KAAK6+B,SAAS6B,EAAKE,GAEzBz/B,EAAI2+B,EAAO3+B,IACXC,EAAI0+B,EAAO1+B,IAEf0+B,EAAO39B,IAAI,QAASg/B,EAAIhgC,EAAIA,GAC5B2+B,EAAO39B,IAAI,QAASg/B,EAAI//B,EAAIA,GAE5B0+B,EAAO39B,IAAI,QAASi/B,EAAIjgC,EAAIA,GAC5B2+B,EAAO39B,IAAI,QAASi/B,EAAIhgC,EAAIA,GAE5B0+B,EAAO39B,IAAI,SAAUk/B,EAAIlgC,EAAIA,GAC7B2+B,EAAO39B,IAAI,SAAUk/B,EAAIjgC,EAAIA,GAE7B0+B,EAAO39B,IAAI,SAAUm/B,EAAIngC,EAAIA,GAC7B2+B,EAAO39B,IAAI,SAAUm/B,EAAIlgC,EAAIA,GAE7B0+B,EAAO39B,IAAI,cAAe0+B,GAE1B,IAAI3D,EAAgBtyB,EAAS1H,IAAI,iBAC7Bg6B,GACH,OAAYA,GAAgB4C,IAC3BA,EAAO39B,IAAI,QAASg/B,EAAIhgC,EAAIA,GAC5B2+B,EAAO39B,IAAI,QAASg/B,EAAI//B,EAAIA,GAE5B0+B,EAAO39B,IAAI,QAASi/B,EAAIjgC,EAAIA,GAC5B2+B,EAAO39B,IAAI,QAASi/B,EAAIhgC,EAAIA,GAE5B0+B,EAAO39B,IAAI,SAAUk/B,EAAIlgC,EAAIA,GAC7B2+B,EAAO39B,IAAI,SAAUk/B,EAAIjgC,EAAIA,GAE7B0+B,EAAO39B,IAAI,SAAUm/B,EAAIngC,EAAIA,GAC7B2+B,EAAO39B,IAAI,SAAUm/B,EAAIlgC,EAAIA,GAE7B0+B,EAAO39B,IAAI,cAAe0+B,EAAY,G,CAI1C,CAEU,iBAAAviB,CAAkB+B,GAC3B9e,MAAM+c,kBAAkB+B,GACxBA,EAAUsb,QAAU,IAAI,IACvB,KAASv7B,IAAI,CAAC,IACd,IAAM,IAAY4kB,KAAKhlB,KAAKK,MAAO,CAClCY,UAAW,YAAiBof,EAAUsb,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,cAAe,SAAU,YACrG,CAAClD,KAAK27B,QAAQ1W,SAAU5E,EAAUsb,QAAQ1W,YAE/C,EA7JA,qC,gDAAkC,sBAClC,sC,gDAA0C,IAAavS,WAAWC,OAAO,CAACutB,EAAkBttB,a,0GCtBtF,MAAM2uB,UAAqB,IAAlC,c,oBAuBC,sC,gDAA0D,IAAI,IAC7D,KAASnhC,IAAI,CAAC,IACd,IAAM,IAAiB4kB,KAAKhlB,KAAKK,MAAO,CACvCiF,SAAU,WACVrE,UAAW,YAAiBjB,KAAK27B,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,SAAU,YACjF,CAAClD,KAAK27B,QAAQ1W,cAiBnB,CAnCQ,UAAA8V,CAAWnwB,EAA+CkwB,GAChE,MAAMgF,EAAS9/B,KAAKmgC,cAAcjgC,SAASC,KAAK26B,EAAa5V,QAG7D,OAFA4a,EAAO30B,aAAaP,GACpBkwB,EAAa36B,KAAK2/B,GACXA,CACR,CAoBU,iBAAAxhB,CAAkB+B,GAC3B9e,MAAM+c,kBAAkB+B,GACxBA,EAAUsb,QAAU,IAAI,IACvB,KAASv7B,IAAI,CAAC,IACd,IAAM,IAAiB4kB,KAAKhlB,KAAKK,MAAO,CACvCiF,SAAU,WACVrE,UAAW,YAAiBof,EAAUsb,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,SAAU,YACtF,CAAClD,KAAK27B,QAAQ1W,SAAU5E,EAAUsb,QAAQ1W,YAE/C,EAbA,qC,gDAAkC,iBAClC,sC,gDAA0C,IAAiBvS,WAAWC,OAAO,CAAC4uB,EAAa3uB,a,kLCqCrF,MAAM4uB,UAAmB,IAAhC,c,oBAUC,wC,yDAEA,+C,iDAA6B,WAC7B,6C,iDAA2B,WAE3B,4C,yDACA,0C,yDAuCA,sC,gDAAkD,IAAI,IACrD,KAASphC,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBjB,KAAKyhC,QAAQxc,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YACzF,CAAClD,KAAKyhC,QAAQxc,eAoBlB,oC,gDAAgD,IAAI,IACnD,KAAS7kB,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBjB,KAAKyhC,QAAQxc,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,UACzF,CAAClD,KAAK0hC,MAAMzc,eAIhB,4C,yDACA,8C,yDAEA,6C,gDAA0C,CAAC,EAAG,EAAG,EAAG,KAEpD,sC,gDAAoB,IACpB,sC,gDAAoB,GAwkBrB,CAnpBW,SAAA5jB,GACTrB,KAAK2hC,eAAenZ,IAAG,SAASoZ,GAC/B,OAAOA,EAAE,EACV,IAEA5hC,KAAK2hC,eAAe3Z,IAAG,SAAS4Z,GAC/B,OAAOA,EAAE,EACV,IAEA5hC,KAAK2hC,eAAelZ,IAAG,SAASmZ,GAC/B,OAAOA,EAAE,EACV,IAEA5hC,KAAK2hC,eAAe1Z,IAAG,SAAS2Z,GAC/B,OAAOA,EAAE,EACV,IAEArgC,MAAMF,WACP,CAKO,UAAAwgC,CAAWJ,GACjB,MAAMK,EAAS9hC,KAAKmgC,cAAcjgC,SAASC,KAAKshC,EAAQvc,QAExD,OADAuc,EAAQthC,KAAK2hC,GACNA,CACR,CAoBO,QAAAC,CAASL,GACf,MAAM5tB,EAAO9T,KAAKmgC,cAAcjgC,SAASC,KAAKuhC,EAAMxc,QAEpD,OADAwc,EAAMvhC,KAAK2T,GACJA,CACR,CA0BO,eAAAmI,GAENjc,KAAKgiC,qBAAkBp+B,EACvB5D,KAAKiiC,mBAAgBr+B,EAErB,IAAIC,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAErB,GAAIlD,KAAKiD,QAAQ,UAAW,CAC3B,MAAM6+B,EAAS9hC,KAAKkD,IAAI,UACxBlD,KAAKyhC,QAAQxc,SAAS9iB,IAAI,SAAU2/B,GACpC,MAAMI,EAAeliC,KAAKmiC,cACtBD,GACHA,EAAajgC,OAAOC,OAAO,WAAYC,IAAI,SAAU2/B,E,CAGvD,GAAI9hC,KAAKiD,QAAQ,QAAS,CACzB,MAAM6Q,EAAO9T,KAAKkD,IAAI,QACtBlD,KAAK0hC,MAAMzc,SAAS9iB,IAAI,OAAQ2R,GAChC,MAAMsuB,EAAapiC,KAAKqiC,YACpBD,GACHA,EAAWngC,OAAOC,OAAO,WAAYC,IAAI,OAAQ2R,E,CAInD,GAAI9T,KAAKiD,QAAQ,gBAAiB,CACjC,MAAMq/B,EAAetiC,KAAKkD,IAAI,gBAC1Bo/B,IACHtiC,KAAKuiC,iBAAiBC,MAAMF,GAC5BtiC,KAAK2hC,eAAea,MAAMF,G,CAI5B,GAAIz+B,EAAM0qB,QAAUxqB,EAAMwqB,QACzB,GAAIvuB,KAAKw8B,YAAcx8B,KAAK+0B,cAAgB/0B,KAAKy8B,aAAez8B,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,QAAUjD,KAAKgkB,YAAchkB,KAAKiD,QAAQ,YAAcjD,KAAKiD,QAAQ,gBAAiB,CAEzLjD,KAAK0hC,MAAMx8B,MAAM4O,IAChBA,EAAKrH,WAAW,WAAW,EAAM,IAGlCzM,KAAKyhC,QAAQv8B,MAAM4O,IAClBA,EAAKrH,WAAW,WAAW,EAAM,IAGlCzM,KAAKoe,WAAWlZ,MAAMmb,IACrB,IAAIqhB,EAAQrhB,EAAUqhB,MAClBA,GACHA,EAAMx8B,MAAM4O,IACXA,EAAKrH,WAAW,WAAW,EAAM,IAInC,IAAIg1B,EAAUphB,EAAUohB,QACpBA,GACHA,EAAQv8B,MAAM48B,IACbA,EAAOr1B,WAAW,WAAW,EAAM,G,IAKtC,IAAI/B,EAAa1K,KAAK0K,aAElB+3B,EAAsBziC,KAAKyhC,QAAQxc,SAAS/hB,IAAI,iBAChDw/B,EAAoB1iC,KAAK0hC,MAAMzc,SAAS/hB,IAAI,iBAE5Cy/B,GAAsB,EACtBC,GAAoB,EAEpBH,IACHE,GAAsB,GAEnBD,IACHE,GAAoB,GAGrB,IAAK,IAAIj6B,EAAI+B,EAAa,EAAG/B,GAAK,EAAGA,IAAK,CACzC,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC1Bk6B,GAAY,EACZlY,EAAc/f,EAAS+f,YAiB3B,GAhBI8X,GACC9X,EAAY8X,KACfE,GAAsB,GAGpBD,GACC/X,EAAY+X,KACfE,GAAoB,GAItB,OAAY5iC,KAAK8iC,cAAetY,IAC1B,WAAe5f,EAAS1H,IAAIsnB,MAChCqY,GAAY,E,IAGVA,GAAaF,GAAuBC,EAAmB,CAC1Dl4B,EAAa/B,EACb,K,EAKF,IAAImpB,EAAM9xB,KAAKuK,UAAU3D,OACrB+D,EAAW3K,KAAK2K,WAEpB,GAAIA,EAAWmnB,EAAK,CACnBnnB,IACA,IAAK,IAAIhC,EAAIgC,EAAUhC,EAAImpB,EAAKnpB,IAAK,CACpC,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC1Bk6B,GAAY,EAMhB,GALA,OAAY7iC,KAAK8iC,cAAetY,IAC1B,WAAe5f,EAAS1H,IAAIsnB,MAChCqY,GAAY,E,IAGVA,EAAW,CACdl4B,EAAWhC,EAAI,EACf,K,GAaH,GATI+B,EAAa,GAChBA,IAGD1K,KAAK+iC,UAAYp4B,EAEjB3K,KAAKgjC,iBACLhjC,KAAKijC,QAAU,EACfjjC,KAAKkjC,QAAUx4B,EACc,GAAzB1K,KAAKuK,UAAU3D,OAClB5G,KAAKmjC,cAAc,QAInB,KAAOnjC,KAAKkjC,QAAUv4B,EAAW,GAChC3K,KAAKmjC,cAAcnjC,KAAKkjC,SACxBljC,KAAKijC,S,OAMRjjC,KAAK48B,UAAW,EAGjBr7B,MAAM0a,iBACP,CAEU,cAAA+mB,GACThjC,KAAKyhC,QAAQ2B,QACbpjC,KAAK0hC,MAAM0B,OACZ,CAEU,aAAAD,CAAcE,GACvB,IAAI14B,EAAW3K,KAAK+iC,UAChBO,EAAkB34B,EAEtB,MAAM4O,EAAevZ,KAAKkD,IAAI,gBACxBoW,EAAUtZ,KAAKkD,IAAI,WAEnB4Q,EAAO9T,KAAK+hC,SAAS/hC,KAAK0hC,OAE1B6B,EAAevjC,KAAKiiC,cACpBuB,EAAmBxjC,KAAK0hC,MAAMzc,SAChCse,GAAgBA,GAAgBC,IACnC1vB,EAAKmR,SAAWse,GAGjBzvB,EAAKrH,WAAW,WAAW,GAE3B,MAAMq1B,EAAS9hC,KAAK6hC,WAAW7hC,KAAKyhC,SAE9BgC,EAAiBzjC,KAAKgiC,gBACxByB,GAAkBA,GAAkBzjC,KAAKyhC,QAAQxc,WACpD6c,EAAO7c,SAAWwe,GAGnB3B,EAAOr1B,WAAW,WAAW,GAE7B,IAAI5I,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAEpBg7B,EAAMl+B,KAAKkD,IAAI,MAAO,GACtB+6B,EAAMj+B,KAAKkD,IAAI,MAAO,GAEtBi6B,EAASn9B,KAAKo7B,QACdgC,EAASp9B,KAAKs7B,QAEdiC,EAAav9B,KAAKm7B,YAClBqC,EAAax9B,KAAKq7B,YAEtB,MAAMqI,EAAkB1jC,KAAKkD,IAAI,mBAC3BygC,EAAkB3jC,KAAKkD,IAAI,mBAE5BwgC,IACJnG,EAAav9B,KAAKo7B,SAGduI,IACJnG,EAAax9B,KAAKs7B,SAGnB,MAAMO,EAAU77B,KAAKkD,IAAI,WAEnB0gC,EAAW//B,EAAMqzB,eACjB2M,EAAW9/B,EAAMmzB,eAEvB,IAAI4M,EAEHA,EADGja,IAAa9lB,EACJ/D,KAAKs7B,QAGLt7B,KAAKo7B,QAGlB,MAAM2I,EAAwC,GAC9C,IAAIC,EAA+B,GACnCD,EAAS5jC,KAAK6jC,GAEd,MAAMvB,EAAsBziC,KAAKyhC,QAAQxc,SAAS/hB,IAAI,iBAChDw/B,EAAoB1iC,KAAK0hC,MAAMzc,SAAS/hB,IAAI,iBAElD,IAAI0V,EAAY5Y,KAAKkD,IAAI,YAAa,IAClC2V,EAAY7Y,KAAKkD,IAAI,YAAa,IAElCu6B,EAAgBz9B,KAAKkD,IAAI,gBAAiB0V,GAC1C8kB,EAAgB19B,KAAKkD,IAAI,gBAAiB2V,GAE9C,MAAM9N,EAAc/K,KAAKkD,IAAI,cAAe,GAE5C,IAAIyF,EAEAs7B,EAAcjkC,KAAK0hC,MAAMzc,SAAS/hB,IAAI,WACtClD,KAAKoe,WAAWxX,OAAS,IAC5Bq9B,GAAc,GAGf,IAAIC,GAAU,GACVrI,GAAW6H,GAAmBC,KACjCO,GAAU,GAGX,MAAMC,EAAI,CACTH,SAAQD,WAAUlI,UAASqI,UAASN,WAAUC,WAAUI,cAAa9G,SAAQC,SAAQG,aAAYC,aAAYU,MAAKD,MAAKpU,WAAUhmB,QAAOE,QAAO6U,YAAWC,YAAW4kB,gBAAeC,gBAAe3yB,eAIpM,IAAIq5B,EAAsBpkC,KAAKgiC,gBAC3BqC,EAAoBrkC,KAAKiiC,cAE7B,IAAKt5B,EAAI06B,EAAe16B,EAAI26B,EAAiB36B,IAAK,CACjD3I,KAAKkjC,QAAUv6B,EACf,MAAMiC,EAAW5K,KAAKutB,WAAW5kB,GAEjC,IAAI00B,EAASzyB,EAAS1H,IAAIi6B,GACtBG,EAAS1yB,EAAS1H,IAAIk6B,GAa1B,GAXc,MAAVC,GAA4B,MAAVC,EAChBhkB,IACJ0qB,EAAS,GACTD,EAAS5jC,KAAK6jC,GACdG,EAAEH,OAASA,GAIZhkC,KAAKskC,WAAW15B,EAAUu5B,GAGvB1B,EAAqB,CACxB,IAAIgB,EAAkB74B,EAAS+f,YAAoB8X,GACnD,GAAIgB,EAAgB,CAMnB,GALMA,aAA0B,OAC/BA,EAAiB,KAASrjC,IAAIqjC,IAG/BzjC,KAAKgiC,gBAAkByB,EACnB96B,EAAI06B,EAAe,CACtBC,EAAkB36B,EAClB,K,CAGAy7B,EAAsBX,EACtB3B,EAAO7c,SAAWwe,C,EAKrB,GAAIf,EAAmB,CACtB,IAAIa,EAAgB34B,EAAS+f,YAAoB+X,GACjD,GAAIa,EAAc,CAMjB,GALMA,aAAwB,OAC7BA,EAAe,KAASnjC,IAAImjC,IAG7BvjC,KAAKiiC,cAAgBsB,EACjB56B,EAAI06B,EAAe,CACtBC,EAAkB36B,EAClB,K,CAGA07B,EAAoBd,EACpBzvB,EAAKmR,SAAWse,C,EAKnB,IAAKjqB,EAAS,CACb,IAAIgX,EAAWtwB,KAAKuK,UAAU5B,EAAI,GAC9B2nB,GACCzG,EAASzF,UAAUxZ,EAAU0lB,EAAU/W,EAAcuqB,KACxDE,EAAS,GACTD,EAAS5jC,KAAK6jC,GACdG,EAAEH,OAASA,E,EAMflwB,EAAKxI,OAAO,WAAY,CAAC+3B,EAAe16B,IACxCm5B,EAAOx2B,OAAO,WAAY,CAAC+3B,EAAe16B,IAEtCA,IAAMgC,GACT3K,KAAKukC,SAASP,EAAQD,EAAS,GAAG,IAG/BjC,GACH9hC,KAAKwkC,YAAY1C,EAAQiC,GAGtBjwB,GACH9T,KAAKykC,UAAU3wB,EAAMiwB,GAGtB/jC,KAAKoe,WAAWlZ,MAAMmb,IACrB,MAAM7R,EAAY6R,EAAU7R,UACtBkzB,EAAQrhB,EAAUqhB,MAClB5tB,EAAO9T,KAAK+hC,SAASL,GAEvBlzB,GACHA,EAAUtO,SAASC,KAAK2T,GAGzBA,EAAKrH,WAAW,WAAW,GAC3BzM,KAAKykC,UAAU3wB,EAAMiwB,GAErB,MAAMtC,EAAUphB,EAAUohB,QACpBK,EAAS9hC,KAAK6hC,WAAWJ,GAC3BjzB,GACHA,EAAUtO,SAASC,KAAK2hC,GAGrBsC,GAAuBA,GAAuBpkC,KAAKyhC,QAAQxc,WAC9D6c,EAAO7c,SAAWmf,GAGfC,GAAqBA,GAAqBrkC,KAAK0hC,MAAMzc,WACxDnR,EAAKmR,SAAWof,GAGjBvC,EAAOr1B,WAAW,WAAW,GAC7BzM,KAAKwkC,YAAY1C,EAAQiC,GAEzBjwB,EAAKxI,OAAO,WAAY,CAAC+3B,EAAe16B,IACxCm5B,EAAOx2B,OAAO,WAAY,CAAC+3B,EAAe16B,GAAG,GAE/C,CAEU,UAAA27B,CAAW15B,EAA+Cu5B,GACnE,IAAIH,EAASG,EAAEH,OAEXU,EAAgB95B,EAAS1H,IAAI,YAAaihC,EAAEvrB,WAC5C+rB,EAAgB/5B,EAAS1H,IAAI,YAAaihC,EAAEtrB,WAE5C+rB,EAAOT,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAEhH,OAAQuH,EAAeP,EAAEjG,KACzE2G,EAAOV,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE/G,OAAQuH,EAAeR,EAAElG,KAE7E,GAAIj+B,KAAK8kC,eAAeF,GAAO,CAE9B,MAAMG,EAAS/kC,KAAK6+B,SAAS+F,EAAMC,GAC7BngC,EAAQ,CAACqgC,EAAO5jC,EAAG4jC,EAAO3jC,GAOhC,GALA2jC,EAAO5jC,GAAKnB,KAAKg/B,GACjB+F,EAAO3jC,GAAKpB,KAAKi/B,GAEjBr0B,EAASzI,IAAI,QAAS4iC,GAElBZ,EAAEF,YAAa,CAClB,IAAIe,EAAgBJ,EAChBK,EAAgBJ,EASpB,GAPIV,EAAEta,WAAasa,EAAEtgC,MACpBohC,EAAQd,EAAEN,SAEFM,EAAEta,WAAasa,EAAEpgC,QACzBihC,EAAQb,EAAEP,UAGPO,EAAED,QAAS,CACd,IAAI7G,EAASzyB,EAAS1H,IAAIihC,EAAE5G,YACxBD,EAAS1yB,EAAS1H,IAAIihC,EAAE3G,YAE5B,GAAc,MAAVH,GAA4B,MAAVC,EAAgB,CACrC,IAAIoH,EAAgB95B,EAAS1H,IAAI,gBAAiBihC,EAAE1G,eAChDkH,EAAgB/5B,EAAS1H,IAAI,gBAAiBihC,EAAEzG,eAEpD,GAAIyG,EAAEtI,QAAS,CACd,IAAI0C,EAAe3zB,EAAS1H,IAAI,gBAC5Bo7B,EAAe1zB,EAAS1H,IAAI,gBAE5Bq7B,GACHyG,EAAQb,EAAEtgC,MAAMurB,qBAAqBmP,EAAc4F,EAAEhH,OAAQuH,EAAgBnG,EAAanzB,UAAuBlI,IAAI,QACjH,QAAY8hC,KACfA,EAAQb,EAAEP,WAKVoB,EADGb,EAAEpgC,QAAUogC,EAAEta,SACTsa,EAAEP,SAGFO,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYmH,EAAeP,EAAEjG,KAI5EI,GACH2G,EAAQd,EAAEpgC,MAAM6rB,qBAAqB0O,EAAc6F,EAAE/G,OAAQuH,EAAgBrG,EAAalzB,UAAuBlI,IAAI,QACjH,QAAY+hC,KACfA,EAAQd,EAAEN,WAKVoB,EADGd,EAAEtgC,QAAUsgC,EAAEta,SACTsa,EAAEN,SAGFM,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYmH,EAAeR,EAAElG,I,MAKhF+G,EAAQb,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYmH,EAAeP,EAAEjG,KAC9E+G,EAAQd,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYmH,EAAeR,EAAElG,I,EAKjF,IAAIiH,EAAcllC,KAAK6+B,SAASmG,EAAOC,GAEvCvgC,EAAM,GAAKwgC,EAAY/jC,EACvBuD,EAAM,GAAKwgC,EAAY9jC,C,CAGxB,GAAI+iC,EAAEp5B,YAAc,EAAG,CACtB,MAAMo6B,EAAKzgC,EAAM,GACX0gC,EAAK1gC,EAAM,GACX2gC,EAAK3gC,EAAM,GACX4gC,EAAK5gC,EAAM,GAEX6gC,EAAOvlC,KAAKwlC,eAEZC,EAAMF,EAAK,GACXG,EAAMH,EAAK,GACXI,EAAMJ,EAAK,GACXK,EAAML,EAAK,IAEbn/B,KAAK6E,MAAMk6B,EAAKM,EAAKL,EAAKM,GAAOvB,EAAEp5B,aAAgBs6B,GAAMC,GAAMl/B,KAAK6E,MAAMo6B,EAAKM,EAAKL,EAAKM,GAAOzB,EAAEp5B,eACrGi5B,EAAO7jC,KAAKuE,GACZ1E,KAAKwlC,eAAiB9gC,E,MAIvBs/B,EAAO7jC,KAAKuE,E,CAGf,CAGU,QAAA6/B,CAASsB,EAA+BC,GAElD,CAEU,WAAAtB,CAAY1d,EAAoBid,GACrCjd,EAAS5jB,IAAI,aAAe4jB,EAAS5jB,IAAI,gBAC5C4jB,EAAS3kB,IAAI,QAASsX,IACrB,OAAYsqB,GAAWgC,IACtB/lC,KAAKuiC,iBAAiByD,QAAQvsB,GAC9BzZ,KAAKuiC,iBAAiBwD,EAA8B,GACnD,GAGL,CAEU,SAAAtB,CAAU3d,EAAoBid,GACnCjd,EAAS5jB,IAAI,aAAe4jB,EAAS5jB,IAAI,gBAC5C4jB,EAAS3kB,IAAI,QAASsX,IACrB,OAAYsqB,GAAWgC,IACtB/lC,KAAK2hC,eAAeqE,QAAQvsB,GAC5BzZ,KAAK2hC,eAAeoE,EAA8B,GACjD,GAGL,CAEU,iBAAAznB,CAAkB+B,GAC3B9e,MAAM+c,kBAAkB+B,GACxBA,EAAUqhB,MAAQ,IAAI,IACrB,KAASthC,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBof,EAAUqhB,MAAOzc,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,UAC7F,CAAClD,KAAK0hC,MAAMzc,SAAU5E,EAAUqhB,MAAOzc,aAG3C5E,EAAUohB,QAAU,IAAI,IACvB,KAASrhC,IAAI,CAAC,IACd,IAAM,IAAS4kB,KAAKhlB,KAAKK,MAAO,CAC/BY,UAAW,YAAiBof,EAAUohB,QAASxc,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YAC/F,CAAClD,KAAKyhC,QAAQxc,SAAU5E,EAAUohB,QAASxc,YAEhD,CAKO,kBAAAghB,CAAmBlmB,GAEzB,MAAM8c,EAAiB78B,KAAKkD,IAAI,kBAEhC,GAAI25B,EAAgB,CACnB,MAAMqJ,EAASrJ,EAAe35B,IAAI,UAE5B45B,EAAkBD,EAAe35B,IAAI,mBACvC45B,GACHA,EAAgBrwB,WAAW,WAAW,GAGvCy5B,EAAO/jC,IAAI,aAAc,IAAU/B,IAAI8lC,EAAO7lC,MAAO,CAAE2T,YAAa,EAAGF,MAAM,QAAM,MAEnF,MAAMouB,EAAegE,EAAOhmC,SAASC,KAAK,IAAS6kB,KAAKkhB,EAAO7lC,MAAO,CACrEY,UAAW,CAAC,OAAQ,SAAU,SAAU,SAAU,UAAWiZ,aAAa,GACxE,CAACla,KAAKyhC,QAAQxc,YAEjBjlB,KAAKmiC,cAAgBD,EAErB,MAAME,EAAa8D,EAAOhmC,SAASC,KAAK,IAAS6kB,KAAKkhB,EAAO7lC,MAAO,CACnEY,UAAW,CAAC,OAAQ,SAAU,SAAU,SAAU,SAChD,CAACjB,KAAK0hC,MAAMzc,YAEfjlB,KAAKqiC,YAAcD,EAEnB,MAAM+D,EAAgBnmC,KAAKK,MAAM2S,gBAAgB9P,IAAI,YAKrD,GAHAg/B,EAAajgC,OAAOsS,OAAO,WAAY,CAAET,KAAMqyB,EAAerE,OAAQqE,IACtE/D,EAAWngC,OAAOsS,OAAO,WAAY,CAAET,KAAMqyB,EAAerE,OAAQqE,IAEhEnmC,KAAK6/B,QAAQj5B,OAAS,EAAG,CAC5B,MAAMw/B,EAAiBpmC,KAAK6/B,QAAQh5B,SAAS,GAC7C,GAAIu/B,EAAgB,CACnB,MAAMxkB,EAASwkB,EAAeF,EAAO7lC,MAAOL,KAAM,IAAI,IAASA,KAAM,CAAEqmC,QAAQ,GAAQ,CAAC,IACxF,GAAIzkB,EAAQ,CACX,MAAMlI,EAASkI,EAAO1e,IAAI,UACtBwW,aAAkB,KACrBA,EAAOzX,OAAOsS,OAAO,WAAY,CAAET,KAAMqyB,EAAerE,OAAQqE,IAG7DzsB,IACHA,EAAOvX,IAAI,mBAAeyB,GAC1B8V,EAAOvX,IAAI,mBAAeyB,GAE1BsiC,EAAOhmC,SAASC,KAAKuZ,GACrBA,EAAOrG,OAAO,CAAElS,EAAG+kC,EAAO5lC,QAAU,EAAGc,EAAG8kC,EAAOzlC,SAAW,IAE5DylC,EAAOrkC,OAAOC,GAAG,iBAAiB,KACjC4X,EAAOrG,OAAO,CAAElS,EAAG+kC,EAAO5lC,QAAU,EAAGc,EAAG8kC,EAAOzlC,SAAW,GAAI,I,IAOvE,EA7pBA,qC,gDAAkC,eAClC,sC,gDAA0C,IAASiS,WAAWC,OAAO,CAAC6uB,EAAW5uB,a,8JCqtB3E,MAAe0zB,UAAiB,IAAvC,c,oBAUC,sC,yDACA,sC,yDACA,0C,yDACA,0C,yDAEA,yC,yDACA,0C,yDACA,yC,yDACA,0C,yDAEA,yC,iDAAgC,IAChC,0C,iDAA8B,IAE9B,kD,iDAAgC,IAIhC,wC,gDAA4E,CAAC,IAE7E,iD,yDAEA,iC,gDAAuB,IACvB,iC,gDAAuB,IAEvB,uC,gDAA+C,CAAC,IAOhD,4C,gDAA2CtmC,KAAKE,SAASC,KAAK,IAAUC,IAAIJ,KAAKK,MAAO,CAAC,MAOzF,yC,gDAA2D,IAAI,OAE/D,uC,iDAA8B,IAE9B,4C,gDAA2C,KAE3C,+C,gDAA4D,CAAC,IAE7D,6C,gDAAuD,CAAC,IAExD,2C,gDAAiC,IACjC,2C,gDAAiC,IACjC,2C,gDAAiC,IACjC,2C,gDAAiC,IAEjC,2C,iDAAkC,IAElC,2C,gDAAyB,CACxB,SACA,aACA,YACA,gBAGD,2C,gDAAyB,CACxB,SACA,aACA,YACA,gBAGD,4C,yDACA,4C,yDAGA,gD,yDACA,gD,yDAGA,iD,yDACA,iD,yDAEA,6C,gDAA2B,IAAI,IAASL,UAAM4D,EAAW,CAAC,KAE1D,yC,yDAEA,6C,yDACA,6C,yDAEA,sC,yDACA,sC,wDA06CD,CAx6CW,SAAAvC,GACTrB,KAAK4pB,OAAOzpB,KAAK,YAAa,YAAa,gBAAiB,iBAC5DH,KAAKqxB,YAAYlxB,KAAK,SAAU,SAAU,aAAc,aAAc,YAAa,YAAa,aAAc,cAE9GH,KAAKumC,eAAe,MAAO,GAC3BvmC,KAAKumC,eAAe,MAAO,GAE3BvmC,KAAKumC,eAAe,aAAc,iBAClCvmC,KAAKumC,eAAe,aAAc,iBAElCvmC,KAAKumC,eAAe,iBAAkB,qBACtCvmC,KAAKumC,eAAe,iBAAkB,qBAEtCvmC,KAAKumC,eAAe,gBAAiB,oBACrCvmC,KAAKumC,eAAe,gBAAiB,oBAErCvmC,KAAKumC,eAAe,iBAAkB,qBACtCvmC,KAAKumC,eAAe,iBAAkB,qBAEtCvmC,KAAKumC,eAAe,mBAAoB,OACxCvmC,KAAKumC,eAAe,mBAAoB,OAExCvmC,KAAKumC,eAAe,oBAAqB,QACzCvmC,KAAKumC,eAAe,oBAAqB,QAIzChlC,MAAMF,YAENrB,KAAKmC,IAAI,eAAe,GAExBnC,KAAKwB,WAAWrB,KAAKH,KAAKoe,WAAWvc,OAAO4M,OAAOC,IAClD,GAAoB,UAAhBA,EAAO9G,KACV,OAAY8G,EAAOC,WAAY0R,IAC9BrgB,KAAKwmC,iBAAiBnmB,EAAU,SAE3B,GAAoB,SAAhB3R,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,eACxB,GAAoB,aAAhBH,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,eACxB,GAAoB,gBAAhBH,EAAO9G,KACjB5H,KAAKse,kBAAkB5P,EAAOG,eACxB,GAAoB,gBAAhBH,EAAO9G,KACjB5H,KAAKwmC,iBAAiB93B,EAAOQ,cACvB,IAAoB,cAAhBR,EAAO9G,KAGjB,MAAM,IAAIuH,MAAM,6BAFhBnP,KAAKse,kBAAkB5P,EAAOW,M,MAMhCrP,KAAKiC,OAAOsS,OAAO,SAAe,CAAEI,QAAS,EAAGxE,SAAS,IAEzDnQ,KAAKohB,UAAU,cAAc,KAC5BphB,KAAK2B,KAAKE,OAAO2jB,KAAK,cAAc,KACnCxlB,KAAKwjB,mBAAmB,GACvB,IAGHxjB,KAAKohB,UAAU,YAAY,KAC1BphB,KAAK2B,KAAKE,OAAO2jB,KAAK,cAAc,KACnCxlB,KAAKwjB,mBAAmB,GACvB,IAGHxjB,KAAKg7B,iBACN,CAEU,iBAAA1c,CAAkB+B,GAC3B,MAAM7R,EAAY,IAAUpO,IAAIJ,KAAKK,MAAO,CAAC,GAC7CggB,EAAU7R,UAAYA,EACtBxO,KAAKE,SAASC,KAAKqO,GAEnB6R,EAAU9c,OAASvD,KAEnB,MAAMykB,EAAepE,EAAUoE,aAC/BA,EAAanZ,OAAO,WAAW,GAE/B,MAAMnG,EAA2Bsf,EAAarZ,UAC9C,GAAIjG,EAAM,CACTA,EAAKmZ,kBAAkBmG,EAAc,CAAC,QAAS,WAE/C,MAAM7C,EAAS6C,EAAavhB,IAAI,UAChC,GAAI0e,EAAQ,CACX,MAAMlI,EAASkI,EAAO1e,IAAI,UACtBwW,GACHA,EAAOjN,WAAW,WAAW,E,CAG/B,MAAMqK,EAAW2N,EAAavhB,IAAI,YAC9B4T,GACHtI,EAAUrM,IAAI,OAAQ2U,GAEvB3R,EAAKmb,kBAAkBngB,KAAKskB,E,CAE9B,CAEU,gBAAA+hB,CAAiBnmB,GAC1B,MAAMoE,EAAepE,EAAUoE,aACzBtf,EAA2Bsf,EAAarZ,UAC9CjG,EAAKkZ,gBAAgBoG,GAErB,SAActf,EAAKmb,kBAAmBmE,GAEtC,MAAMjW,EAAY6R,EAAU7R,UACxBA,GACHA,EAAU9K,SAEZ,CAEU,aAAA+iC,GACTllC,MAAMklC,gBAENzmC,KAAK+pB,cAAgB,GACrB/pB,KAAK8pB,cAAgB,GACrB9pB,KAAK0mC,kBAAoB,GACzB1mC,KAAK2mC,kBAAoB,GAEzB3mC,KAAK4mC,mBAAqB,GAC1B5mC,KAAK6mC,mBAAqB,GAEtB7mC,KAAK8mC,cACR,OAAY9mC,KAAK8mC,cAAiD3rB,IAEjE,GADcnb,KAAKkD,IAAUiY,EAAM,SACxB,CACVnb,KAAK+pB,cAAc5pB,KAAUgb,GAC7B,IAAIqP,EAAQxqB,KAAKkD,IAAUiY,EAAM,QACjCnb,KAAK4mC,mBAAmBzmC,KAAKqqB,IAEI,GAA7BA,EAAMva,QAAQ,WACjBjQ,KAAK0mC,kBAAkBvmC,KAAKqqB,EAAMuc,MAAM,WAAW,IAGnD/mC,KAAK0mC,kBAAkBvmC,KAAKqqB,E,KAM5BxqB,KAAKgnC,cACR,OAAYhnC,KAAKgnC,cAAiD7rB,IAGjE,GAFcnb,KAAKkD,IAAUiY,EAAM,SAExB,CACVnb,KAAK8pB,cAAc3pB,KAAUgb,GAC7B,IAAIqP,EAAQxqB,KAAKkD,IAAUiY,EAAM,QACjCnb,KAAK6mC,mBAAmB1mC,KAAKqqB,IAEI,GAA7BA,EAAMva,QAAQ,WACjBjQ,KAAK2mC,kBAAkBxmC,KAAKqqB,EAAMuc,MAAM,WAAW,IAGnD/mC,KAAK2mC,kBAAkBxmC,KAAKqqB,E,IAKjC,CAEU,QAAA/X,GACTlR,MAAMkR,WAENzS,KAAKogB,SAAW,CAAC,EACjB,MAAM3P,EAAQzQ,KAAKyQ,MACfA,GACHA,EAAMlN,OAAOkM,YAAYzP,MAG1B,cAAmBA,KAAKkD,IAAI,SAASK,OAAQvD,MAC7C,cAAmBA,KAAKkD,IAAI,SAASK,OAAQvD,KAC9C,CAGU,IAAAs5B,CAAiDne,EAAU9L,GACpE,IAAIR,GAhjCiCiB,EAgjCWT,EA/iCrC,OADAQ,EAgjCQ7P,KAAK0F,WAAWyV,IA9iC5BrL,EAEY,MAATA,EACHD,EAEGC,EAAQD,EACXC,EAGAD,GAXT,IAAaA,EAA0BC,EAijCrC9P,KAAKyM,WAAW0O,EAAKtM,EACtB,CAGU,IAAA0qB,CAAiDpe,EAAU9L,GACpE,IAAIR,GApiCiCiB,EAoiCWT,EAniCrC,OADAQ,EAoiCQ7P,KAAK0F,WAAWyV,IAliC5BrL,EAEY,MAATA,EACHD,EAEGC,EAAQD,EACXC,EAGAD,GAXT,IAAaA,EAA0BC,EAqiCrC9P,KAAKyM,WAAW0O,EAAKtM,EACtB,CAEU,iBAAAo4B,CAAkBr8B,GAE3B,MAAM/G,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAE1B,IAAKW,EAAM0qB,SAAWxqB,EAAMwqB,OAC3B,OAAO,EAER,MAAM2Y,EAAoBlnC,KAAKkD,IAAI,oBAAqB,GACxD,GAAIgkC,EAAoB,EAAG,CAC1B,IAAIx8B,EAAa1K,KAAK0K,aAGlBmH,EAFW7R,KAAK2K,WAEGD,EAEvB,GAAI7G,GAASgmB,GACZ,GAAIhmB,EAAMX,IAAI,YAAYud,aAAe5O,EAAQq1B,EAAoB,EACpE,OAAO,OAGJ,GAAInjC,GAAS8lB,GACb9lB,EAAMb,IAAI,YAAYud,aAAe5O,EAAQq1B,EAAoB,EACpE,OAAO,C,CAKV,OAAyC,MAArCt8B,EAAS1H,IAAIlD,KAAKo7B,UAAgE,MAArCxwB,EAAS1H,IAAIlD,KAAKs7B,QAIpE,CAEU,eAAAN,GACT,MAAMn3B,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjBikC,EAAQtjC,EAAM6B,WAAW,QACzB0hC,EAAW,kBAAuBD,GAElCE,EAAQtjC,EAAM2B,WAAW,QACzB4hC,EAAW,kBAAuBD,GAElCE,EAAU1jC,EAAMX,IAAI,YAAYwC,WAAW,UAC3C8hC,EAAUzjC,EAAMb,IAAI,YAAYwC,WAAW,UAE3CupB,EAAO,OACPwY,EAAM,MACNC,EAAO,OACPt3B,EAAO,OAEW,cAApBvM,EAAM+O,WACT5S,KAAKo7B,QAAUp7B,KAAKkD,IAAUikC,EAAQI,EAAWn3B,GACjDpQ,KAAKm7B,YAAcn7B,KAAKkD,IAAU+rB,EAAOmY,EAAWG,EAAWn3B,GAC/DpQ,KAAK8gC,WAAa9gC,KAAKkD,IAAUukC,EAAML,EAAWG,EAAWn3B,GAC7DpQ,KAAK+gC,YAAc/gC,KAAKkD,IAAUwkC,EAAON,EAAWG,EAAWn3B,KAG/DpQ,KAAKo7B,QAAgB+L,EAAQI,EAC7BvnC,KAAKm7B,YAAoBlM,EAAOmY,EAAWG,EAC3CvnC,KAAK8gC,WAAmB2G,EAAML,EAAWG,EACzCvnC,KAAK+gC,YAAoB2G,EAAON,EAAWG,GAGpB,cAApBxjC,EAAM6O,WACT5S,KAAKs7B,QAAUt7B,KAAKkD,IAAUmkC,EAAQG,EAAWp3B,GACjDpQ,KAAKq7B,YAAcr7B,KAAKkD,IAAU+rB,EAAOqY,EAAWE,EAAWp3B,GAC/DpQ,KAAKghC,WAAahhC,KAAKkD,IAAUukC,EAAMH,EAAWE,EAAWp3B,GAC7DpQ,KAAKihC,YAAcjhC,KAAKkD,IAAUwkC,EAAOJ,EAAWE,EAAWp3B,KAG/DpQ,KAAKs7B,QAAgB+L,EAAQG,EAC7BxnC,KAAKq7B,YAAoBpM,EAAOqY,EAAWE,EAC3CxnC,KAAKghC,WAAmByG,EAAMH,EAAWE,EACzCxnC,KAAKihC,YAAoByG,EAAOJ,EAAWE,EAE7C,CAEU,MAAAG,GACT,MAAM9jC,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YACpB0kC,EAAc5nC,KAAKiC,OAAOC,OAAO,UACjC2lC,EAAyB7nC,KAAKkD,IAAI,0BAExC,GAAI0kC,EAAa,CAChB,IAAIv4B,EAAQ,EACRw4B,IACHx4B,EAAQ,eAGLxL,IAAUgmB,EACb+d,EAAYzlC,IAAI,MAAOkN,IAEftL,IAAU8lB,GAIlB+d,EAAYzlC,IAAI,MAAOkN,GAHvBu4B,EAAYzlC,IAAI,MAAOkN,G,CAO1B,CAGU,kBAAAy4B,GACL9nC,KAAKiD,QAAQ,gBAChBjD,KAAKyC,iBAAiBN,IAAI,cAAenC,KAAKkD,IAAI,eAEpD,CAEO,YAAA6J,GACN,MAAMlJ,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEvBlD,KAAKmC,IAAI,IAAK0B,EAAM1C,IAAM,kBAAuB0C,EAAMX,IAAI,UAAW,GAAIW,EAAMvD,SAAWuD,EAAMuI,OAAQlJ,IAAI,cAAe,IAC5HlD,KAAKmC,IAAI,IAAK4B,EAAM3C,IAAM,kBAAuB2C,EAAMb,IAAI,UAAW,GAAIa,EAAMtD,UAAYsD,EAAMqI,OAAQlJ,IAAI,aAAc,IAE5HlD,KAAKyC,iBAAiBN,IAAI,IAAKnC,KAAKoB,KACpCpB,KAAKyC,iBAAiBN,IAAI,IAAKnC,KAAKmB,IACrC,CAGO,gBAAAyK,GACNrK,MAAMqK,mBAEN5L,KAAKogB,SAAW,CAAC,GAEbpgB,KAAKiD,QAAQ,eAAiBjD,KAAKiD,QAAQ,eAAiBjD,KAAKiD,QAAQ,mBAAqBjD,KAAKiD,QAAQ,mBAAqBjD,KAAKiD,QAAQ,kBAAoBjD,KAAKiD,QAAQ,kBAAoBjD,KAAKiD,QAAQ,mBAAqBjD,KAAKiD,QAAQ,qBACpPjD,KAAKymC,gBACLzmC,KAAKg7B,kBACLh7B,KAAK+0B,cAAe,IAGjB/0B,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,YACzCjD,KAAK+0B,cAAe,GAGrB/0B,KAAKmC,IAAI,QAASnC,KAAKkD,IAAI,SAAS5C,SACpCN,KAAKmC,IAAI,SAAUnC,KAAKkD,IAAI,SAASzC,UAErCT,KAAK8nC,qBAEL,MAAMjkC,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YAG1B,IAAI6kC,EAkBAC,EAhBJ,OAHyBhoC,KAAKkD,IAAI,qBAIjC,IAAK,OACJ6kC,EAAgB/nC,KAAKm7B,YACrB,MACD,IAAK,MACJ4M,EAAgB/nC,KAAK8gC,WACrB,MACD,IAAK,OACJiH,EAAgB/nC,KAAK+gC,YACrB,MACD,QACCgH,EAAgB/nC,KAAKo7B,QAMvB,OAJAp7B,KAAKioC,eAAiBF,EAEG/nC,KAAKkD,IAAI,qBAGjC,IAAK,OACJ8kC,EAAgBhoC,KAAKq7B,YACrB,MACD,IAAK,MACJ2M,EAAgBhoC,KAAKghC,WACrB,MACD,IAAK,OACJgH,EAAgBhoC,KAAKihC,YACrB,MACD,QACC+G,EAAgBhoC,KAAKs7B,QAEvBt7B,KAAKkoC,eAAiBF,EAElBhoC,KAAKiD,QAAQ,aAChBjD,KAAK2nC,SAIN3nC,KAAK+M,eAEL,MAAM8uB,EAAU77B,KAAKkD,IAAI,WAkFzB,GAhFIlD,KAAKiD,QAAQ,aACZ44B,EACC77B,KAAK+0B,eAAiB/0B,KAAKmoC,gBAI9BnoC,KAAKooC,SAINpoC,KAAKwD,YAIHxD,KAAK+0B,eAAiB/0B,KAAKmoC,iBAC9BnoC,KAAKmoC,gBAAiB,EAElBtM,GACH77B,KAAKooC,SAGN,OAAYpoC,KAAKuK,WAAYK,IAC5B,OAAY5K,KAAK0mC,mBAAoBvrB,IACpC,IAAI9L,EAAQzE,EAAS1H,IAASiY,GACjB,MAAT9L,IACCwsB,IACHxsB,GAASrP,KAAKqoC,iBAAiBz9B,EAAUuQ,IAG1Cnb,KAAKs5B,KAAK,OAAQjqB,GAClBrP,KAAKu5B,KAAK,OAAQlqB,G,IAIpB,OAAYrP,KAAK2mC,mBAAoBxrB,IACpC,IAAI9L,EAAQzE,EAAS1H,IAASiY,GACjB,MAAT9L,IACCwsB,IACHxsB,GAASrP,KAAKsoC,iBAAiB19B,EAAUuQ,IAG1Cnb,KAAKs5B,KAAK,OAAQjqB,GAClBrP,KAAKu5B,KAAK,OAAQlqB,G,IAIpBxL,EAAMggB,sBAAsBjZ,EAAU5K,KAAK+pB,eAC3ChmB,EAAM8f,sBAAsBjZ,EAAU5K,KAAK8pB,cAAc,IAG1DjmB,EAAMyuB,oBAAqB,EAC3BvuB,EAAMuuB,oBAAqB,EAEtBtyB,KAAKkD,IAAI,mBACTlD,KAAKw0B,eAAe,SAAWx0B,KAAKw0B,eAAe,UACtD3wB,EAAMC,qBAEH9D,KAAKw0B,eAAe,SAAWx0B,KAAKw0B,eAAe,UACtDzwB,EAAMD,qBAIR9D,KAAKuoC,wBAGAvoC,KAAKkD,IAAI,oBACblD,KAAKwjB,uBAAkB5f,KAIrB5D,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,SACvCjD,KAAKuoC,wBAGDvoC,KAAKopB,eACTvlB,EAAM6gB,iBAAiB1kB,MACvB+D,EAAM2gB,iBAAiB1kB,MACvBA,KAAKopB,cAAe,GAGjBppB,KAAK+0B,cAAgB/0B,KAAKw0B,eAAe,eAAiBx0B,KAAKw0B,eAAe,uBAAyBx0B,KAAKw0B,eAAe,aAAex0B,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,QAAUjD,KAAKy8B,aAAez8B,KAAKgkB,WAAY,CAChO,IAAItZ,EAAa1K,KAAK0K,aAClBC,EAAW3K,KAAK2K,WAChBu8B,EAAoBlnC,KAAKkD,IAAI,oBAAqB,GAUtD,GATIgkC,EAAoB,GAAKrd,IACxBA,EAAS3mB,IAAI,YAAYud,cAAgB9V,EAAWD,GAAcw8B,EACrElnC,KAAKwoC,cAAe,EAGpBxoC,KAAKwoC,cAAe,IAIjBxoC,KAAKyoC,MAAQ/9B,GAAc1K,KAAK0oC,MAAQ/9B,GAAY3K,KAAKiD,QAAQ,QAAUjD,KAAKiD,QAAQ,QAAUjD,KAAKw0B,eAAe,uBAAyBx0B,KAAKy8B,aAAez8B,KAAK+0B,gBAAkB/0B,KAAK2oC,oBAAqB,CACxN3oC,KAAK2oC,qBAAsB,EAE3B,MAAMzK,EAAMl+B,KAAKkD,IAAI,MAAO,GACtB+6B,EAAMj+B,KAAKkD,IAAI,MAAO,GACtB24B,EAAU77B,KAAKkD,IAAI,WAAW,GAC9BkpB,EAAiBpsB,KAAK0F,WAAW,kBAEvC,GAAImkB,IAAahmB,IAAUgmB,EAI1B,GAHA9lB,EAAMmc,mBACNlgB,KAAKuO,cAAc,qBAAiB3K,GACpC5D,KAAKuO,cAAc,qBAAiB3K,GAC/BwoB,EAMJroB,EAAMkc,kCALN,IAAK,IAAItX,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IACtC3I,KAAK4oC,0BAA0B5oC,KAAKuK,UAAU5B,GAAIs1B,EAAKpC,GAO1D,GAAIhS,IAAa9lB,IAAU8lB,EAI1B,GAHAhmB,EAAMqc,mBACNlgB,KAAKuO,cAAc,qBAAiB3K,GACpC5D,KAAKuO,cAAc,qBAAiB3K,GAC/BwoB,EAMJroB,EAAMkc,kCALN,IAAK,IAAItX,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IACtC3I,KAAK6oC,0BAA0B7oC,KAAKuK,UAAU5B,GAAIu1B,EAAKrC,GAQ1D,IAAIhS,IAAahmB,IAAUgmB,IACK,kBAA3B7pB,KAAKkD,IAAI,cAAmC,CAC/C,MAAM4lC,EAAgB9oC,KAAK0F,WAAW,iBACjB,MAAjBojC,IACH9oC,KAAKuO,cAAc,OAAQu6B,GAC3B/kC,EAAMD,qBAEP,MAAMilC,EAAgB/oC,KAAK0F,WAAW,iBACjB,MAAjBqjC,IACH/oC,KAAKuO,cAAc,OAAQw6B,GAC3BhlC,EAAMD,oB,CAIT,IAAI+lB,IAAa9lB,IAAU8lB,IACK,kBAA3B7pB,KAAKkD,IAAI,cAAmC,CAC/C,MAAM8lC,EAAgBhpC,KAAK0F,WAAW,iBACjB,MAAjBsjC,IACHhpC,KAAKuO,cAAc,OAAQy6B,GAC3BjlC,EAAMD,qBAEP,MAAMmlC,EAAgBjpC,KAAK0F,WAAW,iBACjB,MAAjBujC,IACHjpC,KAAKuO,cAAc,OAAQ06B,GAC3BplC,EAAMC,oB,EAKL9D,KAAKw0B,eAAe,kBAAoBx0B,KAAKw0B,eAAe,mBAC/D3wB,EAAMoc,8BAGHjgB,KAAKw0B,eAAe,kBAAoBx0B,KAAKw0B,eAAe,mBAC/DzwB,EAAMkc,4B,EAKV,CAGU,cAAAipB,GACT,GAAIlpC,KAAKoe,WAAWxX,OAAS,EAAG,CAC/B,IAAIuiC,EAAoBnpC,KAAKopC,mBACJ,MAArBD,IACHA,EAAoBnpC,KAAKE,SAASC,KAAK,IAASC,IAAIJ,KAAKK,MAAO,CAAC,IACjEL,KAAKopC,mBAAqBD,EAE1BA,EAAkBhnC,IAAI,QAAQ,CAACsX,EAAS5R,KACvC,MAAMuE,EAASpM,KAAKoM,OACpB,GAAIA,EAAQ,CACX,MAAMpD,EAAIhJ,KAAKK,MAAMmO,UAAUlO,QACzB2I,EAAIjJ,KAAKK,MAAMmO,UAAU/N,SAC/BgZ,EAAQE,QAAQ3Q,GAAIC,GACpBwQ,EAAQG,QAAQ5Q,EAAO,EAAJC,GACnBwQ,EAAQG,OAAW,EAAJ5Q,EAAW,EAAJC,GACtBwQ,EAAQG,OAAW,EAAJ5Q,GAAQC,GACvBwQ,EAAQG,QAAQ5Q,GAAIC,GAGpBjJ,KAAKoe,WAAWlZ,MAAMmb,IACrB,MAAMvM,EAAOuM,EAAUoE,aAAavhB,IAAI,YAExC,GAAIkJ,GACC0H,EAAM,CACT,IAAI0F,EAAO1F,EAAK5Q,IAAI,QAChBsW,GACHA,EAAKC,EAAS5R,E,KAMnB7H,KAAKmgC,cAAch9B,SAASkmC,KAAOF,EAAmBhmC,QAAQ,KAIhEgmC,EAAkB3iB,YAClB2iB,EAAkBl8B,cAAc,O,MAGhCjN,KAAKmgC,cAAch9B,SAASkmC,KAAO,IAErC,CAGO,eAAAptB,GACN1a,MAAM0a,kBAGNjc,KAAKg/B,GAAKh/B,KAAKmB,IACfnB,KAAKi/B,GAAKj/B,KAAKoB,IACfpB,KAAKkpC,gBACN,CAEU,MAAAd,GACT,MAAM33B,EAAQzQ,KAAKyQ,MACnB,GAAIA,EAAO,CACV,MAAM64B,EAAc74B,EAAMlN,OAAO0M,QAAQjQ,MAIzC,GAFAA,KAAKupC,cAAgB,GAEjBD,EAAc,EAAG,CACpB,IAAI/lC,EAEJ,IAAK,IAAIoF,EAAI2gC,EAAc,EAAG3gC,GAAK,IAClCpF,EAASkN,EAAMlN,OAAOsD,SAAS8B,GAC3BpF,EAAOL,IAAI,WAAalD,KAAKkD,IAAI,UAAYK,EAAOL,IAAI,WAAalD,KAAKkD,IAAI,UAAYK,EAAOqP,YAAc5S,KAAK4S,YACvH5S,KAAKupC,cAAcppC,KAAKoD,GACnBA,EAAOL,IAAI,aAJoByF,K,CAUvC3I,KAAKwpC,iB,CAEP,CAEO,QAAAhmC,GAEN,OAAaxD,KAAKypC,kBAAkB,CAACC,EAAMr6B,YAClCA,EAAMs6B,eAAe3pC,KAAK4kB,IAAK,IAGxC5kB,KAAKypC,iBAAmB,CAAC,EACzB,OAAYzpC,KAAKuK,WAAYK,IAC5BA,EAASU,OAAO,oBAAgB1H,GAChCgH,EAASU,OAAO,oBAAgB1H,EAAU,GAE5C,CAEU,eAAA4lC,GAET,MAAM3f,EAAW7pB,KAAKkD,IAAI,YACpBW,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEvB,IAAIsnB,EACAof,EACA/f,IAAahmB,GAChB2mB,EAAQ,SACRof,EAAiB,gBAET/f,IAAa9lB,IACrBymB,EAAQ,SACRof,EAAiB,gBAGlB,IAAI9X,EAAM9xB,KAAKupC,cAAc3iC,OACzBoI,EAAQ,EACZ,MAAM2J,EAAkB3Y,KAAKkD,IAAI,mBAEjClD,KAAKypC,iBAAmB,CAAC,EAEzB,OAAYzpC,KAAKuK,WAAYK,IAC5B,IAAK,IAAId,EAAI,EAAGA,EAAIgoB,EAAKhoB,IAAK,CAC7B,IAAI+/B,EAAgB7pC,KAAKupC,cAAcz/B,GACnCggC,EAAcD,EAAct/B,UAAUyE,GACtCK,EAAQzE,EAAS1H,IAAIsnB,GAEzB,GAAIsf,EAAa,CAChB,IAAIC,EAAaD,EAAY5mC,IAAIsnB,GACjC,GAAI7R,EAAiB,CACpB,IAAI,WAAetJ,GAiBlB,MAhBA,GAAI,WAAe06B,GAAa,CAC/B,GAAI16B,GAAS,GAAK06B,GAAc,EAAG,CAClCn/B,EAASU,OAAOs+B,EAAgBE,GAChC9pC,KAAKypC,iBAAiBI,EAAcjlB,KAAOilB,EAC3CA,EAAcF,eAAe3pC,KAAK4kB,KAAO5kB,KACzC,K,CAED,GAAIqP,EAAQ,GAAK06B,EAAa,EAAG,CAChCn/B,EAASU,OAAOs+B,EAAgBE,GAChC9pC,KAAKypC,iBAAiBI,EAAcjlB,KAAOilB,EAC3CA,EAAcF,eAAe3pC,KAAK4kB,KAAO5kB,KACzC,K,QASH,GAAI,WAAeqP,IAAU,WAAe06B,GAAa,CACxDn/B,EAASU,OAAOs+B,EAAgBE,GAChC9pC,KAAKypC,iBAAiBI,EAAcjlB,KAAOilB,EAC3CA,EAAcF,eAAe3pC,KAAK4kB,KAAO5kB,KACzC,K,GAMJgP,GAAO,GAET,CAEU,yBAAA65B,CAA0Bj+B,EAA+CszB,EAAarC,GAC/F,OAAY77B,KAAK4mC,oBAAqBzrB,IACrC,IAAI9L,EAAQzE,EAAS1H,IAASiY,GACjB,MAAT9L,IACCwsB,IACHxsB,GAASrP,KAAKg3B,wBAAwBpsB,EAAUuQ,IAGjDnb,KAAKs5B,KAAK,gBAAiBjqB,GAC3BrP,KAAKu5B,KAAK,gBAAiBlqB,EAAQ6uB,G,GAGtC,CAEU,yBAAA0K,CAA0Bh+B,EAA+CqzB,EAAapC,GAC/F,OAAY77B,KAAK6mC,oBAAqB1rB,IAErC,IAAI9L,EAAQzE,EAAS1H,IAASiY,GACjB,MAAT9L,IACCwsB,IACHxsB,GAASrP,KAAKi3B,wBAAwBrsB,EAAUuQ,IAGjDnb,KAAKs5B,KAAK,gBAAiBjqB,GAC3BrP,KAAKu5B,KAAK,gBAAiBlqB,EAAQ4uB,G,GAGtC,CAKO,uBAAAhH,CAAwBrsB,EAAuCuQ,GACrE,MAAM2uB,EAAcl/B,EAAS1H,IAAI,gBAEjC,GAAI4mC,EAAa,CAChB,MAAME,EAAkBF,EAAY1+B,UAEpC,OAAO0+B,EAAY5mC,IAAIiY,EAAY,GAAK6uB,EAAgB9mC,IAAI,MAAO,GAAKlD,KAAKi3B,wBAAwB6S,EAAa3uB,E,CAEnH,OAAO,CACR,CAKO,uBAAA6b,CAAwBpsB,EAAuCuQ,GACrE,MAAM2uB,EAAcl/B,EAAS1H,IAAI,gBAEjC,GAAI4mC,EAAa,CAChB,MAAME,EAAkBF,EAAY1+B,UACpC,OAAO0+B,EAAY5mC,IAAIiY,EAAY,GAAK6uB,EAAgB9mC,IAAI,MAAO,GAAKlD,KAAKg3B,wBAAwB8S,EAAa3uB,E,CAEnH,OAAO,CACR,CAKO,gBAAAmtB,CAAiB19B,EAAuCuQ,GAC9D,MAAM2uB,EAAcl/B,EAAS1H,IAAI,gBAEjC,OAAI4mC,EACIA,EAAY5mC,IAAIiY,EAAY,GAAKnb,KAAKsoC,iBAAiBwB,EAAa3uB,GAErE,CACR,CAKO,gBAAAktB,CAAiBz9B,EAAuCuQ,GAC9D,MAAM2uB,EAAcl/B,EAAS1H,IAAI,gBAEjC,OAAI4mC,EACIA,EAAY5mC,IAAIiY,EAAY,GAAKnb,KAAKqoC,iBAAiByB,EAAa3uB,GAErE,CACR,CAKO,kBAAA8qB,CAAmBlmB,GACzB/f,KAAKujB,oBACN,CAEO,cAAArW,GACNlN,KAAKw8B,YAAa,EAClBx8B,KAAKwmB,WACN,CAEO,iBAAAyjB,GACNjqC,KAAKkqC,mBACLlqC,KAAK+0B,cAAe,EACpB/0B,KAAKmoC,gBAAiB,EACtBnoC,KAAKmqC,uBAAwB,EAC7BnqC,KAAKwmB,WACN,CAEO,WAAAzC,GACNxiB,MAAMwiB,cACN/jB,KAAKw8B,YAAa,EAClBx8B,KAAK2oC,qBAAsB,EAC3B3oC,KAAKy8B,aAAc,EACnBz8B,KAAKmoC,gBAAiB,CACvB,CAEO,eAAAiC,CAAgBxoB,GACtB,IAAIlI,EAASkI,EAAO1e,IAAI,UACxB,GAAIwW,EAAQ,CACX,IAAI9O,EAAW8O,EAAO9O,SAElBgO,EAAYgJ,EAAO1e,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAC9D2V,EAAY+I,EAAO1e,IAAI,YAAa0H,EAAS1H,IAAI,YAAa,KAE9DW,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEjByK,EAAY9J,EAAMurB,qBAAqBxkB,EAAU5K,KAAKo7B,QAASxiB,EAAW5Y,KAAKkD,IAAI,MAAO,IAC1F2K,EAAY9J,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKs7B,QAASziB,EAAW7Y,KAAKkD,IAAI,MAAO,IAE1FwB,EAAQ1E,KAAK6+B,SAASlxB,EAAWE,GAEjCgC,EAAOjF,EAAS1H,IAAI,OAAQwB,EAAMvD,GAClC2O,EAAQlF,EAAS1H,IAAI,QAASwB,EAAMvD,GACpCgR,EAAMvH,EAAS1H,IAAI,MAAOwB,EAAMtD,GAChCgR,EAASxH,EAAS1H,IAAI,SAAUwB,EAAMtD,GAEtCD,EAAI,EACJC,EAAI,EAEJ4H,EAAI8G,EAAQD,EACZ5G,EAAImJ,EAASD,EAEjB,GAAInS,KAAKqqC,kBAAkB18B,EAAWE,GAAY,CACjD6L,EAAOjN,WAAW,WAAYmV,EAAOlc,WAAW,WAEhD,IAAI8kB,EAAQ5I,EAAO1e,IAAI,SAEvB,MAAM2mB,EAAW7pB,KAAKkD,IAAI,YACpBW,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEvB,GAAaU,MAAT4mB,EAAoB,CACvB,IAAI8f,EAEAzgB,GAAYhmB,GACF,SAAT2mB,EACH8f,EAAYtqC,KAAKs7B,QAEA,QAAT9Q,EACR8f,EAAYtqC,KAAKq7B,YAEA,QAAT7Q,EACR8f,EAAYtqC,KAAKihC,YAEA,OAATzW,IACR8f,EAAYtqC,KAAKghC,YAEdsJ,IACHz8B,EAAY9J,EAAM6rB,qBAAqBhlB,EAAU0/B,EAAkB,EAAGtqC,KAAKkD,IAAI,MAAO,IAEtFwB,EAAQX,EAAMb,IAAI,YAAYqkB,gBAAgB1Z,GAE9CzM,EAAIsD,EAAMtD,EACVD,EAAI0O,EAAO7G,EAAI4P,KAIH,SAAT4R,EACH8f,EAAYtqC,KAAKo7B,QAEA,QAAT5Q,EACR8f,EAAYtqC,KAAKm7B,YAEA,QAAT3Q,EACR8f,EAAYtqC,KAAK+gC,YAEA,OAATvW,IACR8f,EAAYtqC,KAAK8gC,YAGdwJ,IACH38B,EAAY9J,EAAMurB,qBAAqBxkB,EAAU0/B,EAAkB,EAAGtqC,KAAKkD,IAAI,MAAO,IAEtFwB,EAAQb,EAAMX,IAAI,YAAYqkB,gBAAgB5Z,GAE9CxM,EAAIuD,EAAMvD,EACVC,EAAIgR,EAASnJ,EAAI4P,G,MAKnB1X,EAAI0O,EAAO7G,EAAI4P,EACfxX,EAAIgR,EAASnJ,EAAI4P,EAGlB,MAAMgjB,EAAUja,EAAO1e,IAAI,WAC3B,GAAI24B,EAAS,CACZ,MAAMprB,EAAQzQ,KAAKyQ,MACnB,GAAIoZ,GAAYhmB,EAAO,CACtB,IAAIgkB,EAAiB7nB,KAAKogB,SAASzS,EAAY,IAAME,GACrD,GAAIga,EAAgB,CACnB,IAAI0iB,EAAiB1iB,EAAerV,SAChCA,EAASkH,EAAOoJ,cAChB0nB,EAAKppC,EACTA,EAAImpC,EAAep4B,IAEJ,QAAX0pB,EACHz6B,EAAImpC,EAAen4B,OAASI,EAAOL,IAEhB,QAAX0pB,EACJprB,IACC+5B,EAAK/5B,EAAM3P,cAAcL,SAAW,EACvCW,EAAImpC,EAAen4B,OAASI,EAAOL,IAGnC/Q,GAAKoR,EAAOJ,QAKdhR,GAAKoR,EAAOJ,M,CAGdpS,KAAKogB,SAASzS,EAAY,IAAME,GAAa6L,C,KAEzC,CACJ,IAAImO,EAAiB7nB,KAAKogB,SAASzS,EAAY,IAAME,GACrD,GAAIga,EAAgB,CACnB,IAAI0iB,EAAiB1iB,EAAerV,SAChCA,EAASkH,EAAOoJ,cAChB2nB,EAAKtpC,EACTA,EAAIopC,EAAez6B,MAEJ,QAAX+rB,EACH16B,EAAIopC,EAAe16B,KAAO2C,EAAO1C,MAEd,QAAX+rB,EACJprB,IACCg6B,EAAKh6B,EAAM3P,cAAcR,QAAU,EACtCa,EAAIopC,EAAe16B,KAAO2C,EAAO1C,MAGjC3O,GAAKqR,EAAO3C,MAKd1O,GAAKqR,EAAO3C,I,CAId7P,KAAKogB,SAASzS,EAAY,IAAME,GAAa6L,C,EAI3CA,EAAO1M,OAAO,WACjB0M,EAAOjN,WAAW,WAAYrG,KAAKC,IAAI2C,IACvC0Q,EAAOjN,WAAW,YAAarG,KAAKC,IAAI4C,KAGzCyQ,EAAOrG,OAAO,CAAElS,IAAGC,K,MAGnBsY,EAAOjN,WAAW,WAAW,E,CAGhC,CAEU,iBAAA49B,CAAkBK,EAAoBC,GAC/C,OAAO3qC,KAAKwoC,YACb,CAKO,UAAAlf,CAAWqD,GACjB,GAAI3sB,KAAK2pB,UAAUgD,GAAK,CACvB3sB,KAAKk/B,uBACLl/B,KAAKutB,WAAavtB,KAAK2pB,UAAUgD,GACjC3sB,KAAKiqC,oBACLjqC,KAAKkrB,WAAayB,EAElB,MAAM/kB,EAAO,iBACT5H,KAAK6B,OAAO6F,UAAUE,IACzB5H,KAAK6B,OAAO8F,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQ7H,KAAM2sB,GAAIA,G,CAG9D,CAKO,aAAApD,GACN,OAAavpB,KAAK2pB,WAAW,CAAC+f,EAAMkB,KAC/BA,GAAW5qC,KAAKgqB,gBACnB,OAAY4gB,GAAUhgC,IACrB5K,KAAKqe,gBAAgBzT,EAAS,G,IAIjC5K,KAAK2pB,UAAY,CAAC,EAClB3pB,KAAKutB,WAAavtB,KAAK6qC,aACxB,CAEU,oBAAA3L,GACT,OAAYl/B,KAAKutB,YAAa3iB,IAC7B,IAAIi1B,EAAUj1B,EAASi1B,QACnBA,GACH,OAAYA,GAAUje,IACrB,GAAIA,EAAQ,CACX,IAAIlI,EAASkI,EAAO1e,IAAI,UACpBwW,GACHA,EAAOjN,WAAW,WAAW,E,QAOlCzM,KAAK2oC,qBAAsB,CAC5B,CAQa,IAAAv4B,CAAKkM,G,uGACjBtc,KAAK2nC,SACL,IAAIjI,EAAgC,GACpCA,EAASv/B,KAAK,EAAMiQ,KAAI,UAACkM,GAAUwuB,MAAK,KACvC9qC,KAAK+qC,YAAa,EAClB,IAAIlnC,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YACpBa,IAAU8lB,GACb9lB,EAAMkc,6BAEHpc,IAAUgmB,GACbhmB,EAAMoc,4B,KAGRyf,EAASv/B,KAAKH,KAAKyC,iBAAiB2N,KAAKkM,IACzCojB,EAASv/B,KAAKH,KAAKgrC,oBAAmB,EAAM1uB,UACtCqjB,QAAQC,IAAIF,EACnB,G,CAQa,IAAA19B,CAAKsa,G,uGACjBtc,KAAK2nC,SACL,IAAIjI,EAA2B,GAC/BA,EAASv/B,KAAK,EAAM6B,KAAI,UAACsa,GAAUwuB,MAAK,KACvC9qC,KAAKirC,WAAY,CAAK,KAEvBvL,EAASv/B,KAAKH,KAAKyC,iBAAiBT,KAAKsa,IACzCojB,EAASv/B,KAAKH,KAAKgrC,oBAAmB,EAAO1uB,UACvCqjB,QAAQC,IAAIF,EACnB,G,CASa,YAAAle,CAAa5W,EAA+C0R,G,uHACxE,MAAMojB,EAAW,CAAC,EAAMle,aAAY,UAAC5W,EAAU0R,IAE1C,WAAeA,KACnBA,EAAWtc,KAAKkD,IAAI,yBAA0B,IAG/C,MAAMqZ,EAASvc,KAAKkD,IAAI,wBAExB,OAAYlD,KAAK8iC,cAAe3nB,IAC/BukB,EAASv/B,KAAKyK,EAASwR,QAAQ,CAAEjB,IAAKA,EAAM,UAAkBkB,GAAIzR,EAAS1H,IAAIiY,GAAamB,SAAUA,EAAWC,OAAQA,IAAU2uB,cAAc,UAG5IvL,QAAQC,IAAIF,EACnB,G,CASa,YAAApe,CAAa1W,EAA+C0R,G,uHACxE,MAAMojB,EAAW,CAAC,EAAMpe,aAAY,UAAC1W,EAAU0R,IAEzCsrB,EAAc5nC,KAAKiC,OAAOsS,OAAO,SAAU,CAAC,GAE7C,WAAe+H,KACnBA,EAAWsrB,EAAY1kC,IAAI,yBAA0BlD,KAAKkD,IAAI,yBAA0B,KAGzF,MAAMqZ,EAASqrB,EAAY1kC,IAAI,uBAAwBlD,KAAKkD,IAAI,yBAE1DW,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SACjB2mB,EAAW7pB,KAAKkD,IAAI,YACpB24B,EAAU77B,KAAKkD,IAAI,WAqBzB,GAnBI2mB,IAAahmB,GAAUgmB,GAE1B,OAAY7pB,KAAK8pB,eAAgB3O,IAChC,IAAIvN,EAAM7J,EAAM2B,WAAW,OACvB2S,EAAYtU,EAAMsU,YAElB,WAAezK,IAAQA,EAAMyK,IAChCA,EAAYzK,GAETiuB,IACHxjB,EAAY,GAIA,MADDzN,EAAS1H,IAAIiY,IAExBukB,EAASv/B,KAAKyK,EAASwR,QAAQ,CAAEjB,IAAKA,EAAM,UAAkBkB,GAAIhE,EAAWiE,SAAUA,EAAWC,OAAQA,IAAU2uB,c,IAInHrhB,IAAa9lB,IAAU8lB,EAAU,CAEpC,IAAIjc,EAAM/J,EAAM6B,WAAW,OACvB2S,EAAYxU,EAAMwU,YAClB,WAAezK,IAAQA,EAAMyK,IAChCA,EAAYzK,GAETiuB,IACHxjB,EAAY,GAGb,OAAYrY,KAAK+pB,eAAgB5O,IAEnB,MADDvQ,EAAS1H,IAAIiY,IAExBukB,EAASv/B,KAAKyK,EAASwR,QAAQ,CAAEjB,IAAKA,EAAM,UAAkBkB,GAAIhE,EAAWiE,SAAUA,EAAWC,OAAQA,IAAU2uB,c,UAKjHvL,QAAQC,IAAIF,EACnB,G,CAEO,eAAAyL,GACNnrC,KAAKy8B,aAAc,EACnBz8B,KAAKwmB,YACLxmB,KAAKuoC,uBACN,CAEU,qBAAAA,GACT,MAAM6C,EAAgBprC,KAAK2pC,eACvByB,GAEH,OAAaA,GAAe,CAAC1B,EAAMr6B,KAC7BA,EAAMotB,aACVptB,EAAM87B,iB,GAIV,CAEO,aAAA1oB,GACNlhB,MAAMkhB,gBACFziB,KAAK48B,WACR58B,KAAKkN,iBACLlN,KAAK48B,UAAW,EAElB,CAOO,mBAAAvxB,CAAoBT,GACrB5K,KAAK0F,WAAW,uBACpB1F,KAAKujB,mBAAmB3Y,GACxB5K,KAAKwjB,kBAAkB5Y,IAGxB,MAAMM,EAAUlL,KAAKkD,IAAI,WAEzB,GAAIgI,EACH,IAAKlL,KAAKwK,YAAcxK,KAAKkD,IAAI,YAGhC,GAFAgI,EAAQC,aAAaP,GAEjBA,EAAU,CACb,IAAIgO,EAAY5Y,KAAKkD,IAAI,YAAa,GAClC2V,EAAY7Y,KAAKkD,IAAI,YAAa,GAElCwhC,EAAgB95B,EAAS1H,IAAI,YAAa0V,GAC1C+rB,EAAgB/5B,EAAS1H,IAAI,YAAa2V,GAE9C,MAAMhV,EAAQ7D,KAAKkD,IAAI,SACjBa,EAAQ/D,KAAKkD,IAAI,SAEjBg7B,EAAMl+B,KAAKkD,IAAI,MAAO,GACtB+6B,EAAMj+B,KAAKkD,IAAI,MAAO,GAEtB0hC,EAAO/gC,EAAMurB,qBAAqBxkB,EAAU5K,KAAKioC,eAAiBjoC,KAAKo8B,cAAgBp8B,KAAKq8B,aAAer8B,KAAKo8B,cAAgBsI,EAAexG,GAC/I2G,EAAO9gC,EAAM6rB,qBAAqBhlB,EAAU5K,KAAKkoC,eAAiBloC,KAAKs8B,cAAgBt8B,KAAKu8B,aAAev8B,KAAKs8B,cAAgBqI,EAAe1G,GAE/Iv5B,EAAQ1E,KAAK6+B,SAAS+F,EAAMC,GAElC,IAAIz0B,GAAO,EAOX,GANA,OAAYpQ,KAAK8iC,cAAetY,IACG,MAA9B5f,EAAS1H,IAAIsnB,KAChBpa,GAAO,E,IAILA,EAAM,CACT,MAAMK,EAAQzQ,KAAKyQ,MACfA,GAASA,EAAMJ,OAAO3L,IACzBwG,EAAQ6V,MAAMhM,KAAKs2B,gBACnBngC,EAAQ/I,IAAI,gBAAiBnC,KAAK+/B,kBAAkBn1B,IACpDM,EAAQ/I,IAAI,UAAWnC,KAAKmD,SAASqI,SAAS,CAAErK,EAAGuD,EAAMvD,EAAGC,EAAGsD,EAAMtD,MAGrE8J,EAAQC,kBAAavH,E,MAItBsH,EAAQC,kBAAavH,E,OAKvB5D,KAAKsrC,aAGR,CAEO,WAAAA,GACN,MAAMpgC,EAAUlL,KAAKkD,IAAI,WAIzB,OAHIgI,GACHA,EAAQ/I,IAAI,gBAAiBnC,MAEvBuB,MAAM+pC,aACd,CAEU,iBAAAvL,CAAkBn1B,GAC3B,GAAuC,UAAnC5K,KAAKkD,IAAI,uBAAoC,CAChD,MAAM28B,EAAUj1B,EAASi1B,QACzB,GAAIA,GAAWA,EAAQj5B,OAAS,EAAG,CAClC,MACM8S,EADSmmB,EAAQ,GACD38B,IAAI,UAC1B,GAAIwW,EACH,OAAOA,C,EAIV,OAAO1Z,IACR,CAKO,iBAAAwjB,CAAkB5Y,GACxB,MAAMiyB,EAAiB78B,KAAKkD,IAAI,kBAEhC,GAAI25B,EAAgB,CAEnB,MAAM9b,EAAQ8b,EAAe35B,IAAI,SACjC,GAAI6d,EAAO,CACV,IAAIwqB,EAAM,GACN3gC,GACHmW,EAAM5V,aAAaP,GACnB2gC,EAAMvrC,KAAKkD,IAAI,kBAAmB6d,EAAM7d,IAAI,OAAQlD,KAAKkD,IAAI,OAAQ,QAGrE6d,EAAM5V,aAAanL,KAAKwrC,gBACxBD,EAAMvrC,KAAKkD,IAAI,uBAAwBlD,KAAKkD,IAAI,kBAAmB6d,EAAM7d,IAAI,OAAQlD,KAAKkD,IAAI,OAAQ,QAGvG6d,EAAM5e,IAAI,OAAQopC,E,CAGnB,MAAME,EAAa5O,EAAe35B,IAAI,cACtC,GAAIuoC,EAAY,CACf,IAAIF,EAAM,GACN3gC,GACH6gC,EAAWtgC,aAAaP,GACxB2gC,EAAMvrC,KAAKkD,IAAI,kBAAmBuoC,EAAWvoC,IAAI,OAAQ,OAGzDuoC,EAAWtgC,aAAanL,KAAKwrC,gBAC7BD,EAAMvrC,KAAKkD,IAAI,uBAAwBuoC,EAAWvoC,IAAI,OAAQ,MAG/DuoC,EAAWtpC,IAAI,OAAQopC,E,EAG1B,CAEU,mBAAAG,GACT,IAAI32B,EAAO,OAAS/U,KAAKo7B,QASzB,OARIp7B,KAAKkD,IAAI,SAAS8J,OAAsB,cAC3C+H,GAAQ,iBAETA,GAAQ,UAAY/U,KAAKs7B,QACrBt7B,KAAKkD,IAAI,SAAS8J,OAAsB,cAC3C+H,GAAQ,iBAETA,GAAQ,IACDA,CACR,CAKO,QAAA8pB,CAASlxB,EAAmBE,GAClC,IAAI1M,EAAInB,KAAKkD,IAAI,SAASA,IAAI,YAAYmjB,qBAAqB1Y,GAC3DvM,EAAIpB,KAAKkD,IAAI,SAASA,IAAI,YAAYmjB,qBAAqBxY,GAG3DhE,EAAM,UAeV,OAdIzI,GAAKyI,IACRzI,GAAKyI,GAEFzI,EAAIyI,IACPzI,EAAIyI,GAGD1I,GAAK0I,IACR1I,GAAK0I,GAEF1I,EAAI0I,IACP1I,EAAI0I,GAGE,CAAE1I,EAAGA,EAAGC,EAAGA,EACnB,CAEU,cAAA0jC,CAAe6G,GACxB,OAAO,CACR,CAKO,gBAAA7tB,GACN9d,KAAKsrC,cACLtrC,KAAKwjB,uBAAkB5f,GACvB5D,KAAKujB,wBAAmB3f,EACzB,CAEU,gBAAAsmC,GACT3oC,MAAM2oC,mBACNlqC,KAAKkD,IAAI,SAAS+J,cAAc,SAChCjN,KAAKkD,IAAI,SAAS+J,cAAc,SAChCjN,KAAK4rC,eACN,CAMO,aAAAA,GACN5rC,KAAKyM,WAAW,qBAAiB7I,GACjC5D,KAAKyM,WAAW,qBAAiB7I,GACjC5D,KAAKyM,WAAW,qBAAiB7I,GACjC5D,KAAKyM,WAAW,qBAAiB7I,GAEjC5D,KAAKyM,WAAW,YAAQ7I,GACxB5D,KAAKyM,WAAW,YAAQ7I,GACxB5D,KAAKyM,WAAW,YAAQ7I,GACxB5D,KAAKyM,WAAW,YAAQ7I,EACzB,CASO,eAAA4gB,CAAgBC,GACtB,OAAOzkB,KAAKoe,WAAWje,KAAK,CAC3BskB,aAAcA,GAEhB,CAOA,iBAAWomB,GACV,OAAO7qC,KAAKgqB,cACb,CAKO,iBAAAqC,CAAkBrd,GACxB,MAAMnL,EAAQ7D,KAAKkD,IAAI,SAGvB,GAFiBlD,KAAKkD,IAAI,aAEVW,GAASA,EAAMmJ,OAAsB,YAAa,CACjE,MAAM0c,EAAe7lB,EAAM6lB,eACrBmiB,EAAehoC,EAAM6B,WAAW,eAAgB7B,EAAM6B,WAAW,MAAO,IACxEomC,EAAKpiB,EAAe1pB,KAAKkD,IAAI,YAAa,IAEhD,IAAImM,GAAQ,IAEZ,KAAOA,EAAQw8B,GAAc,CAC5B,MAAMjhC,EAAW5K,KAAKuK,UAAUyE,GAChC,IAAIpE,EAkBH,MAlBa,CACb,MAAMqkB,EAAOrkB,EAASqkB,KAStB,GAPC5f,EADG4f,EACKA,EAAa,OAGbrkB,EAAS1H,IAAI,SAAU,GAEhCmM,GAASy8B,IAELz8B,EAAQw8B,GAIX,MAHA78B,G,GAYJ,OAAOA,CACR,EA1gDA,qC,gDAAkC,aAClC,sC,gDAA0C,IAAO0D,WAAWC,OAAO,CAAC2zB,EAAS1zB,a,kpCCxyBvE,MAAMm5B,UAAyBC,EAAA,EAAtC,c,oBAYC,oC,gDAAiChsC,KAAKE,SAASC,KAAKJ,EAAA,EAAQK,IAAIJ,KAAKK,MAAO,CAC3EY,UAAW,CAAC,SACZiZ,aAAa,EACb+xB,qBAAqB,EACrB5kC,MAAM,EACNC,MAAM,EACNnD,OAAQ,OACRC,OAAQ,YAOT,sC,gDAAoCpE,KAAKE,SAASC,KAAK+rC,EAAA,EAAS9rC,IAAIJ,KAAKK,MAAO,CAC/EY,UAAW,CAAC,WACZiZ,aAAa,MA2Ef,CAxEW,SAAA7Y,GACTrB,KAAKmsC,uBACLnsC,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,YAAa,KAAM,QAASjB,KAAKsa,UAAUumB,cAElH,MAAM3gC,EAAWF,KAAKE,SACtBA,EAASkP,UAAUpP,KAAKolB,OACxBllB,EAASkP,UAAUpP,KAAKosC,WACxBlsC,EAASkP,UAAUpP,KAAKqsC,SAExBrsC,KAAKolB,MAAMjjB,IAAI,UAAW,GAC1BnC,KAAKolB,MAAMnjB,OAAOsS,OAAO,QAAS,CAAEI,QAAS,KAE7C,MAAM7T,EAAgBd,KAAKyQ,MAAM3P,cACjCA,EAAcqB,IAAI,eAAe,GACjCrB,EAAcmhB,OAAO,cACrBnhB,EAAcZ,SAASuP,YAAYzP,KAAKyQ,MAAM7O,eAE9CL,MAAMF,WACP,CAEU,YAAAirC,GACT/qC,MAAM+qC,eAENtsC,KAAKusC,QAAQpqC,IAAI,QAASsX,IACzB,MAAM2yB,EAAYpsC,KAAKosC,UACjBC,EAAUrsC,KAAKqsC,QAErB,IAAIrkB,EAAKokB,EAAUjrC,IACfqnB,EAAK4jB,EAAUhrC,IAEf6mB,EAAKokB,EAAQlrC,IACbsnB,EAAK4jB,EAAQjrC,IAEjB,MAAM6H,EAAIjJ,KAAKS,SACTuI,EAAIhJ,KAAKM,QAEX0nB,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGbQ,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGe,eAA5BxoB,KAAKkD,IAAI,gBACZuW,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOoO,EAAI,GACnBvO,EAAQG,OAAOoO,EAAI/e,GACnBwQ,EAAQG,OAAO,EAAG3Q,GAClBwQ,EAAQG,OAAO,EAAG,GAElBH,EAAQE,OAAOsO,EAAI,GACnBxO,EAAQG,OAAO5Q,EAAG,GAClByQ,EAAQG,OAAO5Q,EAAGC,GAClBwQ,EAAQG,OAAOqO,EAAIhf,GACnBwQ,EAAQG,OAAOqO,EAAI,KAGnBxO,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAG4O,GAClB/O,EAAQG,OAAO5Q,EAAGwf,GAClB/O,EAAQG,OAAO5Q,EAAG,GAClByQ,EAAQG,OAAO,EAAG,GAElBH,EAAQE,OAAO,EAAG8O,GAClBhP,EAAQG,OAAO,EAAG3Q,GAClBwQ,EAAQG,OAAO5Q,EAAGC,GAClBwQ,EAAQG,OAAO5Q,EAAGyf,GAClBhP,EAAQG,OAAO,EAAG6O,G,GAGrB,EAjGA,qC,gDAAkC,qBAClC,sC,gDAA0CujB,EAAA,EAAUt5B,WAAWC,OAAO,CAACo5B,EAAiBn5B,c,wEC+ElF,MAAM45B,UAA6CxuB,EAAA,EAA1D,c,oBASC,yC,gDAA+B,IAE/B,uC,gDAA2E,CAAC,GA0hB7E,CAxhBW,SAAA3c,GACTrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,SACvEjB,KAAK4pB,OAAOzpB,KAAK,YACjBH,KAAKuO,cAAc,OAAQ,YAC3BvO,KAAK4gB,OAAO,YACZrf,MAAMF,WACP,CAEO,gBAAAuK,GACNrK,MAAMqK,mBAEN,MAAMkmB,EAAM9xB,KAAKuK,UAAU3D,OAC3B,IAAI+B,EAAI,EACJ3I,KAAK+0B,eACR/0B,KAAKysC,SAAW,CAAC,EACjB,OAAYzsC,KAAKuK,WAAYK,IAC5BA,EAASU,OAAO,QAAS3C,GACzB3I,KAAKysC,SAAS7hC,EAAS1H,IAAI,aAAyB0H,EACpDjC,GAAG,IAGJ3I,KAAKuO,cAAc,gBAAiBujB,IAGrC9xB,KAAKuO,cAAc,aAAcnI,KAAKyD,IAAIzD,KAAKgS,MAAMpY,KAAKkD,IAAI,QAAS,GAAK4uB,GAAM,IAClF9xB,KAAKuO,cAAc,WAAYnI,KAAKwH,IAAIxH,KAAKgS,MAAMpY,KAAKkD,IAAI,MAAO,GAAK4uB,GAAMA,KAE1E9xB,KAAKgkB,YAAchkB,KAAK+0B,cAAiB/0B,KAAKiD,QAAQ,UAAYjD,KAAKiD,QAAQ,QAAUjD,KAAKw0B,eAAe,aAAex0B,KAAKw0B,eAAe,eAAiBx0B,KAAKw0B,eAAe,UAAYx0B,KAAKw0B,eAAe,YACpNx0B,KAAKuK,UAAU3D,OAAS,IAC3B5G,KAAKmpB,qBACLnpB,KAAK+sB,oBACL/sB,KAAKmgB,oBAGR,CAEU,kBAAAgJ,GACT,OAAYnpB,KAAKuD,QAASA,IACzB,IAAImpC,EAAgB1sC,KAAKuK,UAAUvK,KAAK0K,cAAcxH,IAAI,YACtDypC,EAAc3sC,KAAKuK,UAAUvK,KAAK2K,WAAa,GAAGzH,IAAI,YAEtD2mB,EAAWtmB,EAAOL,IAAI,YACtBW,EAAQN,EAAOL,IAAI,SACnBa,EAAQR,EAAOL,IAAI,SAEvB,GAAIW,aAAiB2oC,GAAgBzoC,aAAiByoC,EACrDjpC,EAAO2J,sBAEH,GAAI2c,IAAa7pB,KAAM,CAC3B,IAAImb,EACAyxB,EACAC,EAAY9oC,EAmBhB,GAlBIF,IAAUgmB,GACTtmB,EAAOL,IAAI,oBACdiY,EAAM,aAEH5X,EAAOL,IAAI,wBACd0pC,EAAU,kBAGH7oC,IAAU8lB,IACdtmB,EAAOL,IAAI,oBACdiY,EAAM,aAEH5X,EAAOL,IAAI,wBACd0pC,EAAU,iBAEXC,EAAYhpC,GAGc,aAAvBgpC,EAAUj6B,YAETuI,GAAOyxB,GAAS,CACnB,IAAIE,EACAC,EAEJ,IAAK,IAAIpkC,EAAI,EAAGmpB,EAAMvuB,EAAOgH,UAAU3D,OAAQ+B,EAAImpB,EAAKnpB,IAAK,CAC5D,IAAIiC,EAAWrH,EAAOgH,UAAU5B,GAChC,GAAIwS,GACCvQ,EAAS1H,IAAIiY,KAAgBuxB,EAAe,CAC/CI,EAAgBliC,EAChB,K,CAGF,GAAIgiC,GACChiC,EAAS1H,IAAI0pC,KAAoBF,EAAe,CACnDI,EAAgBliC,EAChB,K,EAKH,IAAK,IAAIjC,EAAIpF,EAAOgH,UAAU3D,OAAS,EAAG+B,GAAK,EAAGA,IAAK,CACtD,IAAIiC,EAAWrH,EAAOgH,UAAU5B,GAChC,GAAIwS,GACCvQ,EAAS1H,IAAIiY,KAAgBwxB,EAAa,CAC7CI,EAAcniC,EACd,K,CAGF,GAAIgiC,GACChiC,EAAS1H,IAAI0pC,KAAoBD,EAAa,CACjDI,EAAcniC,EACd,K,EAKH,IAAIF,EAAa,EACbC,EAAWpH,EAAOgH,UAAU3D,OAE5BkmC,IACHpiC,EAAanH,EAAOgH,UAAU0F,QAAQ68B,IAGnCC,IACHpiC,EAAWpH,EAAOgH,UAAU0F,QAAQ88B,GAAe,GAGpDxpC,EAAOkJ,WAAW,aAAc/B,GAChCnH,EAAOkJ,WAAW,WAAY9B,GAE9B,IAAIqiC,GAAW,EACf,IAAK,IAAIrkC,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IAAK,CAC3C,MAAMiC,EAAWrH,EAAOgH,UAAU5B,GAgBlC,GAdA,OAAYpF,EAAOqjC,oBAAqBzrB,IAE1B,MADDvQ,EAAS1H,IAASiY,KAE7B6xB,GAAW,E,IAIb,OAAYzpC,EAAOsjC,oBAAqB1rB,IAE1B,MADDvQ,EAAS1H,IAASiY,KAE7B6xB,GAAW,E,IAITA,EACH,K,CAGFzpC,EAAOkJ,WAAW,kBAAmBugC,E,CAGvCzpC,EAAO2J,gB,IAGV,CAGU,iBAAA6f,G,MACT,MAAMxO,EAAWve,KAAKkD,IAAI,YACpB4uB,EAAM9xB,KAAKuK,UAAU3D,OAE3B,IAAI8D,EAAa1K,KAAK0K,aAClBA,EAAa,GAChBA,IAGD,IAAIC,EAAW3K,KAAK2K,WAChBA,EAAWmnB,GACdnnB,IAGD,MAAMyiB,EAAqB7O,EAASrb,IAAI,sBAClCmqB,EAAmB9O,EAASrb,IAAI,mBAAoBkqB,GAE1D,IAAImF,EAAWhU,EAASkC,aAAera,KAAKyD,IAAI0U,EAASrb,IAAI,mBAAqB,GAC9EwvB,EAAYtsB,KAAKyD,IAAI,EAAGzD,KAAKwH,IAAIkkB,EAAK1rB,KAAK4c,MAAMrY,EAAWD,GAAc6nB,KAE9E7nB,EAAatE,KAAKgsB,MAAM1nB,EAAagoB,GAAaA,EAClD1yB,KAAK2yB,WAAaD,EAElB,IAAK,IAAIpE,EAAI,EAAGA,EAAIwD,EAAKxD,IACxBtuB,KAAK6hB,gBAAgB7hB,KAAKuK,UAAU+jB,IAAI,GAGzC,IAAI2e,EAAIjtC,KAAKuK,UAAUG,GAAYxH,IAAI,QAAS,GAEhD,IAAK,IAAIyF,EAAI+B,EAAY/B,EAAIgC,EAAUhC,GAAQ+pB,EAAW,CACzD,IAAI9nB,EAAW5K,KAAKuK,UAAU5B,GAE9B3I,KAAK0f,cAAc9U,EAAU,IAC7B5K,KAAK6hB,gBAAgBjX,GAAU,GAE/B,IAAIiH,EAAQ6gB,EACRrF,IACHxb,EAAQ,GAGT7R,KAAK4f,iBAAiBhV,EAAUqiC,EAAGp7B,GAEnCo7B,G,CAGD,GAAI1uB,EAASrb,IAAI,oBAChB,IAAK,IAAIyF,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IAAK,CAC3C,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC1BA,EAAI+pB,GAAa,IACpB1yB,KAAK0f,cAAc9U,EAAU,CAAC,UAAU,GACxC5K,KAAK6hB,gBAAgBjX,GAAU,GAC/B5K,KAAK4f,iBAAiBhV,EAAU,EAAG,GAE9BwiB,GACiB,QAArB,EAAAxiB,EAAS1H,IAAI,gBAAQ,SAAEuJ,WAAW,WAAW,G,CAMjDzM,KAAK4iB,cACN,CAGO,gBAAAhD,CAAiBhV,EAA+CsiC,EAAoBr7B,GAC1F,IAAI0M,EAAWve,KAAKkD,IAAI,YAEpBiqC,EAAmBviC,EAAS1H,IAAI,mBAAoB,GACpDkqC,EAAsBxiC,EAAS1H,IAAI,sBAAuB,GAE1D8L,EAA4BpE,EAAS1H,IAAI,SAExC,WAAe8L,KACnBA,EAAQhP,KAAKqtC,gBAAgBziC,EAAS1H,IAAI,cAG3C,IAGIyH,EAHArF,EAAWtF,KAAKstC,gBAAgBt+B,EAAOm+B,GAEvCR,EAAc/hC,EAAS1H,IAAI,eAE3BypC,GACHhiC,EAAW3K,KAAKqtC,gBAAgBV,GAC3B,WAAehiC,KACnBA,EAAWqE,IAIZrE,EAAWqE,EAGZ,IAEIu+B,EACAlX,EAHA5O,EAAcznB,KAAKstC,gBAAgB3iC,EAAUyiC,GAMhDG,EADG3iC,EAAS1H,IAAI,WACDyH,EAGAqE,EAAQhP,KAAK2yB,WAAa,EAG1C0D,EAAkBr2B,KAAKstC,gBAAgBC,EAAcH,GAErD7uB,EAAS2E,YAAYtY,EAAS1H,IAAI,SAAUoC,EAAUmiB,EAAa5V,GACnE0M,EAASmJ,WAAW9c,EAAS1H,IAAI,QAASoC,EAAUmiB,GACpDlJ,EAASiJ,WAAW5c,EAAS1H,IAAI,QAASoC,EAAUmiB,EAAa5V,GACjE0M,EAASwJ,WAAWnd,EAAS1H,IAAI,YAAaoC,EAAU+wB,GAExDr2B,KAAKuiB,eAAe3X,GACpB2T,EAASoJ,aAAa/c,EAAS1H,IAAI,UAAWoC,EAAUmiB,GAExD,MAAM5Q,EAAW7W,KAAKkD,IAAI,YACtB2T,GACHA,EAASjM,EAAUsiC,EAErB,CAEO,UAAAxiC,GACN,IAAIonB,EAAM9xB,KAAKuK,UAAU3D,OACzB,OAAOR,KAAKwH,IAAIxH,KAAKyD,IAAI7J,KAAK0F,WAAW,aAAc,GAAI,GAAIosB,EAAM,EACtE,CAEO,QAAAnnB,GACN,IAAImnB,EAAM9xB,KAAKuK,UAAU3D,OACzB,OAAOR,KAAKyD,IAAI,EAAGzD,KAAKwH,IAAI5N,KAAK0F,WAAW,WAAYosB,GAAMA,GAC/D,CAKO,SAAAzZ,GAEP,CAKO,YAAA6e,GACN,OAAO,CACR,CAQO,IAAAL,CAAKxnB,GACX,IAAIoV,EAAezkB,KAAKysC,SAASp9B,GACjC,OAAIoV,EACIzkB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAKstC,gBAAgB7oB,EAAavhB,IAAI,QAAS,KAE7F6sB,GACR,CAQO,IAAA+G,CAAKznB,GACX,IAAIoV,EAAezkB,KAAKysC,SAASp9B,GACjC,OAAIoV,EACIzkB,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAKstC,gBAAgB7oB,EAAavhB,IAAI,QAAS,KAE7F6sB,GACR,CAKO,oBAAAX,CAAqBxkB,EAAuC4f,EAAe6E,EAAsBme,GACvG,MAAMC,EAAW7iC,EAAS1H,IAAIsnB,GACxB/F,EAAezkB,KAAKysC,SAASgB,GAEnC,OAAIhpB,EACIzkB,KAAKstC,gBAAgB7oB,EAAavhB,IAAI,QAAS,GAAImsB,GAEpDU,GACR,CAKO,sBAAAJ,CAAuB/kB,EAAuC4f,EAAe6E,EAAsBme,GACzG,OAAOxtC,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAKovB,qBAAqBxkB,EAAU4f,EAAO6E,EAAcme,GAC9G,CAKO,oBAAA5d,CAAqBhlB,EAAuC4f,EAAe6E,EAAsBme,GACvG,MAAMC,EAAW7iC,EAAS1H,IAAIsnB,GACxB/F,EAAezkB,KAAKysC,SAASgB,GACnC,OAAIhpB,EACIzkB,KAAKstC,gBAAgB7oB,EAAavhB,IAAI,QAAS,GAAImsB,GAEpDU,GACR,CAKO,sBAAAF,CAAuBjlB,EAAuC4f,EAAe6E,EAAsBme,GACzG,OAAOxtC,KAAKsa,UAAUiE,SAAS8H,qBAAqBrmB,KAAK4vB,qBAAqBhlB,EAAU4f,EAAO6E,EAAcme,GAC9G,CAaO,eAAAF,CAAgBt+B,EAAemH,GAChC,WAAeA,KACnBA,EAAW,IAGZ,IAAI2b,EAAM9xB,KAAKuK,UAAU3D,OAErB+P,EAAgB3W,KAAKkD,IAAI,gBAAiB,GAG9C4uB,GAAOnb,EACPmb,GAAQ,EAHU9xB,KAAKkD,IAAI,cAAe,GAK1C,IAAIoC,GAAY0J,EAAQmH,EAAWQ,GAAiBmb,EAEhDlnB,EAAW5K,KAAKuK,UAAUyE,GAK9B,OAJIpE,IACHtF,GAAYsF,EAAS1H,IAAI,gBAAiB,IAGpCoC,CACR,CAQO,eAAA+nC,CAAgBI,GACtB,IAAI7iC,EAAW5K,KAAKysC,SAASgB,GAC7B,OAAI7iC,EACIA,EAAS1H,IAAI,SAEd6sB,GACR,CAKO,kBAAA2d,CAAmB9iC,GACzB,OAAO5K,KAAKstC,gBAAgB1iC,EAAS1H,IAAI,SAC1C,CAKO,iBAAAugB,CAAkBne,EAAkB6Q,GAE1C,OADA7Q,IAAa,GAAM6Q,GAAYnW,KAAKuK,UAAU3D,OACvC5G,KAAKstC,gBAAgBttC,KAAK2tC,oBAAoBroC,GAAW6Q,EACjE,CASO,mBAAAw3B,CAAoBroC,GAC1B,IAAIwsB,EAAM9xB,KAAKuK,UAAU3D,OACzB,OAAO,aAAiBR,KAAKgsB,MAAM9sB,EAAWwsB,GAAM,EAAGA,EAAM,EAC9D,CAQO,cAAAplB,CAAepH,EAAkBy0B,GAEvC,MAAMnvB,EAAW5K,KAAKuK,UAAUvK,KAAK2tC,oBAAoBroC,IACzD,GAAIsF,EAAU,CACb,MAAMmW,EAAQnW,EAAS1H,IAAI,SAC3B,GAAI6d,EACH,OAAO,OAAeA,EAAO/gB,KAAKkD,IAAI,cAAe,I,CAGxD,CAEU,kBAAAwgB,CAAmBxY,EAAkB5F,GAC9C4F,EAAQC,aAAanL,KAAKuK,UAAUvK,KAAK2tC,oBAAoBroC,KAC7D4F,EAAQ6V,MAAMhM,KAAKs2B,eACpB,CASO,aAAA/nB,CAAc/f,EAAkB+B,GACtC,GAAItF,KAAKuK,UAAU3D,OAAS,EAAG,CAC9B,IAAIklB,EAAkB9rB,KAAK0F,WAAW,QAAW1F,KAAKkD,IAAI,YAAYwC,WAAW,UAC7EsJ,EAAQhP,KAAK2tC,oBAAoBroC,GAEjCsoC,EAAiBrqC,EAAOgH,UAAUyE,GAClCyV,EAAezkB,KAAKuK,UAAUyE,GAC9By+B,EAAWhpB,EAAavhB,IAAI,YAEhC,GAAI0qC,GAAkBnpB,GACjBmpB,EAAe1qC,IAAI4oB,KAAe2hB,EACrC,OAAOG,EAKT,IAAK,IAAIjlC,EAAI,EAAGmpB,EAAMvuB,EAAOgH,UAAU3D,OAAQ+B,EAAImpB,EAAKnpB,IAAK,CAC5D,IAAIiC,EAAWrH,EAAOgH,UAAU5B,GAChC,GAAIiC,EAAS1H,IAAI4oB,KAAe2hB,EAC/B,OAAO7iC,C,EAIX,CAWO,aAAAijC,CAAczoC,EAAeC,EAAaiX,GAChD,IAAIwV,EAAM9xB,KAAKuK,UAAU3D,OACzB5G,KAAK6F,KAAKT,EAAQ0sB,EAAKzsB,EAAMysB,EAAKxV,EACnC,CAEO,gBAAAwxB,CAAiBpB,EAAuBC,EAAqBrwB,GACnEtc,KAAK6tC,cAAc7tC,KAAKqtC,gBAAgBX,GAAgB1sC,KAAKqtC,gBAAgBV,GAAe,EAAGrwB,EAChG,CAQO,oBAAAuG,GACN,OAAO7iB,KAAK2yB,WAAa3yB,KAAKuK,UAAU3D,QAAU5G,KAAKkD,IAAI,MAAO,GAAKlD,KAAKkD,IAAI,QAAS,GAC1F,CAKO,YAAAqY,CAAa1J,GACP,MAATA,IACFA,EAAQ,GAGuC,KAA7C7R,KAAKkD,IAAI,YAAYwC,WAAW,YAClCmM,IAAU,GAGX,MAAMvM,EAAWtF,KAAK0F,WAAW,kBAAmB,GAE9CsJ,EAAQ,aAAiBhP,KAAK2tC,oBAAoBroC,GAAYuM,EAAO,EAAG7R,KAAKuK,UAAU3D,OAAS,GACtG,OAAO5G,KAAKmkB,iBAAiBnkB,KAAKstC,gBAAgBt+B,GACnD,EAniBA,qC,gDAAkC,iBAClC,sC,gDAA0CgP,EAAA,EAAKtL,WAAWC,OAAO,CAAC65B,EAAa55B,c,cCxBzE,MAAMm7B,UAAiDvB,EAA9D,c,oBASC,yC,gDAA+B,IAE/B,uC,gDAA+E,CAAC,GAqLjF,CAnLW,SAAAnrC,GACTrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,SACvEjB,KAAK4pB,OAAOzpB,KAAK,YACjBoB,MAAMF,WACP,CAGU,iBAAA0rB,GAET/sB,KAAKuO,cAAc,eAAgBvO,KAAKkD,IAAI,iBAE5C,MAAMqb,EAAWve,KAAKkD,IAAI,YACpB4uB,EAAM9xB,KAAKuK,UAAU3D,OAE3B,IAAI8D,EAAa1K,KAAK0K,aAClBA,EAAa,GAChBA,IAGD,IAAIC,EAAW3K,KAAK2K,WAChBA,EAAWmnB,GACdnnB,IAGD,IAAI4nB,EAAWhU,EAASkC,aAAera,KAAKyD,IAAI0U,EAASrb,IAAI,mBAAqB,EAAIsvB,OAAOC,kBAEzFC,EAAYtsB,KAAKwH,IAAIkkB,EAAK1rB,KAAK4c,MAAMrY,EAAWD,GAAc6nB,IAClE7nB,EAAatE,KAAKgsB,MAAM1nB,EAAagoB,GAAaA,EAClD1yB,KAAK2yB,WAAaD,EAElB,IAAK,IAAIpE,EAAI,EAAGA,EAAIwD,EAAKxD,IACxBtuB,KAAK6hB,gBAAgB7hB,KAAKuK,UAAU+jB,IAAI,GAGzC,IAAIM,EAAY4D,OAAOxyB,KAAKuK,UAAUG,GAAYxH,IAAI,aAClD2rB,EAAU2D,OAAOxyB,KAAKuK,UAAUI,EAAW,GAAGzH,IAAI,aAClD0vB,EAAgB/D,EAAUD,EAC1BjkB,EAAWD,EAAa6nB,IAC3BK,EAAgB/D,EAAUD,IAAeC,EAAUD,GAAa5uB,KAAK0pB,gBAAkB/e,EAAWD,IAAe1K,KAAK0pB,gBAIvH,IAAI9R,EAAe,iBAAqB,EAAGgb,EAAcL,EAAUvyB,KAAKkD,IAAI,kBAE5E,MAAM8pB,EAAe,cAAkBpV,EAAaZ,UAC9CW,EAAe3X,KAAK0F,WAAW,gBAEjC,sBAA0BkS,GAAgB5X,KAAK0pB,iBAClD9R,EAAe,OAAH,UAAQD,IAGrB,MAAMwV,EAAUntB,KAAKkD,IAAI,eAEzB,IAGI+pB,EAHAC,GAAgB,IAChB8gB,GAAgB,IAChBC,GAAoB,IAGpBlb,EAA0F,GAC1Fmb,GAAU,EAEd,IAAK,IAAIvlC,EAAI+B,EAAY/B,EAAIgC,EAAUhC,IAAK,CAC3C,IAAIiC,EAAW5K,KAAKuK,UAAU5B,GAC1BqG,EAAQpE,EAAS1H,IAAI,SACrBirC,GAAO,EAEP9+B,EAAQmjB,OAAO5nB,EAAS1H,IAAI,aAC5BuqB,EAAO,IAAI5V,KAAKxI,GAChB++B,EAAY,eAAmB3gB,EAAM7V,EAAaZ,UAEtDiW,EAASE,EAAQvV,EAAaZ,UAC9B,IAAIq3B,GAAQ,EAEiB,QAAzBz2B,EAAaZ,UAA+C,QAAzBY,EAAaZ,UAC/CgW,GAAgBhtB,KAAKkD,IAAI,mBAAqB,WAAegqB,IAE5D,cAAkB7d,EAAO6d,EAAeF,EAAchtB,KAAKK,MAAM2X,OACpEiV,EAASjtB,KAAKkD,IAAI,2BAA4B0U,EAAaZ,UAEvDhI,EAAoB,GAAZ0jB,EAAkBsb,GAC7Bjb,EAAcub,MAGfvb,EAAc5yB,KAAK,CAAE8sB,OAAQA,EAAQriB,SAAUA,IAC/CsjC,GAAU,EACVG,GAAQ,EACRL,EAAgBh/B,EAChBi/B,EAAoBG,GAKvB,IAAIG,GAAY,EACc,QAA1B32B,EAAaZ,UAAgD,SAA1BY,EAAaZ,SAC/ChI,EAAQg/B,GAAiBtb,IAC5B6b,GAAY,GAITH,EAAYx2B,EAAa/F,OAAU,GAClCu8B,GAAaH,IAChBM,GAAY,IAKVF,GAASE,IACTv/B,EAAoB,GAAZ0jB,EAAkBsb,GACzBE,IACHC,GAAO,GAGJA,IACJpb,EAAc5yB,KAAK,CAAE8sB,OAAQA,EAAQriB,SAAUA,IAC/CojC,EAAgBh/B,EAChBi/B,EAAoBG,GAErBF,GAAU,GAIXhhB,EAAgB7d,C,CAIjB,GAAI0jB,EAAcnsB,OAAS,EAAG,CAC7B,IAAIqmC,EAAIla,EAAc,GAAGnoB,SAAS1H,IAAI,QAAS,GAE/C,OAAY6vB,GAAgByb,IAC3B,MAAM5jC,EAAW4jC,EAAK5jC,SAChBqiB,EAASuhB,EAAKvhB,OACpBjtB,KAAK0f,cAAc9U,EAAU,IAE7B5K,KAAK6hB,gBAAgBjX,GAAU,GAE/B,IAAIyE,EAAQmjB,OAAO5nB,EAAS1H,IAAI,aAC5BuqB,EAAO,IAAI5V,KAAKxI,GAEpB,MAAM0R,EAAQnW,EAAS1H,IAAI,SACvB6d,GACHA,EAAM5e,IAAI,OAAQnC,KAAKK,MAAMqtB,cAAcT,OAAOQ,EAAMR,IAEzDggB,IACAjtC,KAAK4f,iBAAiBhV,EAAUqiC,EAAGva,EAAU,G,CAIhD,CAOO,YAAAhJ,GACN,OAAO,sBAA0B1pB,KAAK0F,WAAW,gBAClD,CASO,cAAAgH,CAAepH,EAAkBy0B,GAEvC,IAAInvB,EAAW5K,KAAKuK,UAAUvK,KAAK2tC,oBAAoBroC,IAEvD,GAAIsF,EAAU,CACb,IAAIqiB,EAASjtB,KAAKkD,IAAI,eAAgBlD,KAAK0F,WAAW,gBAAgBsR,UACtE,OAAOhX,KAAKK,MAAMqtB,cAAcT,OAAO,IAAIpV,KAAKjN,EAAS1H,IAAI,WAAY,IAAKlD,KAAKkD,IAAI,oBAAqB+pB,G,CAE9G,CAEU,kBAAAvJ,CAAmBxY,EAAkB5F,GAC9C4F,EAAQ6V,MAAM5e,IAAI,OAAQnC,KAAK0M,eAAepH,GAC/C,EA7LA,qC,gDAAkC,qBAClC,sC,gDAA0CknC,EAAa95B,WAAWC,OAAO,CAACo7B,EAAiBn7B,c,kCCpCrF,MAAM67B,UAA6Cha,EAAA,EAA1D,c,oBASC,2C,iDAAkC,IAClC,kD,iDAAyC,IACzC,gD,gDAAsC,GA4GvC,CA1GQ,SAAApzB,GACNrB,KAAKsa,UAAUrZ,UAAY,YAAiBjB,KAAKsa,UAAUrZ,UAAW,CAAC,SACvEM,MAAMF,WACP,CAGU,aAAAkrB,CAAc3e,EAAa/D,EAAasb,EAAmBqU,GACpE,IAAIhD,EAEJ,MAAMkY,EAAoB1uC,KAAK2uC,uBACzBl2B,EAAWzY,KAAKkD,IAAI,YAI1B,GAFAlD,KAAKsL,OAAO,eAAgB,GAEZ,eAAZmN,GAAyC,UAAZA,GAAoC,UAAZA,GAAoC,QAAZA,EAAoB,CAEhG0M,GAAa,IAChBA,EAAY,GAGbA,EAAY/e,KAAKgS,MAAM+M,GAKvB,IAAIsU,EAAa5vB,EAAM+D,EAGJ,IAAf6rB,IACHA,EAAarzB,KAAKC,IAAIwD,IAGvB,IAAI2O,EAAOihB,EAAatU,EAEpBypB,EAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACnCC,EAAc,EAEF,QAAZp2B,IACHm2B,EAAW,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,IAG9B,IAAK,IAAIE,KAAWF,EACnB,GAAInV,EAAaqV,EAAU3pB,EAAW,CACrC0pB,EAAcC,EACd,K,CAGF,IAAIj9B,EAAQzL,KAAK4c,MAAOnZ,EAAM+D,GAAOihC,EAAe1pB,GAEhDiU,EAAmBhzB,KAAKyvB,IAAIzvB,KAAKC,IAAIwL,IAAUzL,KAAK0vB,OACpDuD,EAAQjzB,KAAKwvB,IAAI,GAAIxvB,KAAKgsB,MAAMgH,IAAa,GAC7C2V,EAAel9B,EAAQwnB,EAI3BxnB,EADc,UAAc+8B,EAAUG,GACpB1V,EAElB7gB,EAAOq2B,EAAch9B,EAkBrB2kB,EAAa,CAAE5oB,IAhBfA,EAAMxH,KAAKgsB,MAAMxkB,EAAM4K,GAAQA,EAgBN3O,IAfzBA,EAAMzD,KAAK4c,KAAKnZ,EAAM2O,GAAQA,EAeKA,KAAMA,E,MAGzCge,EAAaj1B,MAAMgrB,cAAc3e,EAAK/D,EAAKsb,EAAWqU,GAMvD,OAFAx5B,KAAKuO,cAAc,iBAAkBmgC,EAAkBM,UAAUxY,EAAWhe,KAAMge,EAAW3sB,IAAK4O,IAE3F+d,CACR,CAEU,WAAApB,CAAY/lB,GAErB,OADkBrP,KAAK2uC,uBACN1hB,OAAO5d,EAAOrP,KAAK0F,WAAW,kBAAmB1F,KAAKkD,IAAI,YAC5E,CAQO,cAAAwJ,CAAepH,EAAkBy0B,GACvC,MAAMzE,EAAYt1B,KAAK2uC,uBACjB3U,EAAgBh6B,KAAKkD,IAAI,wBAAyB,GAClD+2B,EAAWj6B,KAAK0F,WAAW,oBAAqB,GAAKs0B,EACrD3qB,EAAQ,QAAYrP,KAAKwuB,gBAAgBlpB,GAAW20B,GAE1D,OAAO3E,EAAUrI,OAAO5d,EAAOrP,KAAK0F,WAAW,kBAAmB1F,KAAKkD,IAAI,YAC5E,EArHA,qC,gDAAkC,iBAClC,sC,gDAA0CuxB,EAAA,EAAU/hB,WAAWC,OAAO,CAAC87B,EAAa77B,c,kHCxC9E,MAAMq8B,UAAajP,EAAA,EAQlB,KAAAC,GAEN,MAAMxmB,EAAUzZ,KAAKmD,SAErBsW,EAAQE,OAAO3Z,KAAKkD,IAAI,QAAS,GAAIlD,KAAKkD,IAAI,QAAS,IACvDuW,EAAQG,OAAO5Z,KAAKkD,IAAI,SAAU,GAAIlD,KAAKkD,IAAI,SAAU,IAEzD,IAAI8F,EAAIhJ,KAAKM,QACT2I,EAAIjJ,KAAKS,SAEb,GAA+B,YAA3BT,KAAKkD,IAAI,eAA8B,CAE1C,IAAIgsC,EAAKjmC,EACLkmC,EAAK,EACT11B,EAAQE,OAAO,EAAGu1B,GAClBz1B,EAAQG,OAAO5Q,EAAI,EAAGkmC,GAEtBz1B,EAAQE,OAAO3Q,EAAI,EAAGmmC,GACtB11B,EAAQG,OAAO5Q,EAAGmmC,E,KAEd,CACJ,IAAIC,EAAK,EACLC,EAAKrmC,EAETyQ,EAAQE,OAAOy1B,EAAI,GACnB31B,EAAQG,OAAOw1B,EAAInmC,EAAI,GAEvBwQ,EAAQE,OAAO01B,EAAIpmC,EAAI,GACvBwQ,EAAQG,OAAOy1B,EAAIpmC,E,CAErB,EAjCA,qC,gDAAkC,SAClC,sC,gDAA0C+2B,EAAA,EAAYttB,WAAWC,OAAO,CAACs8B,EAAKr8B,c,wBCkBxE,MAAM08B,UAAmBpP,EAAA,EAAhC,c,oBA2BC,sC,gDAA8C,IAAIqP,EAAA,EACjDC,EAAA,GAASpvC,IAAI,CACZa,UAAW,CAAC,gBAEb,IAAMguC,EAAKjqB,KAAKhlB,KAAKK,MAAO,CAC3BY,UAAW,YAAiBjB,KAAK27B,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YACzF,CAAClD,KAAK27B,QAAQ1W,cAYnB,CAhCQ,UAAA8V,CAAWnwB,EAA+CkwB,GAChE,MAAMgF,EAAS9/B,KAAKmgC,cAAcjgC,SAASC,KAAK26B,EAAa5V,QAG7D,OAFA4a,EAAO30B,aAAaP,GACpBkwB,EAAa36B,KAAK2/B,GACXA,CACR,CAkBU,iBAAAxhB,CAAkB+B,GAC3B9e,MAAM+c,kBAAkB+B,GACxBA,EAAUsb,QAAU,IAAI4T,EAAA,EACvBC,EAAA,GAASpvC,IAAI,CAAC,IACd,IAAM6uC,EAAKjqB,KAAKhlB,KAAKK,MAAO,CAC3BY,UAAW,YAAiBof,EAAUsb,QAAQ1W,SAAS/hB,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YAC9F,CAAClD,KAAK27B,QAAQ1W,SAAU5E,EAAUsb,QAAQ1W,YAE/C,EArCA,qC,gDAAkC,eAClC,sC,gDAA0Cib,EAAA,EAAkBxtB,WAAWC,OAAO,CAAC28B,EAAW18B,c,gCCdpF,MAAM68B,UAA4BjO,EAAA,EAQ9B,SAAAngC,GACTrB,KAAK0vC,YAAY,gBAAgB,OAAsB1vC,KAAKkD,IAAI,UAAW,MAC3E3B,MAAMF,WACP,CAEO,eAAA4a,GACFjc,KAAKiD,QAAQ,aAChBjD,KAAKmC,IAAI,gBAAgB,OAAsBnC,KAAKkD,IAAI,UAAW,MACnElD,KAAK+0B,cAAe,GAGrBxzB,MAAM0a,iBACP,EAnBA,qC,gDAAkC,wBAClC,sC,gDAA0CulB,EAAA,EAAW9uB,WAAWC,OAAO,CAAC88B,EAAoB78B,c,cCDtF,MAAM+8B,UAA4BnO,EAAA,EAQ9B,SAAAngC,GACTrB,KAAK0vC,YAAY,gBAAgB,OAAsB1vC,KAAKkD,IAAI,UAAW,MAC3E3B,MAAMF,WACP,CAEO,eAAA4a,GACFjc,KAAKiD,QAAQ,aAChBjD,KAAKmC,IAAI,gBAAgB,OAAsBnC,KAAKkD,IAAI,UAAW,MACnElD,KAAK+0B,cAAe,GAGrBxzB,MAAM0a,iBACP,EAnBA,qC,gDAAkC,wBAClC,sC,gDAA0CulB,EAAA,EAAW9uB,WAAWC,OAAO,CAACg9B,EAAoB/8B,c,cCMtF,MAAMg9B,UAA6BpO,EAAA,EAQ/B,SAAAngC,GACTrB,KAAK0vC,YAAY,eAAgB,KAAc71B,QAAQ7Z,KAAKkD,IAAI,UAAW,MAC3E3B,MAAMF,WACP,CAEO,eAAA4a,GACFjc,KAAKiD,QAAQ,aAChBjD,KAAKmC,IAAI,eAAgB,KAAc0X,QAAQ7Z,KAAKkD,IAAI,UAAW,MACnElD,KAAK+0B,cAAe,GAGrBxzB,MAAM0a,iBACP,EAnBA,qC,gDAAkC,yBAClC,sC,gDAA0CulB,EAAA,EAAW9uB,WAAWC,OAAO,CAACi9B,EAAqBh9B,c,cCtC9F,SAASi9B,EAAK7J,EAAShI,GACrBh+B,KAAK8vC,SAAW9J,EAChBhmC,KAAK+vC,GAAK/R,CACZ,CA+CO,SAASgS,EAAUhK,GACxB,OAAO,IAAI6J,EAAK7J,EAAS,EAC3B,CA/CA6J,EAAKI,UAAY,CACfC,UAAW,WACTlwC,KAAKmwC,MAAQ,CACf,EACAC,QAAS,WACPpwC,KAAKmwC,MAAQpgB,GACf,EACAsgB,UAAW,WACTrwC,KAAKg/B,GAAKh/B,KAAKi/B,GAAKlP,IACpB/vB,KAAKswC,OAAS,CAChB,EACAC,QAAS,WACH,EAAIvwC,KAAK+vC,IAAM/vC,KAAK+vC,GAAK,GAAqB,IAAhB/vC,KAAKswC,QAActwC,KAAK8vC,SAASl2B,OAAO5Z,KAAKg/B,GAAIh/B,KAAKi/B,KACpFj/B,KAAKmwC,OAAyB,IAAfnwC,KAAKmwC,OAA+B,IAAhBnwC,KAAKswC,SAAetwC,KAAK8vC,SAASU,YACrExwC,KAAKmwC,OAAS,IAAGnwC,KAAK+vC,GAAK,EAAI/vC,KAAK+vC,GAAI/vC,KAAKmwC,MAAQ,EAAInwC,KAAKmwC,MACpE,EACAzrC,MAAO,SAASvD,EAAGC,GAEjB,OADAD,GAAKA,EAAGC,GAAKA,EACLpB,KAAKswC,QACX,KAAK,EAAGtwC,KAAKswC,OAAS,EAAGtwC,KAAKmwC,MAAQnwC,KAAK8vC,SAASl2B,OAAOzY,EAAGC,GAAKpB,KAAK8vC,SAASn2B,OAAOxY,EAAGC,GAAI,MAC/F,KAAK,EAAGpB,KAAKswC,OAAS,EACtB,QACE,GAAItwC,KAAK+vC,IAAM,EACb/vC,KAAK8vC,SAASl2B,OAAO5Z,KAAKg/B,GAAI59B,GAC9BpB,KAAK8vC,SAASl2B,OAAOzY,EAAGC,OACnB,CACL,IAAI6mB,EAAKjoB,KAAKg/B,IAAM,EAAIh/B,KAAK+vC,IAAM5uC,EAAInB,KAAK+vC,GAC5C/vC,KAAK8vC,SAASl2B,OAAOqO,EAAIjoB,KAAKi/B,IAC9Bj/B,KAAK8vC,SAASl2B,OAAOqO,EAAI7mB,EAC3B,EAIJpB,KAAKg/B,GAAK79B,EAAGnB,KAAKi/B,GAAK79B,CACzB,GCHK,MAAMqvC,UAAuBjP,EAAA,EAQzB,SAAAngC,GACTrB,KAAK0vC,YAAY,eAAgB,GACjCnuC,MAAMF,WACP,CAGU,UAAAijC,CAAW15B,EAA+Cu5B,GACnE,IAAIH,EAASG,EAAEH,OAEX1jC,EAAQN,KAAKkD,IAAI,YAAa,MAAMmM,MAAQ,EAE5CqhC,EAAiB9lC,EAAS1H,IAAI,YAAaihC,EAAEvrB,WAC7C+3B,EAAiB/lC,EAAS1H,IAAI,YAAaihC,EAAEtrB,WAC7C+3B,EAAiBF,EACjBG,EAAiBF,EAEjBxM,EAAEta,WAAasa,EAAEtgC,OACpB6sC,GAAkBpwC,EAClBswC,GAAkBtwC,GAEV6jC,EAAEta,WAAasa,EAAEpgC,QACzB4sC,GAAkBrwC,EAClBuwC,GAAkBvwC,GAGnB,IAAI0kC,EAAQb,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAEhH,OAAQuT,EAAgBvM,EAAEjG,KAC3E+G,EAAQd,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE/G,OAAQuT,EAAgBxM,EAAElG,KAE3E6S,EAAQ3M,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAEhH,OAAQyT,EAAgBzM,EAAEjG,KAC3E6S,EAAQ5M,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE/G,OAAQyT,EAAgB1M,EAAElG,KAE/E,GAAIj+B,KAAK8kC,eAAeE,GAAQ,CAE/B,MAAMgM,EAAUhxC,KAAK6+B,SAASmG,EAAOC,GAC/BgM,EAAS,CAACD,EAAQ7vC,EAAG6vC,EAAQ5vC,GAE7B8vC,EAAUlxC,KAAK6+B,SAASiS,EAAOC,GAC/B7pB,EAAS,CAACgqB,EAAQ/vC,EAAG+vC,EAAQ9vC,GAEnC,GAAI+iC,EAAEF,YAAa,CAClB,IAAIkN,EAAoBnM,EACpBoM,EAAoBnM,EACpBoM,EAAoBP,EACpBQ,EAAoBP,EAWxB,GATI5M,EAAEta,WAAasa,EAAEtgC,OACpButC,EAAYjN,EAAEN,SACdyN,EAAYnN,EAAEN,UAENM,EAAEta,WAAasa,EAAEpgC,QACzBotC,EAAYhN,EAAEP,SACdyN,EAAYlN,EAAEP,UAGXO,EAAED,QAAS,CACd,IAAI7G,EAASzyB,EAAS1H,IAAIihC,EAAE5G,YACxBD,EAAS1yB,EAAS1H,IAAIihC,EAAE3G,YAE5B,GAAc,MAAVH,GAA4B,MAAVC,EAgBrB,GAfAoT,EAAiB9lC,EAAS1H,IAAI,gBAAiBihC,EAAE1G,eACjDkT,EAAiB/lC,EAAS1H,IAAI,gBAAiBihC,EAAEzG,eAEjDkT,EAAiBF,EACjBG,EAAiBF,EAEbxM,EAAEta,WAAasa,EAAEtgC,OACpB6sC,GAAkBpwC,EAClBswC,GAAkBtwC,GAEV6jC,EAAEta,WAAasa,EAAEpgC,QACzB4sC,GAAkBrwC,EAClBuwC,GAAkBvwC,GAGf6jC,EAAEtI,QAAS,CACd,IAAI0C,EAAe3zB,EAAS1H,IAAI,gBAC5Bo7B,EAAe1zB,EAAS1H,IAAI,gBAE5Bq7B,GACH4S,EAAYhN,EAAEtgC,MAAMurB,qBAAqBmP,EAAc4F,EAAEhH,OAAQuT,EAAiBnS,EAAanzB,UAA6BlI,IAAI,QAChImuC,EAAYlN,EAAEtgC,MAAMurB,qBAAqBmP,EAAc4F,EAAEhH,OAAQyT,EAAiBrS,EAAanzB,UAA6BlI,IAAI,SAG5HihC,EAAEpgC,QAAUogC,EAAEta,UACjBsnB,EAAYhN,EAAEP,SACdyN,EAAYlN,EAAEP,UAENO,EAAEta,WAAasa,EAAEpgC,QACzBotC,EAAYhN,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYmT,EAAgBvM,EAAEjG,KACnFmT,EAAYlN,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYqT,EAAgBzM,EAAEjG,MAIjFI,GACH8S,EAAYjN,EAAEpgC,MAAM6rB,qBAAqB0O,EAAc6F,EAAE/G,OAAQuT,EAAiBrS,EAAalzB,UAA6BlI,IAAI,QAChIouC,EAAYnN,EAAEpgC,MAAM6rB,qBAAqB0O,EAAc6F,EAAE/G,OAAQyT,EAAiBvS,EAAalzB,UAA6BlI,IAAI,SAG5HihC,EAAEtgC,QAAUsgC,EAAEta,UACjBunB,EAAYjN,EAAEN,SACdyN,EAAYnN,EAAEN,UAENM,EAAEta,WAAasa,EAAEpgC,QACzBqtC,EAAYjN,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYmT,EAAgBxM,EAAElG,KACnFqT,EAAYnN,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYqT,EAAgB1M,EAAElG,K,MAKrFkT,EAAYhN,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYmT,EAAgBvM,EAAEjG,KACnFkT,EAAYjN,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYmT,EAAgBxM,EAAElG,KACnFoT,EAAYlN,EAAEtgC,MAAMurB,qBAAqBxkB,EAAUu5B,EAAE5G,WAAYqT,EAAgBzM,EAAEjG,KACnFoT,EAAYnN,EAAEpgC,MAAM6rB,qBAAqBhlB,EAAUu5B,EAAE3G,WAAYqT,EAAgB1M,EAAElG,I,CAKtF,IAAIsT,EAAevxC,KAAK6+B,SAASsS,EAAWC,GACxCI,EAAexxC,KAAK6+B,SAASwS,EAAWC,GAE5CL,EAAO,GAAKM,EAAapwC,EACzB8vC,EAAO,GAAKM,EAAanwC,EAEzB8lB,EAAO,GAAKsqB,EAAarwC,EACzB+lB,EAAO,GAAKsqB,EAAapwC,C,CAG1B4iC,EAAO7jC,KAAK8wC,GACZjN,EAAO7jC,KAAK+mB,GAEZtc,EAASzI,IAAI,QAAS,CAAChB,EAAE8vC,EAAO,IAAM/pB,EAAO,GAAK+pB,EAAO,IAAM,EAAG7vC,EAAE6vC,EAAO,IAAM/pB,EAAO,GAAK+pB,EAAO,IAAM,G,CAGvGjxC,KAAKkD,IAAI,cACZihC,EAAEH,OAAS,GACXG,EAAEJ,SAAS5jC,KAAK6jC,GAElB,EAhJA,qC,gDAAkC,mBAClC,sC,gDAA0CxC,EAAA,EAAW9uB,WAAWC,OAAO,CAAC89B,EAAe79B,c,6ECrCjF,MAAM6+B,E,8BCDN,SAAS/sC,EAAMgtC,EAAMvwC,EAAGC,GAC7BswC,EAAK5B,SAAS6B,cACZD,EAAKE,IAAMF,EAAKG,IAAMH,EAAKI,IAAMJ,EAAKK,KACtCL,EAAKM,IAAMN,EAAKG,IAAMH,EAAKO,IAAMP,EAAKQ,KACtCR,EAAKI,IAAMJ,EAAKG,IAAMH,EAAKE,IAAMzwC,GACjCuwC,EAAKO,IAAMP,EAAKG,IAAMH,EAAKM,IAAM5wC,GACjCswC,EAAKI,IACLJ,EAAKO,IAET,CAEO,SAASE,EAASnM,EAASnsB,GAChC7Z,KAAK8vC,SAAW9J,EAChBhmC,KAAK6xC,IAAM,EAAIh4B,GAAW,CAC5B,C,iCAEAs4B,EAASlC,UAAY,CACnBC,UAAW,WACTlwC,KAAKmwC,MAAQ,CACf,EACAC,QAAS,WACPpwC,KAAKmwC,MAAQpgB,GACf,EACAsgB,UAAW,WACTrwC,KAAK+xC,IAAM/xC,KAAK4xC,IAAM5xC,KAAK8xC,IAC3B9xC,KAAKkyC,IAAMlyC,KAAKgyC,IAAMhyC,KAAKiyC,IAAMliB,IACjC/vB,KAAKswC,OAAS,CAChB,EACAC,QAAS,WACP,OAAQvwC,KAAKswC,QACX,KAAK,EAAGtwC,KAAK8vC,SAASl2B,OAAO5Z,KAAK8xC,IAAK9xC,KAAKiyC,KAAM,MAClD,KAAK,EAAGvtC,EAAM1E,KAAMA,KAAK4xC,IAAK5xC,KAAKgyC,MAEjChyC,KAAKmwC,OAAyB,IAAfnwC,KAAKmwC,OAA+B,IAAhBnwC,KAAKswC,SAAetwC,KAAK8vC,SAASU,YACzExwC,KAAKmwC,MAAQ,EAAInwC,KAAKmwC,KACxB,EACAzrC,MAAO,SAASvD,EAAGC,GAEjB,OADAD,GAAKA,EAAGC,GAAKA,EACLpB,KAAKswC,QACX,KAAK,EAAGtwC,KAAKswC,OAAS,EAAGtwC,KAAKmwC,MAAQnwC,KAAK8vC,SAASl2B,OAAOzY,EAAGC,GAAKpB,KAAK8vC,SAASn2B,OAAOxY,EAAGC,GAAI,MAC/F,KAAK,EAAGpB,KAAKswC,OAAS,EAAGtwC,KAAK4xC,IAAMzwC,EAAGnB,KAAKgyC,IAAM5wC,EAAG,MACrD,KAAK,EAAGpB,KAAKswC,OAAS,EACtB,QAAS5rC,EAAM1E,KAAMmB,EAAGC,GAE1BpB,KAAK+xC,IAAM/xC,KAAK4xC,IAAK5xC,KAAK4xC,IAAM5xC,KAAK8xC,IAAK9xC,KAAK8xC,IAAM3wC,EACrDnB,KAAKkyC,IAAMlyC,KAAKgyC,IAAKhyC,KAAKgyC,IAAMhyC,KAAKiyC,IAAKjyC,KAAKiyC,IAAM7wC,CACvD,GAGF,KAAe,SAAUgxC,EAAOv4B,GAE9B,SAASw4B,EAASrM,GAChB,OAAO,IAAImM,EAASnM,EAASnsB,EAC/B,CAMA,OAJAw4B,EAASx4B,QAAU,SAASA,GAC1B,OAAOu4B,GAAQv4B,EACjB,EAEOw4B,CACR,CAXD,CAWG,E","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\t// Explicitly disposing cursor to avoid memory leak of cursor adding\n\t\t// keyboard events after parent chart has been disposed\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.dispose();\n\t\t}\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\t/**\n\t * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\n\t */\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\") {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\t\t\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\t\t\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\t\n\n\tprotected _nextTime(time:number, count:number, baseInterval:ITimeInterval){\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\t\t\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif(result.index >= len){\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time:number, count:number, _baseInterval:ITimeInterval){\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\t\t\t\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\t\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\t\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\t\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\t\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\t\t\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\t\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\t\t\t\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\t\t\t\t\t\t\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","Math","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","min","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","_fy","reverse","prevBottom","bounds","_dispose","classNames","concat","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","fill","fromHex","fillOpacity","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","key","dir","focused","m","nextPosition","_alwaysShow","alwaysShow","isFocus","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","remove","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisBullet","uid","AxisLabel","AxisLabelRadial","AxisRenderer","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","once","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_handleRangeChange","_dataGrouped","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstTime","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","current","modifiedDifference","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","firstDate","outOfSelection","_adjustStartIndex","_markDirtyPrivateKey","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_getMinorInterval","minorGridInterval","_prepareAxisItems","nextGridUnit","format","previousValue","formats","minorLabelsEnabled","minorGridEnabled","minorDuration","_dataItems","processDataItem","date","dateFormatter","labelEndValue","minorTimeUnit","minorCount","mmm","previousMinorValue","minorValue","minorFormats","minorDataItem","minorDataItems","minorEndValue","minorLabel","j","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","_handleSizeDirty","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","firstDay","NaN","adjustPosition","snap","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","positionToDate","dateToPosition","dtime","tooltipValue","_nextTime","GaplessDateAxis","valueFields","_getDates","_customDates","_dates","dates","found","_updateAllDates","extraMax","extraMin","len","baseCount","unshift","itemValue","valueToIndex","findex","floor","startValue","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","_frequency","realDuration","now","previousDataItem","selectedItems","_getIndexes","_m","_addMinorGrid","timeUnit2","previousLabel","worse","_pickWorse","dataItemA","dataItemB","valueA","valueB","getDate","mTimeUnit","maxValue","minorSelectedItems","firstValue","items","c","fullDuration","originalValue","realValue","_hasDate","_baseInterval","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_valuesDirty","_getMinMax","getMM","letter","_getSelectionMinMax","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","decCount","fillEndPosition","labelEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","selectionStrictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","ds","setting","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","stroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","dataSet","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","markDirtyText","hideTooltip","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","minSelection","dl","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}